{
    "title": "Is there more to computer science than just coding? - Quora",
    "tags": [
        "Career Advice for Computer Programmers",
        "Career Advice in Computer Science",
        "Existence Question",
        "Computer Programming"
    ],
    "response": [
        {
            "author_info": {
                "name": "Aditya Shanker",
                "href": "/profile/Aditya-Shanker"
            },
            "answer_text": "The great Dijkstra once famously said \"Computer Science is no more about computers than astronomy is about telescopes\" I totally agree with Dijkstra with his view. The name Computer Science itself is self descriptive of the discipline. It is purely and simply the science of computing. At it's core, computer science is about coming up optimal solutions to various real world computational problems. Always remember, we humans can in our minds and with a paper and pencil solve any problem that a computer could solve. We simply write programs because computers are faster and more accurate than us humans in performing large scale or complex calculations. One could argue that the presence of fields of study such as Operating Systems, Network Systems and the various other more \"hardware\" or \"engineering\" related disciplines would challenge Dijkstra's statement. However, being a Computer Science student myself in the past, I would strongly argue that even in a topic such as Operating Systems, computer scientists are more interested and dedicated towards the algorithmic and computational aspects of these systems such as the optimal distribution of parallel tasks between the various processes of an OS rather than the engineering aspects such as what underlying hardware could make the parallelization effort more effective. Coding and computers and processors and chip designs come into the picture much later for computer scientists. For computer scientists, an optimal code is not one that runs faster on a four core machine than one a single core machine. The speed and efficiency of the code or the algorithm is benchmarked against the scale and magnitude of the input.  Although I would agree that with the recent advent of newer parallel computational models, computer scientists have started to incorporate hardware level assumptions into their algorithm design. ",
            "date": "Answered May 20, 2013",
            "views": "45",
            "upvotes": " View 8 Upvoters ",
            "upvoters": [
                {
                    "user_id": "Pradeep Kumar",
                    "user_href": "/profile/Pradeep-Kumar-3861"
                },
                {
                    "user_id": "Batool Albuali",
                    "user_href": "/profile/Batool-Albuali"
                },
                {
                    "user_id": "Nick Pappas",
                    "user_href": "/profile/Nick-Pappas-2"
                },
                {
                    "user_id": "Vaishnavi Ramesh",
                    "user_href": "/profile/Vaishnavi-Ramesh-15"
                },
                {
                    "user_id": "Usame \u0130slamo\u011flu",
                    "user_href": "/profile/Usame-\u0130slamo\u011flu-1"
                },
                {
                    "user_id": "Kumar Raju",
                    "user_href": "/profile/Kumar-Raju-65"
                },
                {
                    "user_id": "Saurav Kumar",
                    "user_href": "/profile/Saurav-Kumar-163"
                },
                {
                    "user_id": "Matt Goodstein",
                    "user_href": "/profile/Matt-Goodstein"
                }
            ]
        },
        {
            "author_info": {
                "name": "Jan Christian Meyer",
                "href": "/profile/Jan-Christian-Meyer"
            },
            "answer_text": "Programming produces programs, science produces theories. Insofar as it is necessary for computer scientists to employ programs in order to investigate or demonstrate theories, they need to be capable programmers in order to make it happen. The way educational institutions often name their courses, one might think that computer science amounts to programming, math amounts to calculating, chemistry amounts to carefully handling fluids in bottles, sociology amounts to pulling statistics from questionnaires, and so on. The skill set that a science requires is not the science itself, but it is necessary to drill techniques for long enough that finding out how they work is not a distraction when you need them. I would say that not only is there more to computer science than writing code, it is a different thing altogether. Even so, although computer science doesn't necessarily mean that you have to program things all the time, you really need to be at least kind of good at it to fully understand the problems you are dealing with. At two years, I would expect there is still quite a lot of practice to go before you can begin to lift out a useful overview. There are more interesting things than programming exercises waiting at the other end, but I'm afraid there aren't any shortcuts that won't compromise what you can achieve when you get there. ",
            "date": "Answered May 19, 2013",
            "views": "63",
            "upvotes": " View 3 Upvoters",
            "upvoters": [
                {
                    "user_id": "Batool Albuali",
                    "user_href": "/profile/Batool-Albuali"
                },
                {
                    "user_id": "Yallah AlSuburbia",
                    "user_href": "/profile/Yallah-AlSuburbia"
                },
                {
                    "user_id": "Neil Jones",
                    "user_href": "/profile/Neil-Jones-10"
                }
            ]
        }
    ]
}