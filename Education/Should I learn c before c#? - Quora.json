{
    "title": "Should I learn c before c#? - Quora",
    "tags": [
        "Learning to Program",
        "Programming Languages"
    ],
    "response": [
        {
            "author_info": {
                "name": "Viktor T. Toth",
                "href": "/profile/Viktor-T-Toth-1"
            },
            "answer_text": "You do not need to ever learn C or C++ before you learn C#. You can become a highly competent C# programmer without ever learning C or C++. Having said that, if you want to be more than just a programmer: If you actually wish to understand how things work under the hood, why features present in C#, such as garbage collection and reference counting, exist and what needs to be done when they are absent, if you want to build a mental model of how complex human-readable expressions in a programming language translate into instructions executable by a computer processor: then yes, definitely, learn a little bit of machine language first, and C, and also C++. By way of analogy, you can become a very competent driver without ever learning the basic principles of the operation of the internal combustion engine or a transmission. But if you make the effort to learn those things, so that you actually understand (at least superficially) what actually happens when you press down on the accelerator pedal or switch gears, you become a better driver. It is not a prerequisite. But it is very useful. And yes, if you embark on this path, it makes sense to start with the building blocks (machine language, C) first. This way, you will not have to unlearn false preconceptions that you might otherwise build in your mind as you learn C# without understanding the needs and principles that underlie many of its features. Let me be clear: C# is a beautiful language. I really enjoy working on C# projects. And you can become a very competent C# programmer without ever looking at C or C++ code. But those foundations help, not just with C# but also with other programming languages you may encounter in the future. In fact, it is precisely those foundations that can make you a versatile professional as opposed to a one-trick pony: A professional who recognizes programming languages for what they are, tools, and understands the principles that help us choose the best tool for any given job.  I thank my generous supporters on Patreon. If you like my answers, please consider joining them. ",
            "date": "Answered October 18, 2020",
            "views": "52",
            "upvotes": " View 146 Upvoters ",
            "upvoters": [
                {
                    "user_id": "Alan Mellor",
                    "user_href": "/profile/Alan-Mellor"
                },
                {
                    "user_id": "Mariam Siham",
                    "user_href": "/profile/Mariam-Siham"
                },
                {
                    "user_id": "Naftali Murgor",
                    "user_href": "/profile/Naftali-Murgor"
                },
                {
                    "user_id": "Doug Cox",
                    "user_href": "/profile/Doug-Cox-8"
                },
                {
                    "user_id": "Sowmya. Kamera",
                    "user_href": "/profile/Sowmya-Kamera-1"
                },
                {
                    "user_id": "Francisco Z\u00fa\u00f1iga Frias",
                    "user_href": "/profile/Francisco-Z\u00fa\u00f1iga-Frias"
                },
                {
                    "user_id": "Christophe Champagne",
                    "user_href": "/profile/Christophe-Champagne"
                },
                {
                    "user_id": "Gagandeep Singh",
                    "user_href": "/profile/Gagandeep-Singh-54"
                },
                {
                    "user_id": "Deepak Pradeep Shilkar",
                    "user_href": "/profile/Deepak-Pradeep-Shilkar"
                },
                {
                    "user_id": "John Knight",
                    "user_href": "/profile/John-Knight-19"
                }
            ]
        },
        {
            "author_info": {
                "name": "Roger DiPaolo",
                "href": "/profile/Roger-DiPaolo"
            },
            "answer_text": "I\u2019ve said it before many times, and I\u2019ll say it again. Programming languages are tools. Consider that you have a toolbox full of hand tools. Is the hammer better than the screwdriver? Is the wrench better than the level? It all depends on exactly what you need to get done - different tasks require different tools. C# and C are different tools intended for different kinds of programming problems. Granted, there is a set of programming problems that could be solved with either language - but the astute programmer will understand the strengths and weaknesses of each language and use the language with the strengths that benefit the specific task to be accomplished. C# is a high level language intended to be used for applications programming on a traditional computing device with a powerful processor and large amounts of memory. C# hides lower level details in order to provide the benefits of high level abstractions to the programmer. Remember that C# was Microsoft\u2019s response to Java, intended to be used in the same kinds of applications where Java is used. It was not intended to compete with C in the domain where C excels. C is a low level language intended to be used for real-time and hardware-interfacing tasks. C is \u201cbare metal\u201d by design, avoiding any abstractions that might get in the way of providing maximum performance and the ability to control very low level details important to interfacing directly to the underlying hardware. C is very effective at producing superior results on resource constrained platforms (small processors and very limited memory). So, in reality neither language is better than the other when no context is considered. Which language is better depends entirely on what the specific programming task to be accomplished is. ",
            "date": "Answered September 22, 2017",
            "views": "1",
            "upvotes": " View 12 Upvoters",
            "upvoters": [
                {
                    "user_id": "Okan",
                    "user_href": "/profile/Okan-8"
                },
                {
                    "user_id": "Emre Ari",
                    "user_href": "/profile/Emre-Ari-1"
                },
                {
                    "user_id": "Carlos Hernandez",
                    "user_href": "/profile/Carlos-Hernandez-355"
                },
                {
                    "user_id": "Moemen Hegazy",
                    "user_href": "/profile/Moemen-Hegazy-1"
                },
                {
                    "user_id": "Zebulon McCorkle",
                    "user_href": "/profile/Zebulon-McCorkle-1"
                },
                {
                    "user_id": "Derek Baker",
                    "user_href": "/profile/Derek-Baker-21"
                },
                {
                    "user_id": "James Barton",
                    "user_href": "/profile/James-Barton-129"
                },
                {
                    "user_id": "Pedro Henrique Bonif\u00e1cio",
                    "user_href": "/profile/Pedro-Henrique-Bonif\u00e1cio"
                },
                {
                    "user_id": "Richard Nazar",
                    "user_href": "/profile/Richard-Nazar"
                },
                {
                    "user_id": "Michael Hall",
                    "user_href": "/profile/Michael-Hall-353"
                }
            ]
        }
    ]
}