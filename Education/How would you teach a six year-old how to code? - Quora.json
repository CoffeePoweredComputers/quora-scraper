{
    "title": "How would you teach a six year-old how to code? - Quora",
    "tags": [
        "Teaching",
        "Learning to Program",
        "Children"
    ],
    "response": [
        {
            "author_info": {
                "name": "Lasitha Dilshan",
                "href": "/profile/Lasitha-Dilshan"
            },
            "answer_text": "Computer programming is an in-demand and potentially lucrative career path, so these days, parents may hope their children grow up to be software programmers. If you want to teach your kids how to program, where do you start? Try a few of the kid-friendly programming languages and tools on this list. 01 of 07 Scratch  Scratch. Screen Capture Scratch is a free kids programming language developed by MIT's Lifelong Kindergarten Lab. The free language is supplemented by getting-started tutorials, curriculum instructions for parents, and a robust user community. There are even cards you can use to learn Scratch programming concepts away from the computer. Scratch uses a building-block visual interface to create a scaffolded experience for kids (and parents). You stack together programming components, such as actions, events, and operators. Each block has a shape that only allows it to be combined with a compatible object. \"Repeat loops,\" for example, are shaped like a sideways \"U\" to let you know that you need to put blocks in between the start and stop of a loop. Scratch can be used to make real animations and games using either prepopulated images and characters or by uploading new ones. Scratch can also be used without an internet connection. Kids can optionally share their creations on Scratch's online community. Because Scratch is free and so well supported, it's one of the first suggestions for kid-friendly programming, and it's easy to see the influence of Scratch in many other kid-friendly programming languages listed here, such as Blockly. Suggested ages: 8 to 16 Requirements: A computer running Mac, Windows, or Linux 02 of 07 Blockly  Screen Capture (Marziah Karch) Blockly is Google's refinement of Scratch using the same interlocking building blocks metaphor, but it can output code in several different programming languages. Currently, this includes JavasScript, Python, PHP, Lua, and Dart. That makes Blockly a visual editor rather than just a kid-friendly programming language. You can see the code along the side of your screen as you link blocks together, and you can switch programming languages on the fly to see the difference in language syntax for the same basic program. This makes Blockly ideal for teaching code to a wide range of ages, including older kids and adults who may not appreciate the younger-skewed cat and cartoons of Scratch. If this sounds like it would be an amazing transition from Scratch, Google is, in fact, working with MIT to develop the next generation of Scratch based on the Blockly platform. Blockly is also used as the backbone for the Android App Inventor, which can be used to develop working Android apps. MIT has taken control over what used to be a Google project. Blockly is not as fully developed as Scratch yet, and there are not as many available tutorials. However, Blockly looks to have a great future as a robust programming environment for programmers of all ages. Suggested age: 10+ Requirements: A computer running Windows, Mac OS, or Linux 03 of 07 Alice  Screen Capture Alice is a free 3-D programming tool designed to teach the concepts of object-oriented programming languages like C++. It uses the familiar approach of building blocks to allow children to create games or animations by programming camera motions, 3D models, and scenes. The drag and drop interface and easy play button may be a little less confusing for some students than Scratch's cluttered interface. Programs, or \"Methods\" in Alice, can be converted into a Java IDE such as NetBeans so that programming students can make the transition from a visual building block interface to a standard programming language. Alice is developed by Carnegie-Melon University. The website may not look slick, but the program is still being developed and researched. Note: If you install Alice on a Mac, you will have to enable installation by going to System Preferences > Security and Privacy > Allow apps downloaded from: App Store and Identified Developers. (You can change your security settings when installation is complete.) Suggested age: 10+ Requirements: Computer running Mac, Windows, or Linux 04 of 07 Swift Playgrounds  Screen capture Swift is a programming language used to build iOS apps. Swift Playgrounds is an iPad game designed to teach kids how to program in Swift. Swift is a free download from Apple and does not require any prior coding knowledge. The app contains a lot of tutorials on different Swift commands that are designed, in this case, to move a character named Byte along a 3D world. Although no programming knowledge is required, kids need to know how to read the tutorials and have some persistence for problem-solving. The drag-and-drop code eliminates typos, but Swift Playgrounds does not use the interlocking block interface. Once your children are proficient in Swift Playgrounds, they can start developing in Swift. Suggested age: 10+ Requirements: iPad 05 of 07 Twine  Screen capture Twine is for children who are interested in creating games and telling stories, and who get frustrated with the technical details of programming. Twine is a free nonlinear storytelling app that is used by users of all ages, including a large number of adults and educators. With Twine, you don't need to learn any code. Rather than teaching users how to code, it teaches them how to structure and present nonlinear games and stories. Twine stories consist of pages of text and images, like websites. The design interface shows the connected pages, each of which can be modified with text, links, and images. It works especially well for \"choose your own adventure\" type games where each player choice may go to a new branch of the story. While this app does not teach coding, it does teach a lot of planning and design skills that are vital for game designers and storytellers. The app is well supported with a support wiki, tutorials, and an active user community. You can create Twine stories online through the hosted app or download an app for offline editing. Suggested Age: 12+ (strong readers recommended) Requirements: Windows, Mac OS, or Linux 06 of 07 LEGO Mindstorm Robotics  Westend61 / Getty Images Another approach to learning to program is to look at robotics. Many kids respond to the idea of programming things that work in the real world. There are a wide variety of robotics kits and languages you can use to program them, but the LEGO Mindstorms system enjoys one of the largest user communities and a kid-friendly visual programming app. You can download the programming environment for free, but you will need to have access to a LEGO Mindstorms kit to make the program run. That doesn't necessarily mean you have to buy one. Some schools and public libraries have kits available for student use, or you may want to find a First LEGO League near you. LEGO EV3 programming software can be run on tablets and computers, and it uses a building-block (in this case, a LEGO block) metaphor, just as Scratch and Blockly do, although LEGO's version tends to build the program more horizontally and looks more like a flowchart. Students make combinations of actions, variables, and events to manipulate their LEGO Mindstorms creations. The programming language is simple enough for younger kids while still being challenging for older ones and even adults. In addition to the LEGO Mindstorms programming environment, LEGO uses an open-source Linux kernel that can be modified and programmed by traditional programming languages like Python and C++. Technical requirements: The EV3 programming language runs on Mac, Windows, Android, and iOS. To run the programs rather than debugging them, you need one or more LEGO EV3 robots. Up to six robots can be daisy-chained for more complex programs. Suggested Age: 10+ (Younger kids can use this with supervision) Requirements: A computer running Mac OS or Windows or a tablet running Androidor iOS 07 of 07 Kodu  Image Courtesy Microsoft Kodu is a game-programming app from Microsoft designed for the Xbox 360. The Windows version is free, but the Xbox 360 version is a paid app. Kids can use the app to explore and design games in a 3D world. The graphic interface of Kodu is engaging, and programming for the Xbox version can be done entirely from the game controller. Kodu is an older but still solid choice if you have hardware that supports it. Unfortunately, there's no Xbox One version of Kodu, and future development looks unlikely. However, the Xbox and Windows versions are fully developed, which is why it is the only \"abandoned\" kids programming language on this list. Suggested Age: 8 to 14 Requirements: Windows 7 and below or Xbox 360 Get Your Kids Started Coding with These Programming Languages ",
            "date": "Answered October 7, 2018",
            "views": "7",
            "upvotes": " View 16 Upvoters ",
            "upvoters": [
                {
                    "user_id": "Jose Martinez",
                    "user_href": "/profile/Jose-Martinez-1602"
                },
                {
                    "user_id": "Vivek Burva",
                    "user_href": "/profile/Vivek-Burva"
                },
                {
                    "user_id": "Chandan Kumar",
                    "user_href": "/profile/Chandan-Kumar-1536"
                },
                {
                    "user_id": "Jeff Mcneill",
                    "user_href": "/profile/Jeff-Mcneill"
                },
                {
                    "user_id": "Nancy Ashmore",
                    "user_href": "/profile/Nancy-Ashmore"
                },
                {
                    "user_id": "Marshal Gwata",
                    "user_href": "/profile/Marshal-Gwata"
                },
                {
                    "user_id": "Vernon Morris",
                    "user_href": "/profile/Vernon-Morris"
                },
                {
                    "user_id": "Chaitanya Pinnali",
                    "user_href": "/profile/Chaitanya-Pinnali"
                },
                {
                    "user_id": "Akanksha Shukla",
                    "user_href": "/profile/Akanksha-Shukla-249"
                },
                {
                    "user_id": "Iulian Dima",
                    "user_href": "/profile/Iulian-Dima-3"
                }
            ]
        },
        {
            "author_info": {
                "name": "Eric Hawk",
                "href": "/profile/Eric-Hawk-1"
            },
            "answer_text": "You could expose them to Scratch Jr. (not even reading ability is required, geared toward 5\u20137 year olds\u2026and stresses the concept of sequencing commands to achieve goals. It was tested and refined through educator observation of children in that age range interacting with it on tablet computers.) Scratch Jr - Wikipedia It has been used in kindergarten classrooms at the Eliot-Pearson Children's School in Medford, affiliated with the Tufts University, and in the Jewish Community Day School in Watertown,Boston. ScratchJr - Home If the child is readily able to use it, you could consider bumping it up to full-fledged Scratch: Scratch (programming language) - Wikipedia Scratch - Imagine, Program, Share Code.org: Anybody can Learn has online courses for children. Courses 1 and 2 are appropriate for ages 4\u20138 (Course 2 requires reading ability). The course uses Blockly, another visual programming language similar to Scratch. Kodable and Kodu are similar, commercial applications creating a similar environment on the iPad and Windows PC/Xbox, respectively. From looking at the introductory videos, Kodable is used with children as young as those in Kindergarten, while Kodu was used by older elementary school students. Kodu focuses on game creation. Kodable: Programming Curriculum for Kids Kodu | Home ",
            "date": "Answered January 9, 2017",
            "views": "32",
            "upvotes": " View 6 Upvoters",
            "upvoters": [
                {
                    "user_id": "Asee Shrestha",
                    "user_href": "/profile/Asee-Shrestha-1"
                },
                {
                    "user_id": "Jeff Mcneill",
                    "user_href": "/profile/Jeff-Mcneill"
                },
                {
                    "user_id": "Vineet Guleria",
                    "user_href": "/profile/Vineet-Guleria"
                },
                {
                    "user_id": "Iulian Dima",
                    "user_href": "/profile/Iulian-Dima-3"
                },
                {
                    "user_id": "Singh Nishant",
                    "user_href": "/profile/Singh-Nishant-9"
                },
                {
                    "user_id": "Jack Coe",
                    "user_href": "/profile/Jack-Coe-3"
                }
            ]
        }
    ]
}