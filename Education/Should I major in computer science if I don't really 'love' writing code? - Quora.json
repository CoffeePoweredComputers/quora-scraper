{
    "title": "Should I major in computer science if I don't really 'love' writing code? - Quora",
    "tags": [
        "Computer Programming Advice",
        "Career Advice in Computer Science",
        "Computer Science Education",
        "Academic and Educational Advice"
    ],
    "response": [
        {
            "author_info": {
                "name": "Justin Tang",
                "href": "/profile/Justin-Tang-17"
            },
            "answer_text": "As others have suggested, coding is an important part of computer science as it is an essential tool to apply the discipline.  However, don't let that deter you from computer science and related engineering majors -- especially if you haven't taken the mid- or upper-level courses yet.  For the rest of this post, I am presuming you're transitioning from high school to college. I personally went through a similar situation coming right out of high school and it actually lasted through a good part of undergrad.  I was fascinated by computers and had the aptitude for math and science, but hated programming with a passion due to my high school CS experience.  My first two years in biomedical engineering took my through a few programming courses that completely changed my view of the discipline.  In fact, it convinced me to take enough additional CS classes to learn about programming and computers that prompted me to switch my major to computer engineering.  From there, I found out about how software can interact with hardware which became my favorite part of the field.  Now I know my passion is in embedded systems and writing firmware. But let's back up a bit.  Here is a couple of questions for you: What about computer science do you 'like'?- You like computers or technology in general and want to know how it all       works.- You like the logic problems that CS enables you to solve.- You just like to build things and see them work.- You like the career outlook or the people in that field. What about coding do you not 'love'?- It's physically uncomfortable sitting all day or staring at the monitor too long.- You feel you lack the patience to code.- You feel you lack the creativity to code.- You feel you're not good at it and are frustrated.- You find the courses boring. I'm sure there are many more reasons one can list to answer those questions.  Hopefully, as you think about these questions you can narrow down a little more what it is that bothers you about coding and whether you truly have passion for the discipline. In my opinion, if you agree with the first set of statements and are excited about what all that means, then that's all the reasons you need to make computer science a good major for you.  The second set of statements are minor things that detract from your experience a little but are easily fixable.  The best part is, many people come across these issues and much of that will likely fix themselves as you complete your education. What you should know is that computer science is a very broad field as is computer and electrical engineering which are related to that.  Some schools make a distinction between them, others are just specializations under a single major.  Find out more about each to see what it is that you like.  If you still don't find your answer, broaden that scope to engineering or the sciences in general. Sometimes, you just have to take the plunge and live the experience to truly know.  Find out if there is someone in the industry that you can shadow for a day.  If you already have some skills, see if someone will take an intern for the summer (even for free).  Go to a nearby university and sit in on a summer class.  If you still don't know, just major in CS.  The worst you will do is to spend some time to figure out this is truly not what you want which is a worthy investment. I'm still relatively new to my career (four years as a software engineer) so I'm still learning about the field.  I don't love every project I do or writing code all the time.  But I find it depends on my passion for that problem at hand more than anything.  If the problem is interesting, I can spend endless hours so I can feel the satisfaction of solving it.  The other thing I've found is software engineering encompasses many more activities than just coding up new software.  You sometimes design the software, write up the specification, but other code it.  Or you already have the software and have to merely patch it.  Figuring out how it all works (or doesn't work) can consumes more of your time.  Learning about technologies you write your software to can be a major part of your work.  As you get more experience on the job, you'll likely do less actual coding.  At some point, you may be offered a management position.  The role you play once you have a career may not even be what you studied.  But your education will get you started and CS is not a bad way to start. Edit: Here's an interesting post that may be related to what you're going through:For those who have tried to learn programming and stopped, what kept you from continuing? ",
            "date": "Answered April 19, 2014",
            "views": "147",
            "upvotes": " View 34 Upvoters",
            "upvoters": [
                {
                    "user_id": "Jessica Su",
                    "user_href": "/profile/Jessica-Su"
                },
                {
                    "user_id": "Colby Wright",
                    "user_href": "/profile/Colby-Wright-19"
                },
                {
                    "user_id": "Mctripp .",
                    "user_href": "/profile/Mctripp"
                },
                {
                    "user_id": "Travis Sanders",
                    "user_href": "/profile/Travis-Sanders-37"
                },
                {
                    "user_id": "Joseph Glass",
                    "user_href": "/profile/Joseph-Glass-8"
                },
                {
                    "user_id": "Erik Martines Sanches",
                    "user_href": "/profile/Erik-Martines-Sanches"
                },
                {
                    "user_id": "CJay Taylor",
                    "user_href": "/profile/CJay-Taylor"
                },
                {
                    "user_id": "Mateusz Blommaert",
                    "user_href": "/profile/Mateusz-Blommaert"
                },
                {
                    "user_id": "Gulam Mohiddin",
                    "user_href": "/profile/Gulam-Mohiddin"
                },
                {
                    "user_id": "Melissa Chen",
                    "user_href": "/profile/Melissa-Chen-57"
                }
            ]
        },
        {
            "author_info": {
                "name": "Guy Klose",
                "href": "/profile/Guy-Klose-1"
            },
            "answer_text": "I've been programming since the days of \"bit-slice microprocessors\" (which is to say, ancient times) and a couple thoughts immediately come to mind for me. I don't code for fun -- I don't even call it coding, and I am not a \"coder\". I am a software engineer, and coding/programming is just a small part of what I do. I once sat in on an interview with a new grad from Carnegie Mellon (a pretty high-powered school) and the candidate didn't have much experience, so about half of his resume was a list of courses he had taken. One of those courses was called \"Software Engineering\". This is a favorite of mine, so I asked him what was up with that course, since there is so much variation in what that means to different people. He kind of hemmed and hawed for a second and then admitted that he had dropped the course. Why? \"Well, we were organized into project teams, and my team kept meeting, and we kept arguing about stuff and never got anything done.\" I said, \"YES! That's exactly what software engineering is all about!\" Of course I was being facetious, but I really wasn't that far off the mark. A good deal of software engineering, of good system design, is about the thought that goes behind actual code. In some cases, that is kind of loosely run, but in other cases, there is a whole development process, with lots of documentation (and reviews) before code is written. Of course, every company is different, and every situation is different. My wife got a master's in IS, from Northeastern. She was horrible in programming back then, and really struggled with many of the technical classes. I spent a lot of time tutoring her. Professionally, she kind of started out in documentation, moved on to release engineering, then specialized in localization project management, spent some time substitute teaching in elementary school classrooms, and she counts her classroom experience as being really good training for getting back into project management (but this time, it is in the financial services industry, not in tech). In summary, there's room for all kinds of expertise and it doesn't have to be all about programming. ",
            "date": "Answered February 11, 2015",
            "views": "44",
            "upvotes": " View 8 Upvoters",
            "upvoters": [
                {
                    "user_id": "Mctripp .",
                    "user_href": "/profile/Mctripp"
                },
                {
                    "user_id": "Greg Skinner",
                    "user_href": "/profile/Greg-Skinner-1"
                },
                {
                    "user_id": "Dre Price",
                    "user_href": "/profile/Dre-Price-5"
                },
                {
                    "user_id": "Sowmya Cs",
                    "user_href": "/profile/Sowmya-Cs"
                },
                {
                    "user_id": "Michigan Jerry",
                    "user_href": "/profile/Michigan-Jerry"
                },
                {
                    "user_id": "Quora User",
                    "user_href": "/profile/Stark-43"
                },
                {
                    "user_id": "Lim Hoang",
                    "user_href": "/profile/Lim-Hoang"
                },
                {
                    "user_id": "Tarun Singh",
                    "user_href": "/profile/Tarun-Singh-54"
                }
            ]
        }
    ]
}