{
    "title": "What should I learn in computer science? - Computer science - Quora",
    "tags": [
        "Technology Trends",
        "Computer Science"
    ],
    "response": [
        {
            "author_info": {
                "name": "Anil Agnihotri",
                "href": "/profile/Anil-Agnihotri-31"
            },
            "answer_text": "Technology changes quickly and it can be difficult for academic programs to keep pace. Still, if computer science students are to contribute meaningfully to the field in either industry or research jobs, it\u2019s critical that they learn modern computing skills. Here are five subjects I think every higher education institution should teach their undergraduate computer science majors: 1. Parallel Programming The single, standalone server with one CPU has gone the way of the dodo bird, displaced by the cloud, server farms and multithreaded parallel processors. Yet colleges and universities are still mainly teaching their undergraduates sequential programming\u2014programs that execute instructions one after the other\u2014as they have for decades. Modern computing environments and massive data sets demand not just that we process multiple instructions simultaneously across multiple servers (distributed computing), but also that programs be written to process multiple instructions simultaneously on multicore chips within multiple servers and devices. Too often, parallel programming is relegated to a single chapter in a textbook, easily skipped when time in the semester runs short. To prepare students for high-performance computing, big data, machine learning, blockchain and more, we must teach them to both think and program in parallel. 2. Green Programming With the ubiquity of battery-driven computers, energy efficiency is more important than ever. The more we ask our smart devices to do, the more energy they need to do it and the more quickly they exhaust their batteries. The same is true for massive server clusters, where fires related to energy-consumption are not uncommon as we demand faster and faster processing of more and more data. How you architect a software program directly affects how much energy is needed to execute the program, yet few undergraduate programs teach students about this relationship. In a fast-warming world, one in which we dream big dreams about all the ways artificial intelligence and high-performance computing will make our lives better, it is imperative that we write energy-optimized software. Students will not be able to do that if we don\u2019t teach them how. 3. Collaborative Development Academia persists in trying to measure what individual students know. In most programming classes, students start from a blank screen and write clean code independently or, less often, with a partner. But this isn\u2019t how software is engineered in the real world. Professional software engineers almost always start with someone else\u2019s code and work collaboratively in large groups to modify, improve and correct that code, which is then integrated with code written by other engineers in other groups. Related: Join Oracle Academy todayIt\u2019s common for software development groups to include people from different countries, in different time zones. Working effectively requires team members to communicate well in different languages and across different cultures. It also means that someone else needs to be able to look at your code and know what it does, so following formatting standards and providing clear commenting are critical. However, in our desire to ensure that each student understands every programming concept and rule of syntax, we overlook opportunities to teach collaborative software development and help students develop critical professional skills. 4. Hardware Architecture In the minds of most college students, IBM, Intel, and AMD\u2014the inventors and developers of the multicore processor\u2014are old news\u2026old companies founded by old guys. Mobile applications are where the action is. But mobile apps are driven by data, usually by a lot of data, and they won\u2019t be of much use without the processors, databases and networks that power them. Computing works and advances based on the entire system, from the power source to the user interface, and students will be more successful if they know how to open the box and \u201ckick the tires.\u201d They can then optimize for energy efficiency and write parallel code that makes use of new hardware architectures. They can manage caching, memory architecture and resource allocation issues. They can explain and explore quantum computing. Computer science doesn\u2019t stop at software or coding. Students need foundations in hardware architecture, too, including electrical engineering and physics. We need computer scientists who can test and push the boundaries of hardware just as much as they push what can be achieved with software. 5. Computer History and Ethics Something I heard at the Turing 50th Anniversary celebration last summer has stuck with me: Computing is not neutral. It can be used for good or evil. It can be used to help people and it can be used to manipulate and harm them. For several decades now, we have been making computing advances for the sake of computing, because what we can make computers do is cool, because the challenge of the next thing is too alluring to pass up, because there is money to be made if we can do \u201cX.\u201d Just because we can do something with computing, however, doesn\u2019t mean we should. Computing power is so great that we need policies to regulate and manage it, in order to protect and benefit people. It\u2019s important for students of computing to understand its history and to take courses grounded in ethics so they can make responsible decisions and guide others. They should know computing\u2019s historical villains and heroes, its inventors and detractors, and how it has been used to benefit and hurt people. The old saw applies here: If we do not learn our history, we are doomed to repeat it. Even in a crowded curriculum, we must ensure students are gaining the skills and knowledge they need to become technology innovators, business leaders and positive contributors to society in the coming decades. This list is only a starting point. ",
            "date": "January 28, 2020",
            "views": "238",
            "upvotes": " View 5 Upvoters ",
            "upvoters": [
                {
                    "user_id": "Siddhant Singh",
                    "user_href": "/profile/Siddhant-Singh-497"
                },
                {
                    "user_id": "Kevin Solanki",
                    "user_href": "/profile/Kevin-Solanki-3"
                },
                {
                    "user_id": "Techie",
                    "user_href": "/profile/Techie-52"
                },
                {
                    "user_id": "Modi Shivam",
                    "user_href": "/profile/Modi-Shivam-5"
                },
                {
                    "user_id": "Ashutosh Singh",
                    "user_href": "/profile/Ashutosh-Singh-1712"
                }
            ]
        },
        {
            "author_info": {
                "name": "Djyfh",
                "href": "/profile/Djyfh"
            },
            "answer_text": "I guess a lot Being an virtual artist and implementer:Just the fact that I can digitise anything nearly,makes me love it.I can create things with just time and a computer. Just like an artist and a paintbrush :)Ohh boy!! Algos and DS:the algorithms take some effort to love,but once you fall for it,it is pretty satisfying experience and it can\u2019t even break up with you\u2026hard to get\u2026much harder to lose\u2026And a long quote I love:Computer Science is at this beautiful and rare intersection of logic and creativity, of structure and chaos, of concreteness and abstraction. From it comes patterns and principled engineering, no doubt, but the nature of building something from nothing and solving problems that have never yet been solved before yields so much fodder for the eager imagination that you can find yourself absolutely immersed in what you can do with it. Its potential is seemingly without limit, constrained only by your own creativity. Even when you're pulling on this tome of knowledge compiled by countless engineers before you, you're using it to build something new. You're getting to learn new things. You're getting to create something from nothing. And,feeling of satisfaction when you finally solve a problemAnd you can get well paid for it if you are any good\u2026getting paid for learning awesome stuff\u2026isn\u2019t that surreal?Its applicable to practically every field. You can work in any industry if you know CS.Another quote why i love CS:I can't think of a job I'd rather do than computer programming. All day, you create patterns and structure out of the formless void, and you solve dozens of smaller puzzles along the way\u2026. ",
            "date": "January 11, 2020",
            "views": "273",
            "upvotes": " View 2 Upvoters ",
            "upvoters": [
                {
                    "user_id": "Vidushi Gupta",
                    "user_href": "/profile/Vidushi-Gupta-72"
                },
                {
                    "user_id": "Madan S Shekhawat",
                    "user_href": "/profile/Madan-S-Shekhawat"
                }
            ]
        },
        {
            "author_info": {
                "name": "Ashutosh Singh",
                "href": "/profile/Ashutosh-Singh-1712"
            },
            "answer_text": "Data StructuresAlgorithmsComputer Architecture and OrganizationProgramming in Assembly languageProgramming in C or any high level language.Operating systemsComputer networksDatabase management systemsSoftware EngineeringObject-oreinted technologyInternet programming and web development.Numerical MethodsStatistical ComputingArtificial IntelligenceComputer Graphics programming",
            "date": "December 28, 2019",
            "views": "764",
            "upvotes": " View 9 Upvoters ",
            "upvoters": [
                {
                    "user_id": "Jajapur Sandhya",
                    "user_href": "/profile/Jajapur-Sandhya"
                },
                {
                    "user_id": "Shubham Kumar",
                    "user_href": "/profile/Shubham-Kumar-10537"
                },
                {
                    "user_id": "Ruzan Pithawala",
                    "user_href": "/profile/Ruzan-Pithawala"
                },
                {
                    "user_id": "Nishi Jain",
                    "user_href": "/profile/Nishi-Jain-172"
                },
                {
                    "user_id": "Chithra",
                    "user_href": "/profile/Chithra-35"
                },
                {
                    "user_id": "Vaibhav Srivastav",
                    "user_href": "/profile/Vaibhav-Srivastav-22"
                },
                {
                    "user_id": "Raunak Kodwani",
                    "user_href": "/profile/Raunak-Kodwani"
                },
                {
                    "user_id": "How To",
                    "user_href": "/profile/How-To-225"
                },
                {
                    "user_id": "Madan S Shekhawat",
                    "user_href": "/profile/Madan-S-Shekhawat"
                }
            ]
        },
        {
            "author_info": {
                "name": "Mukesh Lekhrajani",
                "href": "/profile/Mukesh-Lekhrajani"
            },
            "answer_text": "There are thousands of things to learn in computer science.. select anyone area and then, within the area, select the technology\u2026 don\u2019t obey what everyone says.. else you will not end up anywhere.. ",
            "date": "January 4, 2020",
            "views": "91",
            "upvotes": " View 1 Upvoter ",
            "upvoters": [
                {
                    "user_id": "Madan S Shekhawat",
                    "user_href": "/profile/Madan-S-Shekhawat"
                }
            ]
        },
        {
            "author_info": {
                "name": "Mayank Gupta",
                "href": "/profile/Mayank-Gupta-2424"
            },
            "answer_text": "5 Subjects Every Computer Science Student Should Learn Parallel Programming. The single, standalone server with one CPU has gone the way of the dodo bird, displaced by the cloud, server farms and multithreaded parallel processors. ...Green Programming. ...Collaborative Development. ...Hardware Architecture. ...Computer History and Ethics.",
            "date": "January 3, 2020",
            "views": "170",
            "upvotes": " View 1 Upvoter ",
            "upvoters": [
                {
                    "user_id": "Madan S Shekhawat",
                    "user_href": "/profile/Madan-S-Shekhawat"
                }
            ]
        },
        {
            "author_info": {
                "name": "Mohmad Yakub",
                "href": "/profile/Mohmad-Yakub"
            },
            "answer_text": "Learn logic building skills in programming first. It will give confidence to learn CS well. Please check the following post for more details. Mohmad Yakub's answer to How can I improve my programming skills? ",
            "date": "December 28, 2019",
            "views": "197",
            "upvotes": " ",
            "upvoters": [
                {
                    "user_id": "Madan S Shekhawat",
                    "user_href": "/profile/Madan-S-Shekhawat"
                }
            ]
        },
        {
            "author_info": {
                "name": "Shubham Patel",
                "href": "/profile/Shubham-Patel-481"
            },
            "answer_text": "Well, I would say programming, because it's basic, easy & much used everywhere. It adds a skill to your skillset. Through it, you can get employment in S/W companies or you can be self employed or freelance programmer. Other subjects have quite a theoretical part and are deep & vast. ",
            "date": "December 30, 2019",
            "views": "152",
            "upvotes": " View 1 Upvoter ",
            "upvoters": [
                {
                    "user_id": "Madan S Shekhawat",
                    "user_href": "/profile/Madan-S-Shekhawat"
                }
            ]
        },
        {
            "author_info": {
                "name": "Saravanan P",
                "href": "/profile/Saravanan-P-76"
            },
            "answer_text": "there are three major categories in computer science SoftwareHardwareNetworking",
            "date": "January 3, 2020",
            "views": "84",
            "upvotes": " View 1 Upvoter ",
            "upvoters": [
                {
                    "user_id": "Madan S Shekhawat",
                    "user_href": "/profile/Madan-S-Shekhawat"
                }
            ]
        },
        {
            "author_info": {
                "name": "Neelamsetti Thrinadharao",
                "href": "/profile/Neelamsetti-Thrinadharao"
            },
            "answer_text": "In computer \ud83d\ude02\ud83d\ude02\ud83d\ude05 ",
            "date": "December 28, 2019",
            "views": "92",
            "upvotes": " View 1 Upvoter "
        },
        {
            "author_info": {
                "name": "Rekha Setia",
                "href": "/profile/Rekha-Setia-2"
            },
            "answer_text": "Basics of computer programming ",
            "date": "June 4, 2020",
            "views": "22",
            "upvotes": " Submission accepted by Madan S Shekhawat"
        }
    ]
}