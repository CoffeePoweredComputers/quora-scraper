{
    "title": "Why should I learn C++? - Quora",
    "tags": [
        "Learning C++",
        "Beginning Computer Programming Advice",
        "C++ (programming language)",
        "Learning New Things"
    ],
    "response": [
        {
            "author_info": {
                "name": "Wim ten Brink",
                "href": "/profile/Wim-ten-Brink-1"
            },
            "answer_text": "You shouldn\u2019t! You should learn Standard C instead as the C syntax is very familiar to several other major languages. C++, C#, Java, PHP and various other languages use a syntax that is very similar to C and you can learn the C language within a month. As for C++, it will take years to learn everything that is part of C++ and even then we\u2019d be no experts. The C++ standard is incredibly huge and has many features that you might not even need. It would be practical to learn some parts of C++ but not the whole language as you would need a year to learn it all, at least. Bjarne Stroustrup, the guy who created C++, wrote The C++ Programming Language (4th Edition) as a book for people who want to learn C++. I have it in my personal library and the index starts at page 1281 up to page 1347! The index alone is 60+ pages! Fortunately, it covers the raw basics in the first 450 pages which should give you a good start as beginning C++ developer. Then another 400+ pages about the whole abstraction mechanism of C++, which is basically the object-oriented part of this language. And then another 400 pages explaining everything that makes up the standard library of the C++ language. And once you\u2019ve learned it all, all you know is the Standard, yet many C++ compilers have some extra features and libraries that you\u2019d need to learn. Besides, this book covers C++11 but C++14 is commonly used already and C++17 is superseding this with even more new features, including new attributes. And it has been suggested that C++20 will also include reflection, which is already used by various other languages. Thing is, a lot of programming languages have taken useful features of the C++ language implemented and various useful features from other languages have been added to the C++ language. As such, the C++ language is a little bit of everything else. A super-power-tool, basically. But in general simpler tools are more than enough\u2026 Don\u2019t learn C++! Learn other programming languages and just focus on C++ once in a while\u2026 You need to be a bit familiar with C++ but unless you\u2019re a C++ developer, you don\u2019t need to learn it. ",
            "date": "Answered December 16, 2017",
            "views": "817",
            "upvotes": " View 4 Upvoters",
            "upvoters": [
                {
                    "user_id": "Farzan Khalili",
                    "user_href": "/profile/Farzan-Khalili"
                },
                {
                    "user_id": "Sulaiman Alhasawi",
                    "user_href": "/profile/Sulaiman-Alhasawi"
                },
                {
                    "user_id": "Prasad Chaoji",
                    "user_href": "/profile/Prasad-Chaoji"
                },
                {
                    "user_id": "Vishnu Choudhary",
                    "user_href": "/profile/Vishnu-Choudhary-26"
                }
            ]
        },
        {
            "author_info": {
                "name": "Jerwin Prabu",
                "href": "/profile/Jerwin-Prabu"
            },
            "answer_text": "We use C++ because we have real-time critical safety performance requirements, and for that, there are no other things, besides C. Furthermore, today's AI industry is basically built upon c++. AI scientist, data analyst may prefer simple language bindings like python, but any serious project has to use c++ in its very core. C++ will continue to be used by many companies in the autonomous driving space for the foreseeable future. C++ is also commonly used in embedded devices and in firmware for all kinds of stuff. C++ also has the advantage that it is an open ISO standard not owned or controlled by any one corporation in the way that e.g. Java, Swift, C# are. This might matter less to you than it does to me. High Performance Computing - C++ is one of the few high level languages with high performance and and direct access to the operating system system calls that are exposed in C. Examples of HPC are programming related to physics, finance, fluid mechanics, finite element methods, games engines and so on.Develop firmware for embedded systems such as microntrollers and embedded processors for controlling home appliances, car's fuel injection, motors, robots and so on. Those systems have memory constraints and many of them doesn't even have operating system.High performance software components or libraries - It is possible to write libraries of higher level programming languages in C++ and getting the best of both worlds, for instance, one could write high performance python, java, R or C# libraries in C++. And also Excel addins in C++.Take full advantage of the operating system - It means developing any program that requires access to all OS features and, graphical stack and system calls.Low level stuffs - Device driver, interface hardware ...",
            "date": "Answered March 16, 2019",
            "views": "395",
            "upvotes": " View 1 Upvoter ",
            "upvoters": [
                {
                    "user_id": "Rizaldi Chandra",
                    "user_href": "/profile/Rizaldi-Chandra"
                }
            ]
        }
    ]
}