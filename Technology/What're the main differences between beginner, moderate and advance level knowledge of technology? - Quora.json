{
    "title": "What're the main differences between beginner, moderate and advance level knowledge of technology? - Quora",
    "tags": [
        "Computer Engineering",
        "Startups in India",
        "Understanding and Comprehension",
        "Comparisons",
        "Knowledge",
        "Mobile Technology",
        "Computer Science Education",
        "Computers"
    ],
    "response": [
        {
            "author_info": {
                "name": "Muktabh Mayank",
                "href": "/profile/Muktabh-Mayank"
            },
            "answer_text": "I generally use the definitions provided by the book Pragmatic Thinking and Learning to classify programmers (and also computer scientists). This is just a scale the author provides and is not scientific and has blur boundaries, but that is the best definitions we can get for such abstract things.Here are the stages Andy Hunt mentions for a software developer, I think a Comp Sci graduate is generally at Advanced Beginner or Novice level, depending on how well they took their courses : 1. Novice: Absolute beginners, have no or little experience in the field. As a counter example, there can be someone with 10 years of the same thing repeated 9 times, Andy Hunt calls this novice too. These people will work on short term plans and will work best when given concrete, project context independent instructions (like load file x.csv into RAM). Novices may know that programming has too many rules, but would not know which of these rules are relevant in which situation. The way to assign them work is to tell them what exact set of rules to follow when facing a problem. 2. Advanced Beginner: An advanced beginner is more independent than a novice, as in he/she can work with a leader who assigns rules, but can take up short tasks independently. However, they will find it hard and irritating to troubleshoot. These people want information fast, that is they would want to quickly find out the one function from the documentation which helps them code a functionality up. They would find theoretical and scientific details boring due to this. Advanced Beginners can use advice better than Novices and can try to develop a general outlook, however they are far from developing the \"big picture\". They will find larger context irrelevant, for examples will find an all hands meeting with CEO irrelevant (The point is that it is extremely relevant as it tells whether you will have a job in future or not). Here is another fact, most people in most organizations never make it beyond Advanced Beginner level (even after 10s of years of experience) 3. Competent : A competent is probably the most popular person in the team. He/She knows enough to guide the new people and knows enough not to irritate the experts in the field. Competent people troubleshoot problems on their own and can figure out how to solve a novel problem. Instead of working on knee-jerk response, they will use planning and experience to solev problems. Young people who reach this level in organizations are generally given reviews like \"resourceful\" and \"having initiative\". They will start leading team in some aspect, maybe not formally. 4. Proficient: These people need the big picture. They figure out the larger conceptual level around programming and can design entire systems before programming them. They have developed the ability to improve on their previous mistakes and learn from mistakes of others. You will find these people reading advanced literature and listening to stories of other successful/failed projects, from which they can derive their insights, as simple books will generally be \"slow\" for them. They are also not too friendly with very simple problems, they will expect beginners to do some research on a topic before they are approached for a doubt or a problem. 5. Expert: An expert is simply that, expert. He is the source of knowledge and his blogs, talks and lectures are read and viewed on youtube. There are very few experts and the type of people who belong to this category and have  some experience will generally be very popular people. Say Bjarne Stroustroup , Herb Sutter and other similar people in C++ community, Guido Van Rossum , Alex Martelli and similar people in Python community, Yoshua Bengio, Geoffrey Hinton and such people in Neural Nets community. All these superstars are \"experienced\" experts. ",
            "date": "Answered October 19, 2015",
            "views": "48",
            "upvotes": " View 3 Upvoters ",
            "upvoters": [
                {
                    "user_id": "Vijayakannan Ayyathurai",
                    "user_href": "/profile/Vijayakannan-Ayyathurai"
                },
                {
                    "user_id": "Jackshanan Vignaraja",
                    "user_href": "/profile/Jackshanan-Vignaraja"
                },
                {
                    "user_id": "Abhishek Kumar",
                    "user_href": "/profile/Abhishek-Kumar-2593"
                }
            ]
        },
        {
            "author_info": {
                "name": "Piyush Michael",
                "href": "/profile/Piyush-Michael"
            },
            "answer_text": "This is not gonna be very helpful, but i have this to say-A beginner knows the specs and numbers to everything. A moderate geek knows a few things inside out. An advanced geek has worked on just one technology for long enough. An A-player simply cannot be an ace of everything tech. S/he would specialize in a few things only besides being very hard to find in real life. Simply because getting really good at something takes a lot of time and effort. Your question is fundamentally a Human Resource type of question. You should reclassify this so that other tech freaks like me don't end up here. But if it were me starting a startup, it would be ME who would be the \"expert\" in that field with a bunch of knowledgeable guys to back me up. ",
            "date": "Answered October 17, 2015",
            "views": "19",
            "upvotes": "0"
        }
    ]
}