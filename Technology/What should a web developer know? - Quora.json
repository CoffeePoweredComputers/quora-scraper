{
    "title": "What should a web developer know? - Quora",
    "tags": [
        "Web Developers",
        "Web Development",
        "Computer Programming"
    ],
    "response": [
        {
            "author_info": {
                "name": "Aaron Hill",
                "href": "/profile/Aaron-Hill-1"
            },
            "answer_text": "Client Side Literacy They should know HTML very, very well. Knowing every last attribute and element property isn\u2019t strictly necessary (although it helps) but knowing all of the tags and what their purposes are is very important; all too often I see code shipped where a `div` tag is used in place of a `blockquote` or `textarea`. (Even O365 does this)They should know CSS and how it works. It\u2019s particularly important that they understand how selectors work (including modifiers like :hover, > direct descendant, + sibling, etc). They should have awareness of the properties and what those properties do, and should understand the box model as it is defined in the W3C (not Microsoft\u2019s interpretation of the box model in IE). Being familiar with a framework like Bootstrap or Foundation is a bonus.They should know Javascript or at least a Javascript framework such as jQuery. They should understand how JS events work and how to wire them up, as well as how to manipulate the DOM using Javascript. They should absolutely understand how to send Ajax requests and process Ajax responses.Server Side Literacy They should be fluent in one server-side language at a minimum, and able to comprehend at least 2 to 3 others.They should be able to write manual SQL for basic CRUD queries (INSERT, SELECT, UPDATE, DELETE) as well as be able to do JOINs and filter queries with row limiting and WHERE clauses.They should understand the most common HTTP status response codes and what they mean (200, 301, 302, 400, 500).They should understand how to parse GET/POST arguments, sanitize them, process them, and emit a response back to the user.They should understand some basic web security issues, including SQL injection attacks, CSRF, and XSS, as well as how to prevent them.They should have a familiarity with basic security practices regarding password management, SSH keys, Salts, and Nonces.Process Literacy They should be comfortable working with at least one version control system (Git, SVN, Perforce\u2026), and at least understand the commit/push/rollback concept.They should understand, conceptually, the differences between Agile and Waterfall approaches. If they have actual experience with either, that\u2019s even better.Human Literacy They should be able to communicate politely and respectfully with clients.They should be able to hear client feature requests and interpret those into actual code patterns or approaches; if that is not possible, they should be able to hear the underlying need by the client and suggest alternatives that are possible. (\u201cYou asked for a Virtual Reality navigation system, but what I\u2019m hearing is that you said it\u2019s because want the user to intuitively know where they are in the website \u2014 I believe we can accomplish this by\u2026.\u201d)",
            "date": "Answered August 14, 2017",
            "views": "69",
            "upvotes": " View 38 Upvoters ",
            "upvoters": [
                {
                    "user_id": "Nikita Matushyn",
                    "user_href": "/profile/Nikita-Matushyn"
                },
                {
                    "user_id": "Victor Ajor",
                    "user_href": "/profile/Victor-Ajor"
                },
                {
                    "user_id": "Dipankar Mukherjee",
                    "user_href": "/profile/Dipankar-Mukherjee-19"
                },
                {
                    "user_id": "Vignesh Senthil",
                    "user_href": "/profile/Vignesh-Senthil"
                },
                {
                    "user_id": "Kamlesh Mitawa",
                    "user_href": "/profile/Kamlesh-Mitawa"
                },
                {
                    "user_id": "Lampros Chatzinikolaou",
                    "user_href": "/profile/Lampros-Chatzinikolaou"
                },
                {
                    "user_id": "Ragib Un Nur",
                    "user_href": "/profile/Ragib-Un-Nur"
                },
                {
                    "user_id": "Mayank Kumar",
                    "user_href": "/profile/Mayank-Kumar-803"
                },
                {
                    "user_id": "Saroj Kumar Swain",
                    "user_href": "/profile/Saroj-Kumar-Swain-1"
                },
                {
                    "user_id": "Sujitha Murugesan",
                    "user_href": "/profile/Sujitha-Murugesan"
                }
            ]
        },
        {
            "author_info": {
                "name": "Ryan DesRoches",
                "href": "/profile/Ryan-DesRoches"
            },
            "answer_text": "Here\u2019s what I would say: Technologies/Languages: A working knowledge of HTML5, CSS3 and JavaScript - These are not going anywhere and have been the core of the web since the 90s. They should also have some SQL/MySQL knowledge and a knowledge of at least one \u2018backend\u2019 language such as PhP, ASP.NET, or Java. They should also have knowledge of a photo editing/graphic design program such as Photoshop. Work with a version control system (GIT) is a plus, so is having knowledge of more advanced frameworks such as React, Angular, SAAS, LESS, Bootstrap, etc. These frameworks seem to pop up daily, so its hard to know them all. Usability/SEO/Performance/Business: A good developer should know that your goal is not making the worlds prettiest site - its to make a site that fits in with the business goals of whom you are working for. Often its easy to lose sight of this and focus more on making things visually \u2018perfect\u2019. \u2018Perfect\u2019 is in they eyes of the beholder. To a user - they might not care about the frills and bells and whistles - users are mostly task driven - so they want familiarity and ease-of-us so they can get in and get out quickly. To a project manager a \u2018perfect\u2019 site is one that comes in on time and on budget with few bugs. \u201cJust get it done\u201d is often much more of a pressing goal than making it look good. A good developer needs to know how to balance quality of their work with the business constraints they are under. They need to know what battles to fight (for the benefit of the code or user) and which ones are fights they can let go (and sacrifice something cool that will look awesome, but take one extra week than the generic boring menu design that will take 2 hours but looks \u2018boring\u2019). SEO is important - or at least the basics of it (File names, Titles, Descriptions, Heading Tags) - cause what good is a site if no one can find it? Performance is becoming bigger and bigger of an issue - A site should load in under 2 seconds, people don\u2019t like to wait - and a lot of studies show that if you can\u2019t get your site to load quickly - users will go elsewhere for similar content. Remember - there are probably about a few thousand sites that offer the same things you do. . . (Especially true in eCommerce). Attitude: Eventually you will have to interact with someone that is not a developer. You should know how to be professional - I\u2019ve seen so many good developers make fools of themselves in front of clients or a group of marketers/vice presidents. Sure, I wear Jeans and a T-Shirt and might not shave when I know I\u2019ll be coding all day - but when I have a meeting (WebEx or in Person) - I make sure I clean myself up, and act professionally. Its very hard to change a first impression - that can cost you promotions, clients, etc - it doesn\u2019t matter how good of a developer you are. Responsive Design/Mobile: Over 50% of all web browsing is done on a phone or tablet - knowing how to handle the mobile web is hugely important. Never Stop Learning: I\u2019ve been in Web Development/Software Engineering for almost 20 years, and I am no where close to knowing it all . . . . new frameworks, best practices and trends pop up daily. You have to keep learning or your screwed and obsolete. Skills and tools I learned even 5 years ago are considered poor practice now. This is a industry that changes quickly, and the developers that can adapt and change with it are the ones that make the most and are in the highest demand. ",
            "date": "Answered August 14, 2017",
            "views": "24",
            "upvotes": " View 9 Upvoters ",
            "upvoters": [
                {
                    "user_id": "Luis Hebert",
                    "user_href": "/profile/Luis-Hebert"
                },
                {
                    "user_id": "Pooja Gopal",
                    "user_href": "/profile/Pooja-Gopal-2"
                },
                {
                    "user_id": "Derwin Pascual",
                    "user_href": "/profile/Derwin-Pascual"
                },
                {
                    "user_id": "Nitin Gopi",
                    "user_href": "/profile/Nitin-Gopi"
                },
                {
                    "user_id": "Sipra Singhdeo",
                    "user_href": "/profile/Sipra-Singhdeo"
                },
                {
                    "user_id": "Dipankar Mukherjee",
                    "user_href": "/profile/Dipankar-Mukherjee-19"
                },
                {
                    "user_id": "Nyemitei Odjidja",
                    "user_href": "/profile/Nyemitei-Odjidja"
                },
                {
                    "user_id": "Tapiwa Louis",
                    "user_href": "/profile/Tapiwa-Louis"
                },
                {
                    "user_id": "Sundar M",
                    "user_href": "/profile/Sundar-M-43"
                }
            ]
        }
    ]
}