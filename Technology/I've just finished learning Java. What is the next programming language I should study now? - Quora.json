{
    "title": "I've just finished learning Java. What is the next programming language I should study now? - Quora",
    "tags": [
        "Java Programming Advice",
        "Learning to Program Advice",
        "Learning Java",
        "Beginning Computer Programming Advice",
        "Computer Programming Advice",
        "Java (programming language)",
        "Learning to Program",
        "Programming Languages"
    ],
    "response": [
        {
            "author_info": {
                "name": "Brain Benn",
                "href": "/profile/Brain-Benn"
            },
            "answer_text": "May be you could advice us how you did that! Assumption: I want to believe you don't want to write toy programs. (check introduction to C++ by Bjarne Stroustrup's Homepage  ,  to get what I meant by this statement).  Generally: Indeed good professors are always quick to point out the limit of their knowledge and what are the next areas that student need to exploit. Part of being wise is to assume you don't know anything and improve yourself daily. It took me many years to know this.  Point 1: Feedback and deliberate practice: Psychologist say it takes  approximately 1 0000 hrs of \"deliberate practice\" to be an expert.  You are yet to be an expert which means you have to do \" deliberate practice\" . By that I mean practice that will lead to development of the specific skill set you aspire to have and that these practices won't  necessarily be enjoyable. This intuitively means you should dive and dive progressively into more challenging projects and task to improve your desired skill set . While you do this though, you need appropriate feedback- Whats my goal, How am I doing and what next. Point 2.Expand Skill set:  Deliberate practice might also involves learning other appropriate tools that increase your proficiency (say Algorithm and  (Robert Sedgewick ,Algorithm by Robert sedge wick) Java Generics, Java Concurrency, Java Performance Tuning, Spring, hibernate, Scala-----> this list might be unending and others might help me add more). Point 2: If you want to become a world class programmer either you program for 2 years and study algorithm Or just program for 10 years.  I heard this  from Robert Leirsson in his lecture at MIT while teaching Algorithm to student.(Introduction to Algorithms (SMA 5503) ).Note that if you have not studied algorithm , you are still not ready and then you should assume you have not even learnt java. Point 3: Have fun solving complex problems. ",
            "date": "Answered January 9, 2016",
            "views": "357",
            "upvotes": "0"
        },
        {
            "author_info": {
                "name": "Joshua Gross",
                "href": "/profile/Joshua-Gross-8"
            },
            "answer_text": "I\u2019m assuming that you know relational databases and SQL. If not, that\u2019s a good next direction. Assuming you want to continue with a language principally used for enterprise application development, then Python or Ruby. Intellectually, these won\u2019t be that different or challenging. If you are looking for something very different, consider learning functional programming (FP), a different paradigm in the category of declarative (rather than imperative) programming. Scheme is a functional language, but it\u2019s not the language I teach or suggest. I would recommend either Haskell or F#. Haskell is the new standard functional language, and F# is the .NET platform functional language. In addition to adding several decades of PL advancement on scheme, there are people using these languages and there are even jobs. Functional languages tend to be more popular with people who like mathematics, especially mathematics focused on proofs and derivation. Or you could go for something fun. There are languages that aren\u2019t used much, but are fun to learn and can be used in interesting ways. Smalltalk is the language that defined much of what we think about object oriented programming, and is still used in Squeak/Smalltalk. Prolog is from another declarative paradigm, logical programming. Perl is brilliant and chaotic; there\u2019s no better way I know to describe it. It started as a language for text processing, and has regular expressions as primitive operations. Whatever you do, have fun. ",
            "date": "Answered August 16, 2017",
            "views": "748",
            "upvotes": " View 4 Upvoters ",
            "upvoters": [
                {
                    "user_id": "Olamileke Biodun",
                    "user_href": "/profile/Olamileke-Biodun"
                },
                {
                    "user_id": "Justin Onker",
                    "user_href": "/profile/Justin-Onker"
                },
                {
                    "user_id": "Gabriel J. Ferrer",
                    "user_href": "/profile/Gabriel-J-Ferrer"
                },
                {
                    "user_id": "Basavaraj Goudappanavar",
                    "user_href": "/profile/Basavaraj-Goudappanavar"
                }
            ]
        }
    ]
}