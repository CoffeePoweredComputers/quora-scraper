{
    "title": "Is web development a dying career? - Quora",
    "tags": [
        "Jobs and Careers in Web Development",
        "Jobs and Careers in Computer Programming",
        "Web Development",
        "Jobs and Careers"
    ],
    "response": [
        {
            "author_info": {
                "name": "Luna Reid",
                "href": "/profile/Luna-Reid-1"
            },
            "answer_text": "Since the 1990s, few things have remained timeless societal staples like Friends, Pok\u00e9mon, Britney Spears, and the internet. Seriously. Lots of things have come and gone, but these guys have stuck around, rolled with the Y2K punches, and integrated themselves into our society. (Pok\u00e9mon Go or a new Britney Spears Vegas residency, anyone?) Yet nothing has said \u201cI\u2019m here to stay\u201d like the internet. From dial-up and AOL everything to Chrome and IoT, the ~*interwebs*~ have completely infiltrated our lives. Learn More About HubSpot's CMS Software Learning about web development is kind of like drinking from a fire hose. Google \u201ccoding,\u201d and you\u2019ve turned the hose on full blast. This guide serves as a slow drip to get you acquainted with and intrigued by the world of web development. It\u2019s by no means a comprehensive manual. In this guide, we\u2019ll cover the bare-bone-basics of web development, the process of creating a website, and additional resources for those who want to learn more about development \u2014 or become a developer themselves. Keep reading to dive into website development or use the chapter links to jump around the guide. Web Develop- ment BasicsTypes of Web Develop- mentThe Web Develop- ment ProcessWeb Develop- ment ResourcesWhat is website development? Website development refers to the work that goes into building a website. This could apply to anything from creating a single plain-text webpage to developing a complex web application or social network. While web development typically refers to web markup and coding, it includes all related development tasks, such as client-side scripting, server-side scripting, server and network security configuration, ecommerce development, and content management system (CMS) development. See why thousands of customers use CMS Hub to build an optimized website that integrates with their HubSpot CRM data and full marketing suite. Web Development Basics WebsiteIP addressHTTPCodingFront-endBackendCMSNow that we've defined web development, let\u2019s review some web development basics to better acquaint you with the topic. 1. What is a website? Websites are files stored on servers, which are computers that host (fancy term for \u201cstore files for\u201d) websites. These servers are connected to a giant network called the internet \u2026 or the World Wide Web (if we\u2019re sticking with 90s terminology). We talk more about servers in the next section. Browsers are computer programs that load the websites via your internet connection, such as Google Chrome or Internet Explorer. Your computer is also known as the client. 2. What is an Internet Protocol (IP) address? Internet Protocol is a set of standards that govern interaction on the internet. To access a website, you need to know its IP address. An IP address is a unique string of numbers. Each device has an IP address to distinguish itself from the billions of websites and devices connected via the internet. The IP address for HubSpot is 104.16.249.5. You can find any website\u2019s IP address by visiting a site like Site 24x7 or by using Command Prompt on Windows or Network Utility > Traceroute on MacBooks.  To find your device\u2019s IP address, you can also type \u201cwhat\u2019s my IP address\u201d into your search browser. While you can access a website using its IP address, most internet users prefer to use domain names or by going through search engines. 3. What is HyperText Transfer Protocol? HyperText Transfer Protocol (HTTP) connects you and your website request to the remote server that houses all website data. It\u2019s a set of rules (a protocol) that defines how messages should be sent over the internet. It allows you to jump between site pages and websites. When you type a website into your web browser or search for something through a search engine, HTTP provides a framework so that the client (computer) and server can speak the same language when they make requests and responses to each other over the internet. It\u2019s essentially the translator between you and the internet \u2014 it reads your website request, reads the code sent back from the server, and translates it for you in the form of a website. 4. What is coding? Coding refers to writing code for servers and applications. It\u2019s called a \u201clanguage\u201d because it\u2019s comprised of vocabulary and grammatical rules for communicating with computers. They also include special commands, abbreviations, and punctuation that can only be read by devices and programs. In a sense, developers are translators, too. All software is written by at least one coding language, but they all vary based on platform, operating system, and style. There are many different types of coding languages \u2026 all of which fall into two categories (written by two different types of developers) \u2014 front-end and backend. 5. What is the front-end? Front-end (or client-side) is the side of a website or software that you see and interact with as an internet user. When website information is transferred from a server to a browser, front-end coding languages allow the website to function without having to continually \u201ccommunicate\u201d with the internet. Front-end code allows users like you and me to interact with a website and play videos, expand or minimize images, highlight text, and more. Web developers who work on front-end coding work on client-side development. We\u2019ll unpack more about front-end development in the next section. 6. What is the backend? Backend (or server-side) is the side that you don\u2019t see when you use the internet. It\u2019s the digital infrastructure, and to non-developers, it looks like a bunch of numbers, letters, and symbols. There are more backend coding languages than front-end languages. That\u2019s because of browsers \u2014 at the front-end \u2014 only understand JavaScript, but a server \u2014 at the backend \u2014 can be configured to understand (pretty much) any language. We\u2019ll cover more about backend development next. 7. What is a content management system? A content management system (CMS) is a web application or a series of programs used to create and manage web content. (Note: CMSs aren\u2019t the same as site builders, like Squarespace or Wix.) See why thousands of customers use CMS Hub to build an optimized website that integrates with their HubSpot CRM data and full marketing suite. While not required to build a website, using is CMS is certainly easier. It provides the building blocks (like plugins and add-ons) and lets you create the structure with your code. CMSs are typically used for e-commerce and blogging, but they\u2019re useful for all types of websites. Now, why is web development important? You might be a business owner hiring a freelance developer to build your website, a marketer pitching a vision to your development team, or a student learning about development as a career. Regardless of who you are or why you\u2019re reading this guide, understanding the basics of website development can be helpful in this technology-driven world. The internet isn\u2019t going away anytime soon. In fact, it\u2019s become a portal and primary method of research, connection, education, and entertainment in the world. As of 2019, there are 4.2 billion global internet users. That\u2019s more than half the world\u2019s population, and these folks are using the internet for a vast variety of reasons. What\u2019s the one thing those reasons have in common? They require a website, and each website requires a skilled web developer. Web development is also a rapidly expanding industry. Between now and 2028, the employment of web developers is expected to grow by 13%. That\u2019s much faster than most other technology careers. Whether you\u2019re looking to hire a web developer or become one, you should understand the different types of web development that developers can master \u2014 we dive into this below. Types of Web Development Front-end developmentBackend developmentFull stack developmentWebsite developmentDesktop developmentMobile developmentGame developmentEmbedded developmentSecurity developmentThese different types of web development primarily refer to the different sectors of the profession in which web developers can work \u2014 we referenced some of these in the sections above. Some of these distinctions overlap, and oftentimes, web developers will master multiple types of web development. 1. Front-end Front-end developers work on the client- or user-facing side of websites, programs, and software. They design and develop the visual aspects, including the layout, navigation, graphics, and other aesthetics. These developers also work on the user interface and user experience of whatever project they're developing. 2. Backend Backend developers work on the server-facing side of websites, programs, and software. These developers work in systems like servers, operating systems, APIs, and databases and manage the code for security, content, and site structure. 3. Full Stack Full stack developers work in both the front-end and backend sides of a website. They can create a website, application, or software program from start to finish. 4. Website Website developers are synonymous to front-end, backend, or full-stack developers. However, these professionals specialize in building websites (as opposed to mobile applications, desktop software, or video games). 5. Desktop Desktop developers specialize in building software that lives on your desktop, such as Mac OS, Windows, and more. 6. Mobile Mobile developers build mobile applications that live on a mobile device such as a smartphone or tablet. These operate much differently than other websites and software programs, thus requiring a separate set of development skills. 7. Game Game developers specialize in writing code for video games, both console games (Xbox, PlayStation, etc.) and mobile games \u2014 which allows this specialty to overlap somewhat with mobile development. Game developers, however, have specific skills for building interactive, engaging gaming experiences. 8. Embedded Embedded developers work with all hardware that isn't a computer; this includes electronic interfaces, consumer devices, iOT devices, real-time systems, and more. With a recent rise in iOT and connected devices, this development skill is becoming more popular and in-demand. 9. Security Security developers establish methods and procedures for the security of a software program or website. These developers typically work as ethical hackers and build systems that discover and eradicate security risks. Now, let's dive into the web development process (which involves many of these types of development). Website Development Process The process of creating a website isn\u2019t as easy as 1-2-3. Each development path is different based on the type of website, coding languages, and resources. The following section serves as a brief overview of the web development process and a short introduction into the most common languages and CMS options. Planning Your Website and Creating a Sitemap All websites start with a plan. Developers call this plan a wireframe or sitemap (not to be confused with sitemap.XML, which is a file that helps SERPs crawl and find your site). It doesn\u2019t have to be an official document; it\u2019s simply a vision for your site that\u2019ll give both you and your developer(s) direction and a place to start. You can draw it on a whiteboard or use a tool like Invision, Slickplan, or Mindnode. Just like a business plan gives a potential investor insight into your goals and deliverables, a sitemap gives a developer an idea of what you\u2019re picturing and the information needed to meet your vision. You can create your sitemap on your own or work with your developer(s). Here are a few questions to ask yourself when planning your site. What individual pages do you want? What content will be on those pages?How can you organize those pages into categories? (These categories might represent your homepage menu \u2014 if it helps to think about it like that.)What is the hierarchy of pages on your site?How will the pages link together?What pages and categories are essential to your site and user experience, and which ones could be removed or combined?Writing Your Website Code The next step in the web development process is writing the code. Developers will use different coding languages for the front-end and backend of websites, as well as for different functionalities of the site (such as design, interactivity, etc.) These different languages work together to build and run your site. Let\u2019s start with the most commonly-used languages. Almost every website uses these three together, and yours probably will, too. HTML HyperText Markup Language (HTML) has been used since the 1990s. It\u2019s the foundation of all websites and represents the bare minimum of what\u2019s needed to create a website. (Yes, you can create a website with only HTML. It wouldn\u2019t look too pretty, though.) Below is HTML for a basic Bootstrap button.  Languages like CSS and JavaScript enhance and modify the basic site structure built by HTML codes. HTML5 is the most recent version and supports cross-platform browser functionality, making it popular in mobile application development. CSS Cascading Style Sheets (CSS) was developed in the late 1990s. It adds design elements like typography, colors, and layouts to websites; it\u2019s the cosmetic code. CSS allows developers to transform your website to match the aesthetic you envisioned for your site, and like HTML5, CSS is compatible with all browsers. Here's a code snippet for customizing the jumbotron element in Bootstrap CSS.  JavaScript JavaScript is the cherry-on-top of coding languages. Created in the mid-90s, JavaScript is used to add functionality to websites. Developers use it to add animations, automate tasks within certain pages, and add interactive features that enhance user experience. JavaScript is rapidly evolving. Once considered a \u201ctoy\u201d language, JavaScript is now the most widely used coding language in the world. With the help of Node.Js, it\u2019s now a backend coding language. It\u2019s the first language to be understood by browser, and some have even discussed applying machine learning to it, too. Below is a JavaScript code snippet for automatically opening links in a new window in WordPress.  HTML, CSS, JavaScript are the \u201cbig three\u201d of web development. Almost every website uses them in some capacity. There are plenty of others, such as server-side languages like Java, C++, Python, and SQL, but understanding these three is foundational to your website development knowledge. Building the Backend of Your Website Writing code might be one of the more complicated parts of web development, but it\u2019s hardly the only component. You also have to build your backend and front-end site structures and design. Let\u2019s start with the backend. The backend handles the data that enables the functionality on the front-end. For example, Facebook's backend stores my photos, so that the front-end can then allow others to look at them. It\u2019s comprised of two major components: Databases, which is responsible for storing, organizing, and processing data so that it\u2019s retrievable by server requestsServers, which is the hardware and software that make up your computer. Servers are responsible for sending, processing, and receiving data requests. They\u2019re the intermediary between the database and the client/browser. The browser will, in effect, tell the server \"I need this information\", and the server will know how to get that information from the database and send it to the client.These components work together to build the foundation for each website. As for building your website, backend developers will establish three things. Your logic code, which is essentially a set of rules for how your website will respond to certain requests and how objects of your website will interact.Your database management, which is how your website will organize, manage, and retrieve its data. Read more on SQL vs. NoSQL here.Your infrastructure, which is how your site will be hosted. Hosting your own site will give you greater control, but it\u2019s much more expensive and requires you to maintain your own server health and security.With these components and decisions in place, your website will be ready for front-end development. Note: The backend is slightly tangential to web development because you don't always need a backend if you're not storing any data. \u201cData\u201d in this context means any user-entered information that you need to save and persist. Think about logging in to a website. If they don't have a backend, how could they remember your login information? Or what your profile settings are? To get this information, you need a backend. Facebook, as an example, needs to know what people are in your Friends list, what events you have joined, what posts you have created, and more. This is all \"data\" that lives in a database. If they didn't have a backend with a database, none of that data would be accessible to them. On the other hand, a website that\u2019s purely informational and doesn\u2019t require the users to enter any data wouldn\u2019t need a backend. So, if you have no data, you don\u2019t necessarily have a need for backend development. But that\u2019s not saying you shouldn\u2019t learn the basics. You never know when you might need it. Building the Front-End of Your Website If you\u2019ve ever dabbled in web design or toyed with a website in WordPress, Squarespace, or Google Sites, you\u2019ve touched front-end web development. The front-end stuff is important \u2014 it\u2019s what your visitors, customers, and users see and how they\u2019ll use your website. Front-end (or client-side) development includes a combination of JavaScript, HTML, and CSS. It also controls components such as typography and fonts, navigation, positioning, and browser compatibility and responsiveness. This part will reflect more of your initial site vision and what you included in your wireframe. As technology and consumer preferences change, client-side coding tends to become outdated \u2026 a lot faster than backend development does. This is where coding resources (like the ones we\u2019ve included below) come in handy. Working with a CMS Why would someone choose a CMS over coding \u201cby hand\u201d or \u201cfrom scratch?\u201d Well, a CMS is easier to use (you have to write less code), and it often has tools around hosting the site. On the other hand, it\u2019s less flexible and, therefore, gives you less control over your front-end. See why thousands of customers use HubSpot's CMS to build an optimized website that integrates with their HubSpot CRM data and full marketing stack. CMS options also often include plugins that remove the need to write a backend. For example, there are WordPress plugins for ecommerce so that, instead of building a complicated backend to charge customers\u2019 credit cards, you can just use an existing plugin and avoid the need to deal with databases and server-side code at all. Popular content management systems include HubSpot, Joomla, Magento, and WordPress \u2014 which has over 60% market share. (In this case we\u2019re talking about open source WordPress software, not the WordPress site builder.) Acquiring a Domain Name At this point, your website will have an IP address. It also needs a domain name that your visitors can use to find your site. Perhaps you\u2019ve heard of sites like GoDaddy and Hover. These services help you purchase a domain name and register with ICANN (Internet Corporation for Assigned Names and Numbers). Most domain registrations are good for a year before you\u2019re required to renew. Site builders and hosting services, like WordPress and Squarespace, also allow you to purchase a domain name. Website Development Resources Interested in learning more about development and coding? Outside of connecting and networking with other developers, there are plenty of resources you can tap into to further your understanding or web development. Web Development Courses and Classes Whether you want to explore backend, front-end, or full-stack coding, here are a few online courses and classes recommended by our own HubSpot developers. TutorialsPoint All content and resources on TutorialsPoint are free. Between tutorials, ebooks, and videos, TutorialsPoint provides many different ways to learn. egghead According to their website, \u201cegghead is a group of working web development professionals and open source contributors that provide you with concise, information-dense video courses on the best tools in the industry.\u201d Users can take courses, listen to podcasts, or take lessons on a wide variety of web development topics. Khan Academy Khan Academy is a well-known free educational resource. Users can learn anything from macroeconomics to linear algebra to US history, as well as a handful of computing topics. freeCodeCamp freeCodeCamp is a non-profit organization (like Khan Academy) that helps people learn to code for free. With thousands of articles, videos, and interactive lessons, as well as worldwide study groups, freeCodeCamp helps thousands of developers and engineers learn about programming and land development jobs. Treehouse Team Treehouse is a subscription-based online learning program. Users pay a monthly fee and gain access to hundreds of courses on over 20 different topics. From JavaScript to Python to PHP, Treehouse can teach you all you need to know about web development. Web Development Communities Web developers are masters of the internet, so it makes sense that they\u2019d hang out on there. According to Code Condo, developers join these communities for: Up-to-date information and problem solvingInsightful answers, new perspectivesTips and tricks for all-level programmersLinks to resources, talks and research papersMeeting new friends, code buddies, and potential partnersHere are a few online communities recommended by our own HubSpot developers. Stack Overflow Stack Overflow was introduced ten years ago and has since become one of the most popular programming communities in the world. According to co-founder Jeff Atwood, \u201c[Stack Overflow] is by programmers, for programmers, with the ultimate intent of collectively increasing the sum total of good programming knowledge in the world.\u201d Stack Overflow is a great place to go with questions because most of the time, other developers have asked and answered the same ones. The forums in Stack Overflow keep you connected to other developers while also keeping you informed. Mozilla Development Network Mozilla Development Network (MDN) is known to be more thorough and accurate than other online resources. It\u2019s not as much a community as a comprehensive resource and library of documents for coding languages. MDN is useful when learning how certain functions work and staying up-to-date on coding and development news. Reddit Reddit is a forum-based community where developers of all levels gather to ask and answer questions. It\u2019s incredibly interactive and includes people from all over the world. You can also join \u201csubreddits\u201d based on topic, such as web design, JavaScript, or freelancing. Dive Into Web Development The internet is here to stay. It\u2019s getting better every day, and web developers are on the front lines of these innovations and improvements. From this blog to your favorite social network to the apps you use on your phone, web development touches almost every part of your day \u2014 and your business. Take the time to understand coding and programming to improve not only your life but the lives of your customers, too. ",
            "date": "Answered September 3, 2020",
            "views": "13",
            "upvotes": " View 11 Upvoters ",
            "upvoters": [
                {
                    "user_id": "Tharwani Mayur",
                    "user_href": "/profile/Tharwani-Mayur-1"
                },
                {
                    "user_id": "Brendan Wilson",
                    "user_href": "/profile/Brendan-Wilson-20"
                },
                {
                    "user_id": "Anton Norchenko",
                    "user_href": "/profile/Anton-Norchenko"
                },
                {
                    "user_id": "Hugo Clgr",
                    "user_href": "/profile/Hugo-Clgr"
                },
                {
                    "user_id": "Linda O'Neill",
                    "user_href": "/profile/Linda-ONeill-71"
                },
                {
                    "user_id": "Jenny Williams",
                    "user_href": "/profile/Jenny-Williams-454"
                },
                {
                    "user_id": "Martin Nova",
                    "user_href": "/profile/Martin-Nova-3"
                },
                {
                    "user_id": "Trisha Walsh",
                    "user_href": "/profile/Trisha-Walsh-1"
                },
                {
                    "user_id": "Amelia Carter",
                    "user_href": "/profile/Amelia-Carter-42"
                },
                {
                    "user_id": "Mia Gray",
                    "user_href": "/profile/Mia-Gray-39"
                }
            ]
        },
        {
            "author_info": {
                "name": "Dave Chu",
                "href": "/profile/Dave-Chu-6"
            },
            "answer_text": "Thanks for the A2a. I wouldn't say it's dying, but it's certainly changing. I think it's only dying in the sense that some types of web development will shrink considerably, and possibly die out.  PHP Waning There are new technologies that can use Javascript and modern API's to access data and present it to the user, instead of using PHP, for instance. Along with this approach, more processing can take place in the user's browser (or mobile app) instead of always going to the server for data. This means much faster response for the user.  This new approach also blurs the lines between apps and websites, as more things will be oriented towards mobile users, who will really enjoy the increased speed. Browsing the web via desktop computers will shrink, and mobile browsing will grow.  Since most of the popular CMS's use PHP, they will certainly be affected, although even if they change nothing about their basic stack, they'll still be used for a good long time.  Tweakers Non-Delight Anecdotally, one type of \"developer\" seems to be waning rapidly. In recent years, there have been lots of people without serious developer skills who have tried to have businesses making websites with WYSIWYG and drag-and-drop tools. I can see the temptation, as the bar to entry is low for doing that, and there are some tools for doing this that are surprisingly handy for cranking out cookie-cutter types of sites. But if the site owner asks for something the Super-duper No-coding Tools don't do, they're screwed. And as even more tech skills are needed to handle the new technologies I've mentioned above, more of them will not be up to the job.  ",
            "date": "Answered February 3, 2016",
            "views": "144",
            "upvotes": " View 11 Upvoters ",
            "upvoters": [
                {
                    "user_id": "Mark Durnell",
                    "user_href": "/profile/Mark-Durnell-3"
                },
                {
                    "user_id": "Mercenario Mode",
                    "user_href": "/profile/Mercenario-Mode"
                },
                {
                    "user_id": "Rishad Quazi",
                    "user_href": "/profile/Rishad-Quazi"
                },
                {
                    "user_id": "Saurabh Saneja",
                    "user_href": "/profile/Saurabh-Saneja"
                },
                {
                    "user_id": "Oliver Reeves",
                    "user_href": "/profile/Oliver-Reeves-1"
                },
                {
                    "user_id": "Aondongu Tivzenda",
                    "user_href": "/profile/Aondongu-Tivzenda"
                },
                {
                    "user_id": "Jessica Abrams",
                    "user_href": "/profile/Jessica-Abrams-13"
                },
                {
                    "user_id": "Lloyd Derbyshire",
                    "user_href": "/profile/Lloyd-Derbyshire"
                },
                {
                    "user_id": "BANG Web Site Design",
                    "user_href": "/profile/BANG-Web-Site-Design"
                },
                {
                    "user_id": "Marco Floriano",
                    "user_href": "/profile/Marco-Floriano"
                }
            ]
        }
    ]
}