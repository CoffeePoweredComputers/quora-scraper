{
    "title": "How come Rust programming language is becoming so popular these days? - Quora",
    "tags": [
        "Programming Language Design",
        "Rust (programming language)",
        "Learning to Program",
        "Programming Languages"
    ],
    "response": [
        {
            "author_info": {
                "name": "Nathan F Yospe",
                "href": "/profile/Nathan-F-Yospe"
            },
            "answer_text": "I am an expert C++ engineer; there are others here who can attest to that. I am a reasonably competent novice Rust engineer, meaning I have written production code in Rust for barely a full year. I am still faster at producing high quality libraries and platforms (servers, frameworks, etc) in C++ than Rust. But I can bring a novice with only Python and/or JS experience up to production level competence in Rust in a matter of months. I cannot claim the same for C++. I consider this a major advantage for Rust. Ultimately, I would attribute Rust\u2019s growing (though still nascent) popularity to the fact that it is the first real alternative to C++ that has the same attitude toward performance, specificity, and multi-paradigm flexibility and depth, without the cruft of age and compatibility (more or less) with C, that isn\u2019t either so platform or domain associated as to not be general purpose (Objective-C, Swift, Julia) or hobbled by its own first-generation mistakes (D with GC), or a lack of clear direction (NIM). My biggest complaint about Rust is the sparsity of existing libraries for many things that are both too much of a hassle to entice me into writing my own, and too ubiquitous to get by without in many commercial domains. Notably, non-minimal XML support, I\u2019m still quite fond of C++, and continue to use it professionally, but Rust has joined it as my \u201cother favorite\u201d, and I\u2019m quite fortunate to have the opportunity to use both. ",
            "date": "Answered April 26, 2019",
            "views": "289",
            "upvotes": " View 256 Upvoters ",
            "upvoters": [
                {
                    "user_id": "Alan Mellor",
                    "user_href": "/profile/Alan-Mellor"
                },
                {
                    "user_id": "Kevin Wortman",
                    "user_href": "/profile/Kevin-Wortman"
                },
                {
                    "user_id": "Slavomir Kaslev",
                    "user_href": "/profile/Slavomir-Kaslev"
                },
                {
                    "user_id": "Steven Spithaler",
                    "user_href": "/profile/Steven-Spithaler-1"
                },
                {
                    "user_id": "Rusty Shackleford",
                    "user_href": "/profile/Rusty-Shackleford-921"
                },
                {
                    "user_id": "Gabriel Salmon",
                    "user_href": "/profile/Gabriel-Salmon"
                },
                {
                    "user_id": "Joseph Fox",
                    "user_href": "/profile/Joseph-Fox-147"
                },
                {
                    "user_id": "Abraham Mwaura",
                    "user_href": "/profile/Abraham-Mwaura"
                },
                {
                    "user_id": "Kumar Sourav",
                    "user_href": "/profile/Kumar-Sourav-6"
                },
                {
                    "user_id": "Julien Mihai",
                    "user_href": "/profile/Julien-Mihai-1"
                }
            ]
        },
        {
            "author_info": {
                "name": "Cody Jackson",
                "href": "/profile/Cody-Jackson-13"
            },
            "answer_text": "A2A I haven\u2019t used Rust, but I\u2019ve followed its development over the years, simply to see whether it has lasting power. From what I understand, Rust is basically an improvement on C++. In the vein that Java and C# improve on C++, Rust fixes some of the problems of C++ but does it in a manner that makes it more secure for programming work. In short, it is designed to be more memory safe, thus reducing or eliminating a lot of the security problems associated with C++. It also emphasis concurrency, much like Go, so that the developer doesn\u2019t have to spend a lot of time hand-coding multithread/multiprocess applications. ",
            "date": "Answered September 21, 2019",
            "views": "572",
            "upvotes": " View 1 Upvoter ",
            "upvoters": [
                {
                    "user_id": "Surya Teja Parnampedu",
                    "user_href": "/profile/Surya-Teja-Parnampedu"
                }
            ]
        }
    ]
}