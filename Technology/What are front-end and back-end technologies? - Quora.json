{
    "title": "What are front-end and back-end technologies? - Quora",
    "tags": [
        "Backend Development",
        "Front-End Web Development"
    ],
    "response": [
        {
            "author_info": {
                "name": "Akshay Pawar",
                "href": "/profile/Akshay-Pawar-270"
            },
            "answer_text": "Front-End And Back-End are often talked about separately and seen as two very different things,but they are both closely connected to each other in Web Development projects. Front-End is also called \u201dClient-Side\u201d programming. This used to show user the view like web pages. Everything user can sees and interacts. Back-End is also called \u201cServer-Side\u201d Programming.The main logic and database server connection is maintain in this side. Front-End vs Back-End Important Role Both play a crucial role in web development and although they have their fair share of differences, they are like two sides of the same coin. Front-end is all about the visual aspects of the website that a user can see and experience. On the contrary, everything that happens in the background can be attributed to the back-end web development. It\u2019s more like an enabler for Front-End web experience. Front-End vs Back-End Developer Role The web designer is the most common job title for the Front-End web development and the role of a web designer is to design and rebuild websites keeping the visual aspects in mind. Back-End developers are the ones who make sure the data and systems requested by the Front-End application or software are efficiently delivered. Back-End developers handle everything that happens in the background. Basic Technology used in Front-End HTMLCSSJavaScriptUX and UI DesignBasic Technology used in Back-End Programming languagesFrameworksDatabase Management systemWeb serversWeb Services",
            "date": "Answered October 5, 2020",
            "views": "196",
            "upvotes": "0"
        },
        {
            "author_info": {
                "name": "Mohammad Zulqarnain",
                "href": "/profile/Mohammad-Zulqarnain-6"
            },
            "answer_text": " We often think of back-end languages as code that's processed by something built in to the web server itself or a plugin to the server, but it's possible for a script written in one of those back-end languages to launch external processes (native applications) on the server, so really, you could use just about anything as a back-end language, from compiled C/C++ to a bash shell script. (Whether it makes sense to do that is another thing.) As for front-end languages, I think of a front end as anything that the user interacts with directly. That could be an app running in a web browser, a \"thick client\" desktop application, or a native application on a mobile device. So again, really, there's a huge array there. If you want lists, for back-end languages (in order of my ability to recall): Java (and other JVM languages like Scala, Groovy, Clojure)PHP.NET (C#, VB)RubyPythonPerlJavascript (Node JS)Actionscript (Flash Media Server)CoffeeScriptC (CGI)Erlangoh, and SQL for db queriesFor browser-based front-end languages, you're somewhat limited in what the browser can support (excluding launching out-of-browser applications). We could talk about: HTMLJavascriptCSSActionscriptCoffeeScript (compiled to Javascript)XML-based languages (X3D, SMIL, SVG, DITA, some interpreted by the browser, others transformed using XSL)VBScriptSilverlightJava (applets)For native PC desktop front-ends, most popular front-end languages would probably be (I'm guessing, in no order): Visual Basic 6 (from my experience with big enterprises, I bet a lot of those are still out there, just like Windows Vista).NETJava (Swing apps)But just about every language that can create desktop apps also has some net code library that lets you write n-tiered applications (Kivy (Python), Tcl/Tk, ...). For native mobile application front-ends, most popular would probably be: Objective C (for iOS apps)Java (Android apps)But if you just want most popular (browser-based) web application development stacks, that would probably some combination of the following: Front-end: HTML / Javascript / CSSBack-end: PHP / Java / Javascript / Ruby / .NET / Python ",
            "date": "Answered April 18, 2018",
            "views": "219",
            "upvotes": " View 8 Upvoters",
            "upvoters": [
                {
                    "user_id": "Ranit Biswas",
                    "user_href": "/profile/Ranit-Biswas-5"
                },
                {
                    "user_id": "Dhruv Narayan",
                    "user_href": "/profile/Dhruv-Narayan-6"
                },
                {
                    "user_id": "Mrudula Munni",
                    "user_href": "/profile/Mrudula-Munni"
                },
                {
                    "user_id": "Guru Prasath",
                    "user_href": "/profile/Guru-Prasath-15"
                },
                {
                    "user_id": "Elie Ionel",
                    "user_href": "/profile/Elie-Ionel"
                },
                {
                    "user_id": "Pranav Kennedy",
                    "user_href": "/profile/Pranav-Kennedy"
                },
                {
                    "user_id": "Mathew George",
                    "user_href": "/profile/Mathew-George-270"
                },
                {
                    "user_id": "Kuldeep Singh",
                    "user_href": "/profile/Kuldeep-Singh-2840"
                }
            ]
        }
    ]
}