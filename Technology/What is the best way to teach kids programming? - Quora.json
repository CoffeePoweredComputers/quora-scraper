{
    "title": "What is the best way to teach kids programming? - Quora",
    "tags": [
        "Programming for Kids",
        "Digital Literacy",
        "Children and Technology",
        "Primary School Education",
        "Learning to Program",
        "Parenting",
        "Computer Programming"
    ],
    "response": [
        {
            "author_info": {
                "name": "Travis Calder",
                "href": "/profile/Travis-Calder"
            },
            "answer_text": "I absolutely think programming/scripting should be taught in school, and I even think it should be a mandatory subject. However, I do not believe software engineering should be taught in school, except as an elective. That\u2019s a leap I\u2019ve seen people make. I don\u2019t think we should try to force students to learn how to write the next big app or awesome server-side startup in high school. (As an elective, go for it, but don\u2019t force it.) So how exactly do we do that? I honestly don\u2019t know, but I do have some personal feelings: You should start in grade school with \u201cScratch\u201d or similar. Focusing on fun little games, and build towards a real \u201cproject\u201d at the end of grade school. Let them show off those projects to the younger kids!In middle-school, shift the focus to a REPL-capable language, but keep the overall structure similar. Mix in some computing fundamentals (RAM vs HDD vs SSD) and light history. Include I/O. Build again towards a project at the end of middle-school that incorporates everything.In high-school is when you can dip into meaningful distinctions between collections, some light theory, discussion of algorithmic complexity, functional techniques, recursion, utilizing multiple CPUs and why that\u2019s hard but important.Optional courses starting in high-school can explore specific niches like Software Engineering, Machine Learning, App Development, Web Development, etc. all with the goal of giving enough of a taste to help students decide if they want to pursue that topic more thoroughly.Computers are particularly cool because they mix the intellectual rigour of subjects like Math with the enjoyment students get out of doing something real in a hands-on way, like an Art or Industrial Arts class. In Math, you learn how to do problems, but it\u2019s not clear how that ever could be useful. That\u2019s the reason most of my classmates hated it. In Computers, you learn how to make something that solves problems for you, and can actually make something you enjoy like a game. Then in High School you shift the conversation towards the massive potential that computers have locked within them. We have watches more powerful than mainframes used to be - how do I access that instead of just treating it like a toaster with a \u201cgo\u201d button? Of course, therein lies the hardest problem - how do you keep course-content relevant? How much more powerful will computers be in 5\u201310 years? It\u2019ll require a much more fluid approach than most classes we teach today. ",
            "date": "Answered December 11, 2018",
            "views": "811",
            "upvotes": " View 1 Upvoter",
            "upvoters": [
                {
                    "user_id": "Jack Mounser",
                    "user_href": "/profile/Jack-Mounser"
                }
            ]
        },
        {
            "author_info": {
                "name": "David Urquhart",
                "href": "/profile/David-Urquhart"
            },
            "answer_text": "  As the son of a teacher and a systems engineer I can claim to be genetically qualified to answer. My real qualification is that I've raised two children to adulthood and I did try to teach them something about programming when they were in grade / primary school.  First, be aware that: Not every kid is going to be interested in programming.  You want an approach that will be of interest to a wide range of personalities.  You want them to take something positive away from the experience, even if they aren't the next John Carmack.[1]Children have limited attention spans and quickly lose interest in dry material.  The more you can make programming seem like playing a game, the better.[2]You don't want to rush with brains that are immature - for example, at 11, males may be less than halfway to their peak brain volume! [3] But it's a great time to teach because 11 year olds are approaching the second of their peaks in neuroplasticity.Bearing all of this and more in mind, when the time comes for \"hands-on programming\", the ESSENTIAL experience for kids is \"Scratch\" from MIT.  See scratch.mit.edu or see the review in the New York Times.[4] One of Scratch's strengths is that it  combines teaching with play in an environment that is highly creative and  can accommodate silliness.  If the experience is fun, there's more chance children will experiment with it when they're on their own or with their friends. A friend of mine has produced a stepping stone for kids who outgrow Scratch but are not quite ready for a grown-up language. A key feature is mobile support. See www.s2js.com Notes and Sources: John Carmack of id Software did the programming for a series of advanced computer games including Doom and Quake.I wholeheartedly agree with the other answers that recommend laying a foundation of logic and pseudo code.Lenroot, et al, \"Sexual dimorphism of brain developmental trajectories during childhood and adolescence\", 2007 http://www.boysadrift.com/2007Giedd.pdfWayner, P., \"Programming for Children, Minus Cryptic Syntax\", New York Times, 9 November 2011 http://www.nytimes.com/2011/11/10/technology/personaltech/computer-programming-for-children-minus-cryptic-syntax.html?_r=3",
            "date": "Updated April 19, 2015",
            "views": "206",
            "upvotes": " View 40 Upvoters",
            "upvoters": [
                {
                    "user_id": "Stephen M. Bear",
                    "user_href": "/profile/Stephen-M-Bear"
                },
                {
                    "user_id": "Riya Bisht",
                    "user_href": "/profile/Riya-Bisht-23"
                },
                {
                    "user_id": "Sophia Zhang",
                    "user_href": "/profile/Sophia-Zhang-197"
                },
                {
                    "user_id": "Jim Lareau",
                    "user_href": "/profile/Jim-Lareau"
                },
                {
                    "user_id": "Vin\u00edcius Barros",
                    "user_href": "/profile/Vin\u00edcius-Barros-3"
                },
                {
                    "user_id": "Sean Jones",
                    "user_href": "/profile/Sean-Jones-482"
                },
                {
                    "user_id": "Rathish Poovadan",
                    "user_href": "/profile/Rathish-Poovadan"
                },
                {
                    "user_id": "Ahmad Al-Baqawi",
                    "user_href": "/profile/Ahmad-Al-Baqawi"
                },
                {
                    "user_id": "Olga Petrushansky",
                    "user_href": "/profile/Olga-Petrushansky"
                },
                {
                    "user_id": "Danial Javady",
                    "user_href": "/profile/Danial-Javady"
                }
            ]
        }
    ]
}