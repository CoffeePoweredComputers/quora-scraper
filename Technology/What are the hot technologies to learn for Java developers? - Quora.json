{
    "title": "What are the hot technologies to learn for Java developers? - Quora",
    "tags": [
        "Java Developers",
        "Learning Java",
        "Java (programming language)",
        "Learning New Things",
        "Learning to Program"
    ],
    "response": [
        {
            "author_info": {
                "name": "Venkat Sudheer Reddy Aedama",
                "href": "/profile/Venkat-Sudheer-Reddy-Aedama"
            },
            "answer_text": "Some of these may have already been mentioned, but these technologies top my list: 1. Play Framework: Build Modern & Scalable Web Apps with Java and ScalaWhy ? - A simple MVC Framework. I call it simple because you won't spend lots of time in configuration unlike other Java frameworks!- Hot code-reloading. This boosts developer productivity. - Async IO. Really cool stuff.- Supports Scala besides Java which means you can explore more cool things. 2. Akka (Akka has won this year\u2019s JAX Award for most innovative open technology)Why ? Because managing concurrency in Java is sometimes complicated.It's a cool library for Java and Scala which emphasizes on Actor-based concurrency. It provides APIs for handling concurrency, managing fault-tolerance etc. Very much fun but have to be really careful with the usage of Actors (esp Actors vs. Futures) 3. Any NoSQL database (like Cassandra/MongoDB/Riak/Neo4J/HBase/ElasticSearch/Solr etc.) You can play with it's Java driver to get a feel for common APIs. Why ?There are a lots of motivations for NoSQL and it has become very common now-a-days. 4. A pub-sub messaging system (like Kafka, RabbitMQ, ActiveMQ, Storm etc.)Why ?Now-a-days, most web-based apps need loose coupling and high scaling. Messaging systems are a most commonly used solution for this problem. 5) Cluster computing framework (I suggest Spark over Hadoop) 6) Mobile apps development using Android 7) Cool libraries like Google Guice, Open NLP, Commons Math, JUnit with Mockito and TestNG, Apache HTTP.  8) Advance to other JVM Programming languages. Try out Groovy/Scala/Clojure (Scala is my personal favorite) Keeping aside the technologies, Java 8 is awesome with lots of support for Functional Programming. I suggest learning those techniques if you haven't had a chance to look into it. ",
            "date": "Answered May 13, 2015",
            "views": "283",
            "upvotes": " View 44 Upvoters",
            "upvoters": [
                {
                    "user_id": "Anuraj Diliprajan",
                    "user_href": "/profile/Anuraj-Diliprajan"
                },
                {
                    "user_id": "Harshita Singh",
                    "user_href": "/profile/Harshita-Singh-150"
                },
                {
                    "user_id": "Christopher Wakare",
                    "user_href": "/profile/Christopher-Wakare-1"
                },
                {
                    "user_id": "Vittal Rakumayi",
                    "user_href": "/profile/Vittal-Rakumayi"
                },
                {
                    "user_id": "Ahmed E. Eldeeb",
                    "user_href": "/profile/Ahmed-E-Eldeeb"
                },
                {
                    "user_id": "Tarun Agarwal",
                    "user_href": "/profile/Tarun-Agarwal-266"
                },
                {
                    "user_id": "Tannishtha Mukhopadhyay",
                    "user_href": "/profile/Tannishtha-Mukhopadhyay"
                },
                {
                    "user_id": "Satyabrata Patra",
                    "user_href": "/profile/Satyabrata-Patra"
                },
                {
                    "user_id": "Tareq Aljabban",
                    "user_href": "/profile/Tareq-Aljabban"
                },
                {
                    "user_id": "Vaibhav Jain",
                    "user_href": "/profile/Vaibhav-Jain-313"
                }
            ]
        },
        {
            "author_info": {
                "name": "Bin Sand",
                "href": "/profile/Bin-Sand"
            },
            "answer_text": "7 New Tools Java Developers Should Know   Get ready to lock and load through this quick overview of some of the newest most innovative, tools around. In case you\u2019ve missed it, RebelLabs recently released the results of a global survey of the Java tools and technologies landscape. Alongside the big names and established tools, the market is bubbling with fresh tools and frameworks that not so many people have heard of (yet). In this post I decided to gather a short list of such tools, most of them launched just recently. Some are Java specific and some support other languages as well, but they\u2019re all great for Java projects and share a vision of simplicity. Let\u2019s roll. 1. JClarity \u2013 Performance Monitoring Launched last September, JClarity is now offering two products around Java performance: Illuminate and Censum. Illuminate is a performance monitoring tool, while Censum is an application focused on garbage collection logs analysis. More than just collecting data or visualizing it, both tools provide actionable insights to solve the issues they detect. \u201cWhat we want to do is to move the problem from data collection to data analysis and insight\u201d \u2013 JClarity Co-Founder Ben Evans.   Key features:      Bottleneck detection (Disk I/O, Garbage Collection, Deadlocks, and more).     Action plan \u2013 Recommendations to solve the problem, such as \u201cThe application needs to increase the number of active threads\u201d.     Explanation \u2013 Defining the problem in general and the common causes for it, for example \u201cA high percentage of time spent paused in GC may mean that the heap has been under-sized\u201d. What\u2019s unique about it: offers the next step after monitoring and identifying your performance problems \u2013 actionable insights to solve issues on the spot. Behind the curtain: London based JClarity was founded by Martijn Verburg, Kirk Pepperdin and Ben Evans, all are well known Java performance veterans. Read more about how JClarity came to be, right here. Continue Reading Here: 7 New Tools Java Developers Should Know | Takipi Blog ",
            "date": "Answered May 5, 2015",
            "views": "188",
            "upvotes": " View 10 Upvoters",
            "upvoters": [
                {
                    "user_id": "Amala Vankayala",
                    "user_href": "/profile/Amala-Vankayala-1"
                },
                {
                    "user_id": "Satyabrata Patra",
                    "user_href": "/profile/Satyabrata-Patra"
                },
                {
                    "user_id": "Hargun Singh Suri",
                    "user_href": "/profile/Hargun-Singh-Suri-2"
                },
                {
                    "user_id": "Sagnik Das",
                    "user_href": "/profile/Sagnik-Das-14"
                },
                {
                    "user_id": "Anish Ghosh",
                    "user_href": "/profile/Anish-Ghosh-3"
                },
                {
                    "user_id": "Bruno Moura",
                    "user_href": "/profile/Bruno-Moura"
                },
                {
                    "user_id": "Andrei Manu",
                    "user_href": "/profile/Andrei-Manu"
                },
                {
                    "user_id": "Jay Patel",
                    "user_href": "/profile/Jay-Patel-359"
                },
                {
                    "user_id": "Bahadur Misho",
                    "user_href": "/profile/Bahadur-Misho"
                },
                {
                    "user_id": "Tubagus Prasetya",
                    "user_href": "/profile/Tubagus-Prasetya"
                }
            ]
        }
    ]
}