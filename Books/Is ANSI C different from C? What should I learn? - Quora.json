{
    "title": "Is ANSI C different from C? What should I learn? - Quora",
    "tags": [
        "C (programming language)",
        "Programming Languages"
    ],
    "response": [
        {
            "author_info": {
                "name": "Yash Shah(\u0aaf\u0ab6 \u0ab6\u0abe\u0ab9)",
                "href": "/profile/Yash-Shah-\u0aaf\u0ab6-\u0ab6\u0abe\u0ab9"
            },
            "answer_text": "ANSI is a US standards body that released the first standard specification for C in 1989. The standard was adopted by ISO in 1990 and ISO are now the standards body for the language - not ANSI. ANSI C merely refers to a particular standard for the C Programming Language - i.e. there is no difference, they refer to the same thing. However there have been several standards and de-facto standards for C: K&R C - as defined by the first edition of The C Programming Language by Brian Kernhigan and Dennis Ritchie, published in 1978.ANSI C - 1989 (also known as C89). Described (but no longer defined) by K&R 2nd Ed.ISO C 1990 (C90 - more-or-less identical to C89, but in an ISO document).ISO C 1999 (C99)ISO C 2011 (C11)What is difference between ANSI C and C Programming Language? ",
            "date": "Answered October 4, 2019",
            "views": "419",
            "upvotes": " View 1 Upvoter",
            "upvoters": [
                {
                    "user_id": "Matius Pakpahan",
                    "user_href": "/profile/Matius-Pakpahan"
                }
            ]
        },
        {
            "author_info": {
                "name": "Toby Thain",
                "href": "/profile/Toby-Thain"
            },
            "answer_text": "Pretty much all C you will encounter is ANSI, now. It was standardised in 1989. Those compilers that haven't removed support for K&Risms already, won't support them much longer. If your textbook (like my edition of K&R) still refers to K&R syntax then you should find a post-ANSI edition. This isn't just a style issue; I recently discovered, somewhat to my surprise, that some ABI's (OS X on PowerPC for example) require the compiler to generate less efficient code for K&R style function declarations vs ANSI prototype declarations. ",
            "date": "Updated July 18, 2015",
            "views": "17",
            "upvotes": " View 7 Upvoters",
            "upvoters": [
                {
                    "user_id": "Jayita Das",
                    "user_href": "/profile/Jayita-Das-22"
                },
                {
                    "user_id": "Hariram",
                    "user_href": "/profile/Hariram-14"
                },
                {
                    "user_id": "Titus von K\u00f6ller",
                    "user_href": "/profile/Titus-von-K\u00f6ller"
                },
                {
                    "user_id": "Belal Fathy",
                    "user_href": "/profile/Belal-Fathy"
                },
                {
                    "user_id": "Devershetty Samarth",
                    "user_href": "/profile/Devershetty-Samarth"
                },
                {
                    "user_id": "Jack Clark",
                    "user_href": "/profile/Jack-Clark-24"
                },
                {
                    "user_id": "John Buginas",
                    "user_href": "/profile/John-Buginas"
                }
            ]
        }
    ]
}