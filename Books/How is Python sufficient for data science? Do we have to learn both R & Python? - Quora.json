{
    "title": "How is Python sufficient for data science? Do we have to learn both R & Python? - Quora",
    "tags": [
        "R (programming language)",
        "Data Science",
        "Python (programming language)",
        "Programming Languages"
    ],
    "response": [
        {
            "author_info": {
                "name": "Sumit Rana",
                "href": "/profile/Sumit-Rana-495"
            },
            "answer_text": "You need not to learn both. Here is the difference between R vs Python. It will help you to choose the best one for data science. R vs Python is one of the most common but important question asked by lots of data science students. Today I am going to tell of the major difference between R and Python. We know that R and Python both are open source programming languages. Both of these languages are having a large community. Both of these languages are having continuous development. That\u2019s is the reason these languages add new libraries and tools in their catalog. The major purpose of using R is for statistical analysis, on the other hand Python provide the more general approach to data science. Both of the languages are state of the art programming language for data science. Python is one of the simplest programming languages in terms of its syntax. That\u2019s why any beginner in a programming language can learn R without putting extra efforts. On the other hand, R is built by statisticians that are a little bit hard to learn. There are some reasons that will help us to find out why we should not use both R and Python. R R is one of the oldest programming language developed by academics and statisticians. R comes into existence in the year 1995. Now R is providing the richest ecosystem for data analysis. The R programming language is full of libraries. There are a couple of repositories also available with R. In fact, CRAN is having around 12000 packages. The rich variety of library makes it the first choice for statistical analysis and analytical work. Key features of R Consists of packages for almost any statistical application one can think of. CRAN currently hosts more than 10k packages.Comes equipped with excellent visualization libraries like ggplot2.Capable of standalone analysesPython On the other hand Python can do the same tasks as R programming language does. The major features of python are data wrangling, engineering, web scraping and so on. Python is also having the tools that help in implementing the machine learning at large scale. Python is one of the simplest languages to maintain and it is more robust than R. Now a day Python is having the cutting edge API. This API is quite helpful in machine learning and AI. Most of the data scientist uses only five Python libraries i.e Numpy, Pandas, Scipy, Scikit-learn and Seaborn. It is quite handy to use Python over R. Key features of Python programming language:- Object-oriented languageGeneral PurposeHas a lot of extensions and incredible community supportSimple and easy to understand and learnpackages like pandas, numpy and scikit-learn, make Python an excellent choice for machine learning activities.R or Python Usage Python has developed by Guido van Rossum in 1991. Python is the most popular programming language in the world. It has most powerful libraries for math, statistic, artificial intelligence and machine learning. But still python is not useful for econometrics and communication, and also for business analytics. On the other hand, R is developed by academics and scientist. It is specially designed for machine learning and data science. R is having the most powerful communication libraries that are quite helpful in data science. In addition, R is equipped with many packages that are used to perform the data mining and time series analysis. Why not use Both? Lots of people think that they can use both the programming languages at the same time. But we should prevent to use them at the same time. Majority of people are using only one of these programming languages. But they always want to have access to the capability of the language adversary. For example, if you use both the language at the same time that may face some of the problems. If you use R and you want to perform some object-oriented function than you can\u2019t use it on R. On the other hand, Python is not suitable for statistical distributions. So that they should not use both the language at the same time, because there is a mismatch of their functions. But there are some ways that will help you to use both of these languages with one another. We will talk about them in our next blog. Let\u2019s have a look at the comparison between R vs Python. R is more functional, Python is more object-oriented. R is more functional, it provides variety of functions to the data scientist i.e Im, predict and so on. Most of the work done by functions in R. On the other hand Python use classes to perform any task within the python. R has more data analysis built-in, Python relies on packages. R provides the build in data analysis for summary statistics, it is supported by summary built-in functions in R. But on the other hand we have to import the statsmodel packages in Python to use this function. In addition there is also a built in constructor in R i.e is dataframe. On the other hand we have to import it in Python. Python also helps to do linear regression, random forests with its scikit learn package. As mentioned above it also offers API for machine learning and AI. On the other hand R is having the greatest diversity of packages. R has more statistical support in general. R was created as a statistical language, and it shows . statsmodels in Python and other packages provide decent coverage for statistical methods, but the R ecosystem is far more large. It\u2019s usually more straightforward to do non-statistical tasks in Python. With well-placed libraries like beautifulsoup and request, web scraping in Python is much easier than R. This applies to other tasks that we don\u2019t see closely, such as saving the database, deploying the Web server, or running a complex selfie. There are many parallels between the data analysis workflow in both. R and Python are the clearest points of inspiration between the two (pandas were inspired by the Dataframe R Dataframe, the rvest package was inspired by the Sundersaute), and the two ecosystems are getting stronger. It may be noted that the syntax and approach for many common tasks in both languages are the same. Lets Sum Up R vs Python Now you have got a detailed comparison on R vs Python. Both of these languages are having their own strength and weakness. You can use either one for data analysis and data science. Both of these languages are having a similarity in terms of their syntax and approach. You can pick any one of them, no one will let you down. Now you may come to know the basic strengths of these languages over each other. Now you may be more confident to choose the best one as per your needs. If you are the students of R programming language then you can get the best R programming assignment help or R programming homework help from our experts. ",
            "date": "Answered September 11, 2019",
            "views": "571",
            "upvotes": " View 2 Upvoters",
            "upvoters": [
                {
                    "user_id": "Sridevi",
                    "user_href": "/profile/Sridevi-64"
                },
                {
                    "user_id": "Tony Ayaz",
                    "user_href": "/profile/Tony-Ayaz-2"
                }
            ]
        },
        {
            "author_info": {
                "name": "Raja Nadar",
                "href": "/profile/Raja-Nadar-14"
            },
            "answer_text": "None of these are sufficient for data science, by themselves. Knowledge of Python aloneKnowledge of R aloneKnowledge of both Python and RAny of the above option has to be on top of certain core concepts, agnostic of languages. First and foremost data science as a discipline is agnostic of any implementation language like Python or R. So the primary goal should be to be absolutely well versed with the concepts of data science. E.g Concepts like Data set, accuracy, classification, clustering, feature engineering, dimension reduction, supervised and unsupervised learning, regression, numerical prediction, binary prediction, training data, model building, test data, d trees, forests, various algorithms (Bayes etc) and mathematical formulae, tweaking the parameters of the algorithms and knowing things like \u2018higher accuracy is not better data science necessarily\u2019 (overfit). Once you have a solid grasp of concepts, your foundation as a data scientist is rock solid. You can articulate the science of data conceptually. This is the most important and mandatory part of learning data science. Now comes the implementation part. Know that, the implementation can be in any language. Lots of languages (including Java and C#) support data science. The two most conducive languages are Python and R. Python is a general purpose productive language, that has somehow resulted in an excellent option to do data science.It can be used for much more than that.Python has pretty good packages and nlp kits for data learning.R is more dedicated to data science as its primary use case.Because of this, I think it has a little more capability than Python for data modeling and visualization.But it does exhibit an one dimensional solution.So if you are sure of your path with no other variation, R is an excellent option. And if you want to keep a little bit of flexibility outside of data science, to have a tool in your armory to do any other kind of automation etc on top of data science, then Python is an excellent option. It is not mandatory to learn both. But like any two languages, knowing both is only going to make your resume and prospects look better. Especially because most data science jobs may belong to one of the two factions: Python or R. ",
            "date": "Answered October 26, 2017",
            "views": "27",
            "upvotes": " View 6 Upvoters ",
            "upvoters": [
                {
                    "user_id": "Amschel Bernstein",
                    "user_href": "/profile/Amschel-Bernstein"
                },
                {
                    "user_id": "Vishwapriya Gautam",
                    "user_href": "/profile/Vishwapriya-Gautam-1"
                },
                {
                    "user_id": "Prasanth Medicharla",
                    "user_href": "/profile/Prasanth-Medicharla-1"
                },
                {
                    "user_id": "Dhruv Aggarwal",
                    "user_href": "/profile/Dhruv-Aggarwal-75"
                },
                {
                    "user_id": "Manisha Sinha",
                    "user_href": "/profile/Manisha-Sinha-51"
                },
                {
                    "user_id": "Paril Kotecha",
                    "user_href": "/profile/Paril-Kotecha"
                }
            ]
        }
    ]
}