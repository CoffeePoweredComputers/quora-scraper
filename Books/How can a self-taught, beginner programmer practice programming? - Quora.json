{
    "title": "How can a self-taught, beginner programmer practice programming? - Quora",
    "tags": [
        "Learning Software Engineering",
        "Self-Teaching",
        "Software Engineering",
        "Learning to Program",
        "Web Development"
    ],
    "response": [
        {
            "author_info": {
                "name": "Gericke Potgieter",
                "href": "/profile/Gericke-Potgieter"
            },
            "answer_text": "For the majority of my programming skills I am self taught.  I had some basic training during school and university, but nothing that I couldn't have learned from the web. The way I practiced was to simply start creating small pieces of software that would do fulfill functions I needed.  For example, a simple calculator that can calculate age in years, months, days, hours, minutes and seconds. What you will find is that larger projects essentially consist of smaller parts that pass information between them - so, if you can look at a piece of software and identify the parts, you can create mini projects that will allow you to do something similar.  Take a word processor for example - it is a text editor that allows you to manipulate text on a virtual page - you can start by creating a simple notepad clone that allows you to save and edit text files, then proceed to add rich text elements, and then go on towards printing and file sharing.  It won't be a full word processor, but you would have learned a lot about the underlying concepts. ",
            "date": "Answered February 17, 2015",
            "views": "603",
            "upvotes": " View 4 Upvoters",
            "upvoters": [
                {
                    "user_id": "Harsh Pathania",
                    "user_href": "/profile/Harsh-Pathania"
                },
                {
                    "user_id": "William Robson",
                    "user_href": "/profile/William-Robson-1"
                },
                {
                    "user_id": "Hannan Ali",
                    "user_href": "/profile/Hannan-Ali-3"
                },
                {
                    "user_id": "LE Thai",
                    "user_href": "/profile/LE-Thai"
                }
            ]
        },
        {
            "author_info": {
                "name": "Daniel Ly",
                "href": "/profile/Daniel-Ly"
            },
            "answer_text": "As a teenager I started programming without anybody teaching me. You need curiosity, methodic thinking, tenaciousness and inventiveness to get started and write working programs. Curiosity because self-teaching only works if you are really interested in the stuff you resolved to learn. Methodic thinking because it is impossible to fix something by chance. Try and think carefully and isolate possible causes errors. At worst use divide and conquer, that means, omit the half of the program and see whether the error still occurs and repeat with quarters and one eights of the code till you have a chance to spot the mistake. Tenaciousness because programming is hard. Fumble a dot by a comma and nothing works anymore. Error messages can be outright misleading. It's frustrating. Don't give up. With methodic thinking it is possible to fix errors, but it takes patience. Inventiveness because software is limited. Find clever ways to work around limitations, but first be tenacious to find official solutions (don't reinvent the wheel). Also understand that computers are stupid, layered and that there's no magic (for more details see Daniel Ly's answer to What can I learn right now in just 10 minutes that could be useful for the rest of my programming career? Especially tips for C, C++, Java, any programming language in general, or anything that might have improved your programming skills.). ",
            "date": "Answered August 23, 2014",
            "views": "11",
            "upvotes": " View 5 Upvoters",
            "upvoters": [
                {
                    "user_id": "Tenaja Young",
                    "user_href": "/profile/Tenaja-Young-4"
                },
                {
                    "user_id": "Nhat Nguyen",
                    "user_href": "/profile/Nhat-Nguyen-128"
                },
                {
                    "user_id": "Vincent Enyinwa",
                    "user_href": "/profile/Vincent-Enyinwa"
                },
                {
                    "user_id": "Hannan Ali",
                    "user_href": "/profile/Hannan-Ali-3"
                },
                {
                    "user_id": "Tin Drilon",
                    "user_href": "/profile/Tin-Drilon"
                }
            ]
        },
        {
            "author_info": {
                "name": "Narayanan Sankaranarayanan",
                "href": "/profile/Narayanan-Sankaranarayanan-1"
            },
            "answer_text": "I am not even sure why you picked PHP in the first place as a beginner. I picked C when I was a beginner though I was not self-taught in C. I self-taught several other programming languages during my carreer. C / C++ really shows you the internals of programming and computer science. In programming you can solve a problem in several differnet ways. Try to find problems and solve in as many ways as possible.Come up with creative ideas and and try to work on them as a hobby. Take up a job as a programmer where you will have the opportunity to learn more.When you look around in the web, see how others have solved problems in a certain way and see how your solutions would compare.Curiousity definitely helps. ",
            "date": "Answered April 20, 2015",
            "views": "591",
            "upvotes": " View 1 Upvoter",
            "upvoters": [
                {
                    "user_id": "Harsh Pathania",
                    "user_href": "/profile/Harsh-Pathania"
                }
            ]
        },
        {
            "author_info": {
                "name": "Derrick Franco",
                "href": "/profile/Derrick-Franco"
            },
            "answer_text": "Make some projects in your spare time. That is the only way to do it. Start simple, make some quick projects that you could use or benefit from, or some quick ones that you and your friends could use. They may not be the best application or website in the world, but that's how we all start. You will see how different theory in the book is from real application too. ",
            "date": "Answered February 18, 2015",
            "views": "529",
            "upvotes": "0"
        },
        {
            "author_info": {
                "name": "John David",
                "href": "/profile/John-David-297"
            },
            "answer_text": "have you thought about volunteering your services for free so you can get some work experience and exposure to technologies you may not even know about? i have a few friends that write code for their church or for charities just to give back (and do some interesting projects). there are tons of repos online with active communities as well. am sure there are lots of projects you could get involved in if you really wanted to. working with other people can be a motivating factor and help you learn things much faster if they\u2019re helpful and know things you don\u2019t. ",
            "date": "Answered May 26, 2016",
            "views": "195",
            "upvotes": "0"
        },
        {
            "author_info": {
                "name": "Aaron Armstrong",
                "href": "/profile/Aaron-Armstrong"
            },
            "answer_text": "Why not start fixing bugs in an open source project you care about? Pick something really easy to get started, and work up from there. Once you're decent at that, start interviewing for jobs. You'll learn the most by doing. Keep reading books about software. They will help you grow and learn new techniques. ",
            "date": "Answered August 22, 2014",
            "views": "482",
            "upvotes": " View 1 Upvoter",
            "upvoters": [
                {
                    "user_id": "Lucas Vidgen",
                    "user_href": "/profile/Lucas-Vidgen"
                }
            ]
        },
        {
            "author_info": {
                "name": "Tarique Iqbal",
                "href": "/profile/Tarique-Iqbal"
            },
            "answer_text": "For a beginner following Tutorials for Computer Programming Languages site has good resources. Choose your desire programming language and start learning now! ",
            "date": "Answered February 17, 2015",
            "views": "432",
            "upvotes": "0"
        }
    ]
}