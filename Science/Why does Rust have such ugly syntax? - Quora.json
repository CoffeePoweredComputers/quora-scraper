{
    "title": "Why does Rust have such ugly syntax? - Quora",
    "tags": [
        "Rust (programming language)",
        "Programming Languages"
    ],
    "response": [
        {
            "author_info": {
                "name": "Christopher Patti",
                "href": "/profile/Christopher-Patti"
            },
            "answer_text": "First off, using words like \"ugly\" in relation to programming language aesthetics is such a subjective descriptor that it's almost meaningless. I don't find Rust to be ugly at all, but then I have some experience working in C++ which I personally find to be objectionably ugly beyond a certain point of complexity. As others have said, I suppose you could knock Rust for its use of very explicit symbols to be as explicit as possible about things, but given that this is meant to be a systems programming language, explicitness isn't just a feature it's an out and out requirement. I also think you have to keep in mind what the langauge is and what it's designed for.  If you're coming from more abstract languages like Ruby, Python, Java or C# I suppose you might find the way Rust's lower level of abstraction affects its syntax to be unappealing as well, but again it helps to be mindful of the language's design goals - to produce blazingly fast native code that is provably safe across several vectors of risk. So, everyone's entitled to their opinion, but I would urge you to take another look with the aforementioned factors in mind and see if your opinion changes. ",
            "date": "Answered October 26, 2015",
            "views": "68",
            "upvotes": " View 7 Upvoters",
            "upvoters": [
                {
                    "user_id": "Jose Narvaez",
                    "user_href": "/profile/Jose-Narvaez"
                },
                {
                    "user_id": "Mark Gritter",
                    "user_href": "/profile/Mark-Gritter"
                },
                {
                    "user_id": "Luis Vitier",
                    "user_href": "/profile/Luis-Vitier"
                },
                {
                    "user_id": "Sohan Roy",
                    "user_href": "/profile/Sohan-Roy-1"
                },
                {
                    "user_id": "Tom Yubing Dong",
                    "user_href": "/profile/Tom-Yubing-Dong"
                },
                {
                    "user_id": "Marc Bodnick",
                    "user_href": "/profile/Marc-Bodnick"
                },
                {
                    "user_id": "Mark Lefebvre",
                    "user_href": "/profile/Mark-Lefebvre-3"
                }
            ]
        },
        {
            "author_info": {
                "name": "Anh Khoa",
                "href": "/profile/Anh-Khoa-7"
            },
            "answer_text": "I\u2019m gonna be biased on this, because it\u2019s my most favorite programming language. It has almost everything I need. Its syntax makes so much senses to me. My first impression on Rust is not so good. I felt like \u201cmissing something\u201d when `if` and `for` didn\u2019t have parentheses, but it\u2019s only condition statements/range between them and braces, so no big deal. Then I felt uncomfortable with lifetime syntax, like `\u2019static` with an open single \u201csingle quotation mark\u201d, but create new syntax is just not an easy thing, so I should get used to it then. Everthing else is beatiful and clean to me. It\u2019s super easy to write and read, because I just use iterator chain and Rust do the rest, while still fast and readable. Less loops, more readable. I\u2019m always happy when I have new ideas that I know I\u2019m gonna write it in Rust, and it always works. ",
            "date": "Answered March 2, 2019",
            "views": "12",
            "upvotes": "0"
        }
    ]
}