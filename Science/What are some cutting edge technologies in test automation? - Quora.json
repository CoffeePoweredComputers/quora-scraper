{
    "title": "What are some cutting edge technologies in test automation? - Quora",
    "tags": [
        "Technology Startups",
        "Automated Testing",
        "Automation",
        "Software Testing",
        "List Question"
    ],
    "response": [
        {
            "author_info": {
                "name": "Amanda Green",
                "href": "/profile/Amanda-Green-138"
            },
            "answer_text": "Well, I\u2019m sure we\u2019re all itching to see artificial intelligence take the testing world by storm one of these days, but until then, the tech world has blessed us with codeless test automation. This takes the grunt work out of testing - by automating, and then takes the grunt work out of automation. Some of my favorites include: TestCraft - Codeless Selenium: With a gorgeous drag-and-drop test creation interface, this software allows for simple test creation, with continuous test integration/delivery, comprehensive test reports, and Smart Binding. This platform really has it all when it comes to testing and implementing Agile.TestingWhiz: Another great tool, with a wide variety of supported platforms, such as web, mobile, database, and cloud testingRanorex: This codeless test automation platform has a focus on UI automation, and integrates elements of traditional recorder testing as well.I acknowledge I\u2019m impartial when it comes to codeless test automation, but I believe regardless of what tool you choose for your testing project, you won\u2019t regret the time, money, and energy savings from going codeless! ",
            "date": "Answered August 2, 2017",
            "views": "907",
            "upvotes": " View 2 Upvoters",
            "upvoters": [
                {
                    "user_id": "Alisha Henderson",
                    "user_href": "/profile/Alisha-Henderson-3"
                },
                {
                    "user_id": "Merav Zaks",
                    "user_href": "/profile/Merav-Zaks"
                }
            ]
        },
        {
            "author_info": {
                "name": "Alexander Todorov",
                "href": "/profile/Alexander-Todorov"
            },
            "answer_text": "Because you asked about cutting edge, not most popular I will go with Laura Inozemtseva's talk at last year's GTAC:https://developers.google.com/google-test-automation-conference/2015/presentations#Day2LightningTalk5 She says that test coverage is a vanity metric which doesn't accurately represent the ability of your test suite to find bugs and I completely agree with that. Coverage is useful to a point and IMO as a tool to show you where you need to invest more resources. OTOH she proposes a method which will automatically modify your code, execute the entire test suite and detect if there was an error. I kind of imagine this to work line by line and inject meaningfull changes, not invalid syntax which the compiler/interpreter will catch. Then compare the errors found with the actual test that failed and you will discover the minimum set of tests which catch the most errors. Sounds cutting edge, doesn't it ? ",
            "date": "Answered April 9, 2016",
            "views": "697",
            "upvotes": " View 1 Upvoter",
            "upvoters": [
                {
                    "user_id": "Alisha Henderson",
                    "user_href": "/profile/Alisha-Henderson-3"
                }
            ]
        }
    ]
}