{
    "title": "Which is better, python or VBA? Why? - Quora",
    "tags": [
        "Visual Basic for Applications (VBA)",
        "Excel VBA",
        "Programming Computer Applications",
        "Learning Python",
        "Python (programming language)",
        "Learning to Program",
        "Software and Applications",
        "Programming Languages",
        "Computer Programming"
    ],
    "response": [
        {
            "author_info": {
                "name": "Joe Bockover",
                "href": "/profile/Joe-Bockover"
            },
            "answer_text": "Context matters. If you\u2019re considering VBA, then you\u2019re probably on the business-side of a project, data, or automation need. 95% of the time I would argue for VBA, regardless of the efficiencies or capabilities of python. And that is solely based on maintainability. You have to respect the next person or team that will inherit your project, automation flow, or macro/script. And the simple reality today is that the vast majority of non-IT business professionals using Office who can work with code or have an interest in it know VBA, not python (excluding data science). Once someone is an expert at python, they\u2019re probably ready for an IT or data science job. Python may be a wonderful language and technically superior, but when it comes to non-IT use, I\u2019ll always advocate for VBA. We have an example at our company (a big company, mind you), where a former employee in a dept designed several processes in python because that\u2019s what they liked. Unfortunately, when they left, there was no one to support these tools, while at least 5 employees in the dept could support VBA. Ultimately the dept needed to have IT come in, fund a project team, and redesign all of the processes in either a Microsoft standard OR move them to an IT group to be owned\u2014quite a substantial cost to the dept, simply because this employee believed (rightfully so) that python was \u201cbetter\u201d. A better language, sure, but not better for the business in this scenario. Now if you\u2019re supporting an IT group, software process, or a blended automation/RPA team with IT support, that\u2019s a totally different story. And if you\u2019re dabbling in data science, again it\u2019s a different story. But if you\u2019re looking for a simple enhancement to Office automation, particularly for Excel, just stick with VBA. Your manager, director, and the next person to pick it up will thank you. ",
            "date": "Answered August 26, 2020",
            "views": "14",
            "upvotes": " View 3 Upvoters ",
            "upvoters": [
                {
                    "user_id": "Mark W",
                    "user_href": "/profile/Mark-W-225"
                },
                {
                    "user_id": "Ashish P Naik",
                    "user_href": "/profile/Ashish-P-Naik"
                },
                {
                    "user_id": "Ariyo Oniyelu",
                    "user_href": "/profile/Ariyo-Oniyelu"
                }
            ]
        },
        {
            "author_info": {
                "name": "Guzman Safon",
                "href": "/profile/Guzman-Safon"
            },
            "answer_text": "Let\u2019s first define what are both of them. VBA (Visual Basic for Applicstions)[1] is an implementation of the BASIC programming language intended to control and automate Microsoft Office applications, developed by Microsoft. For instance, you can automatically create sheets, delete objects, create reports, create user-defined functions or link two programs, like taking data from an Excel spreadsheet and creating Word and PowerPoint reports, or even accessing non-Office programs that enable OLE Automation[2] or processes through the Windows API. [3] It is not a standalone program, it can only run in the host application (like Excel, Word). Microsoft stopped investing in VBA in 2008. It only update it for small changes, but you shouldn\u2019t expect new and interesting things from it. It is still widely used in the industry (specially linked to Excel) and it is a very easy language to learn. If offers you native automation. Python is an open source general programming language. This means it was not created for a specific purpose. It can literally be applied to many and different kind of projects, from data science, [4]machine learning, [5]web development, [6]desktop development [7] and of course\u2026 Excel[8] (and many other things). It is one of the easiest languages to learn and is on the top 5 of the most used languages.[9] It has a vibrant community and new features and libraries (already written code with a specific purpose) are always created.  For what I said we can mention: The language with the better and broader future is clearly PythonVBA is already integrated into MS Office. It\u2019s the native solution to automate Excel for instance.If you want to use python you have to install external software with a steeper learning curve, while using VBA is already integrated (you need no additional software).Which one is better? Well\u2026 it depends, as always. What do you want to do? If your intention is to work in Office exclusively (specially Excel) VBA is great. Let\u2019s say that you are in an administrative role and you want to automate some tasks, like collecting info from files, creating a PDF report and send it by email. Easily done by VBA. You need no external software. You can share your Excel file and the code goes with it. It can easily be used by someone with no VBA knowledge. The user can run the code by just pushing a button. But if you want to develop more complicated software eventually you will feel that VBA is not enough. And you will also be asking yourself if there is any future in VBA as Microsoft is not investing any more on it.[10] So, for simple Excel automation you can use VBA. If your intention is to understand better the programming field and develop more complicated software or even entering a different field like data analysitcs I would go for a free and open source language like Python. By the way, this is the path I took. I started with VBA but later transitioned to Python. Actually I still use both of them depending on the task. Footnotes[1] Visual Basic for Applications - Wikipedia[2] OLE Automation - Wikipedia[3] Windows API - Wikipedia[4] Why does data science use Python a lot rather than Java or Go?[5] Why Python is the most popular language used for Machine Learning[6] Web Development[7] 3 open source Python GUI frameworks[8] What is the easiest way to use Python in Excel as a full replacement for VBA?[9] TIOBE - The Software Quality Company[10] Will VBA be obsolete in a few years time from now?",
            "date": "Answered October 27, 2018",
            "views": "385",
            "upvotes": " View 61 Upvoters",
            "upvoters": [
                {
                    "user_id": "Rahan Uddin Ahmed",
                    "user_href": "/profile/Rahan-Uddin-Ahmed"
                },
                {
                    "user_id": "Antonela Abi\u010di\u0107",
                    "user_href": "/profile/Antonela-Abi\u010di\u0107"
                },
                {
                    "user_id": "Ashwitha Shetty",
                    "user_href": "/profile/Ashwitha-Shetty-63"
                },
                {
                    "user_id": "Robert Gavila",
                    "user_href": "/profile/Robert-Gavila-1"
                },
                {
                    "user_id": "Gourav Dey Chaklader",
                    "user_href": "/profile/Gourav-Dey-Chaklader"
                },
                {
                    "user_id": "Len Porzio",
                    "user_href": "/profile/Len-Porzio"
                },
                {
                    "user_id": "Hisako Sekiguchi",
                    "user_href": "/profile/Hisako-Sekiguchi"
                },
                {
                    "user_id": "Hasibur Hridoy",
                    "user_href": "/profile/Hasibur-Hridoy"
                },
                {
                    "user_id": "Tshego Phale",
                    "user_href": "/profile/Tshego-Phale"
                },
                {
                    "user_id": "Steven Wang",
                    "user_href": "/profile/Steven-Wang-24"
                }
            ]
        }
    ]
}