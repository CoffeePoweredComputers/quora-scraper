{
    "title": "How does software testing differ from software quality assurance? - Quora",
    "tags": [
        "Software Testing Studio",
        "Software Quality Assurance",
        "Quality Assurance",
        "Software Testing",
        "Software Engineering"
    ],
    "response": [
        {
            "author_info": {
                "name": "Jessica Cyrus",
                "href": "/profile/Jessica-Cyrus-2"
            },
            "answer_text": "Even though both sound and appear similar, there is a key difference. First software Quality assurance does not mean just executing the test methods and thus raising the defects. All it means is once the successful testing is done, there are steps formulated to find out different types of error and bugs that may come up and hence get them fixed at the first place. In order to incorporate Software Quality Assurance in to a project, it is certain the project will be set and defined by a high quality software model. However the perfect metrics are also required to define the quality level standard which the project team members will need to accommodate in their software development model to make it a success. In some projects both the phrases: Software testing and software quality assurance are considered as somewhat similar and there is absolutely no wrong in it. It is just that the key steps, their inception, tasks and activities in order to ensure a high level delivery are absolutely specified and detailed out from the very beginning. In some small scale software enterprise units, the testing is emphasised more. The software testing in such units provides relevant quality oriented information about the software product however quality assurance is not focused at. It is actually the quality assurance that utilises this information gathered from testing to improve the quality standards of the various stages in the software delivery. In certain projects an external quality assurance team may be engaged to audit and quality check the critical areas of the process which can be improved to provide a better customer experience. ",
            "date": "Answered March 30, 2019",
            "views": "198",
            "upvotes": " View 3 Upvoters",
            "upvoters": [
                {
                    "user_id": "Jimmy Patel",
                    "user_href": "/profile/Jimmy-Patel-177"
                },
                {
                    "user_id": "Ethan Millar",
                    "user_href": "/profile/Ethan-Millar"
                },
                {
                    "user_id": "Karishma Aegis",
                    "user_href": "/profile/Karishma-Aegis"
                }
            ]
        },
        {
            "author_info": {
                "name": "Nilan-jan Bhattacharya",
                "href": "/profile/Nilan-jan-Bhattacharya"
            },
            "answer_text": "I won't get into what is testing in detail or the fact that most people don't know how to test.  The simple way to think of the difference is that testing is done on a product.  QA is done before the product is built.  QA can include activities like unit tests, code review, anything that you think will improve the product (before it is built).  QA makes more sense in the manufacturing context.  For example, making sure your cutting tools are maintained will reduce faults in the final machined product.  People try to apply the same idea in software.  In fact, in agile and lean, you will find that idea very popular.  It's a good exercise to figure out why it doesn't hold for software.  In manufacturing parts are inspected after they are built.  This process is called quality control (QC).  People often equate software testing with manufacturing QC.  Again good exercise to figure out why the analogy is incorrect. This is a good question because With agile and lean, you will find people often say QA is better than QC.  In most cases, they imply that they want to focus on QA and not QC.  In fact, many will refuse to take part in testing or have debates on testing.  If you want to debate, you will need to know the difference.Also good because on Quora, what it means is that the topic itself is inaccurate/potentially confusing.I agree with Lanette that people use these terms loosely in real life.  On the other hand, many consultants, speakers will refer to these terms relegiously. It's also something managers, in their infinite ignorance, will latch on to.  So beware!! Personally, I like Michael Bolton's advice Get Out of the Quality Assurance Business \" Developsense Blog - this should apply to developers as well.  Of course, you should do whatever it takes to improve code quality.  Just don't spend time on BS metrics and don't pit one against the other (QA vs QC). ",
            "date": "Answered June 1, 2015",
            "views": "27",
            "upvotes": " View 6 Upvoters ",
            "upvoters": [
                {
                    "user_id": "Mohammed Saiful Islam",
                    "user_href": "/profile/Mohammed-Saiful-Islam-1"
                },
                {
                    "user_id": "Srilu Balla",
                    "user_href": "/profile/Srilu-Balla"
                },
                {
                    "user_id": "Riyad Rivandi",
                    "user_href": "/profile/Riyad-Rivandi"
                },
                {
                    "user_id": "Roushan Mishra",
                    "user_href": "/profile/Roushan-Mishra-3"
                },
                {
                    "user_id": "Albert Gareev",
                    "user_href": "/profile/Albert-Gareev"
                },
                {
                    "user_id": "Miguel Paraz",
                    "user_href": "/profile/Miguel-Paraz"
                }
            ]
        }
    ]
}