{
    "title": "How to learn software testing - Quora",
    "tags": [
        "Software Testing",
        "Learning",
        "Software and Applications"
    ],
    "response": [
        {
            "author_info": {
                "name": "Linkesh Kanna Velu",
                "href": "/profile/Linkesh-Kanna-Velu"
            },
            "answer_text": "You should know about Software Development Life Cycle and Software Testing Life Cycle. This is the very basic to understand what actually happens in a Software Engineering field. Know more about Agile Methodology. Search for Test Case Templates and understand the each and every columns in that template. If possible go through a Test Plan and know more about each and every area in detail. Study about a Defect/Bug Life Cycle. Define different types of Testing - Black, White, Grey, System, Functional, Integration blah, blah, blah etc Take some simple real world objects/applications and prepare test cases/scenarios for them. For Ex: Gmail, Facebook, a pen, Alarm Clock, SMS in your mobile etc. Try to cover lot of negative scenarios as much as possible. Negative thinking will increase the skillset of a Tester.  For all the job in this world, you will achieve more only if you are an Optimist. Software Testing is the only job where you will achieve more if you are a Pessimist. Follow the Blogs/Tweets by some awesome QA Engineers around the planet. See what they are trying to solve. Increase your technical skills also. Just because you want to get into software testing it doesn't mean like you don't need to learn much about technical things. Learn Programming. -Study SQL. This will help you when testing your applications from backend. Learn some automation tools if possible. Selenium is a most wanted and in future it may be a must having skill for a QA Engineer. Read a lot. Discuss ideas. Communicate and keep on trying. Good Luck :) Following are some of the great blogs from elite testers in this planet. Linkesh Kanna Velu's answer to What are the best Software Quality Assurance blogs?  Thanks, Linkesh ",
            "date": "Answered December 24, 2015",
            "views": "18",
            "upvotes": " View 8 Upvoters ",
            "upvoters": [
                {
                    "user_id": "Raam S",
                    "user_href": "/profile/Raam-S"
                },
                {
                    "user_id": "Naveed Shehzad Kaimkhani",
                    "user_href": "/profile/Naveed-Shehzad-Kaimkhani"
                },
                {
                    "user_id": "Kelvin Mbewe",
                    "user_href": "/profile/Kelvin-Mbewe-1"
                },
                {
                    "user_id": "Shanthi P",
                    "user_href": "/profile/Shanthi-P-1"
                },
                {
                    "user_id": "Prathiksha",
                    "user_href": "/profile/Prathiksha-3"
                },
                {
                    "user_id": "Siva Selvaraj",
                    "user_href": "/profile/Siva-Selvaraj"
                },
                {
                    "user_id": "Krishnaveni Ramasubramanian",
                    "user_href": "/profile/Krishnaveni-Ramasubramanian"
                },
                {
                    "user_id": "Yugant Zilpe",
                    "user_href": "/profile/Yugant-Zilpe"
                }
            ]
        },
        {
            "author_info": {
                "name": "Garima Gupta",
                "href": "/profile/Garima-Gupta-844"
            },
            "answer_text": "There are many aspects to software testing. It does not always involve using the product. It is not just about finding bugs. Testing can start around the requirements stage. Thinking about what the product should do, where risks could be, and how the user/customer navigates the product is all part of testing. Most testers work on teams that develop vendor software. Today, a lot of software is pushed through DevOps (development + operations) teams, where development, testing, and delivery are on a continuous loop using the Agile, Lean, or Scrum frameworks. Regardless of how you prepare for software testing, here are the skills you should have or plan to develop: Create and document automated and manual test plans and procedures, execute tests, analyze results, and report on test problems and anomalies (document bugs)Perform software testing in all phases of the design-develop-test-release-maintain software life cycleUnderstand various development methodologies, such as Agile and Scrum, and software testing platforms or environmentsPossess thorough knowledge of several testing toolsBe fluent in UNIX, Linux and/or Windows as well as scripting and command-line toolsBe a multitaskerBe an excellent communicator (written and verbal) with development, operations, product management and customersHave knowledge of various programming languages, such as Java, JavaScript, C# or C++, SQL, Python, PHP and Ruby on RailsSoftware testers should consider getting one or more certifications to prove their mettle and to get the attention of hiring managers. Most software tester certifications are vendor-neutral and recognize knowledge and skills applicable across all facets of software testing. 5 key software testing steps every engineer should perform ",
            "date": "Answered July 3, 2020",
            "views": "400",
            "upvotes": "0"
        }
    ]
}