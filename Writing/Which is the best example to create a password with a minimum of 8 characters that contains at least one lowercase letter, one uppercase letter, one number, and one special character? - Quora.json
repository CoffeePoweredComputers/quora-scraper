{
    "title": "Which is the best example to create a password with a minimum of 8 characters that contains at least one lowercase letter, one uppercase letter, one number, and one special character? - Quora",
    "tags": [
        "Special Characters",
        "Encryption",
        "Password Management",
        "Passwords",
        "Computer Security",
        "Writing",
        "Numbers (mathematics)"
    ],
    "response": [
        {
            "author_info": {
                "name": "Michael Lewis",
                "href": "/profile/Michael-Lewis-361"
            },
            "answer_text": "It depends on what you mean by best. Do you mean \u201cmost secure\u201d or \u201ceasiest to remember\u201d? These are often contradictory, so most people opt for a happy medium of something they can remember, but which would be reasonably hard to guess. Maybe it comes from inside knowledge that only you and your closest friends or family may know about so that hackers can\u2019t guess it from readily available information, such as where you\u2019ve lived, when you were born, or anything related to your name. For example, considering my name, the password, \u201cM!Ch@e1.\u201d might be easy to remember, but it wouldn\u2019t be very secure. If you want the \u201cmost secure\u201d, you\u2019d want something purely random, such as the following: uFEMl?,4\u00a0b0]0TWF(\u00a0zZ^^ul?9\u00a0U0)$El**\u00a0D@45i}SP\u00a09e@5U<.J\u00a0w3*$A2>A\u00a0}(4m!\\GT\u00a0X&s|}8hW\u00a0LsG4C5$d\u00a07lR0J$m\\\u00a0d.bS3~]P\u00a0(jNF13v#\u00a0W00M)Dls\u00a01Gu0z(K*\u00a0CB8bdzV@\u00a07b$5PJY\\\u00a0f5vX1o2L\u00a08#T8u]at\u00a06L]V!zg6\u00a0[@?EM0kz\u00a0m9@JxhrR\u00a0I generated this list using an Excel spreadsheet. I made sure to meet your requirements by: generating 8 randoms charactersone upper case letterone lower case letterone numberone special characterfour other random characters, from the complete list of 85 total charactersBut, I also went one step farther and randomized the location of each of these 8 random characters. You\u2019ll notice that the four required cases appear in different locations for each entry. The following might look like a big hairy spreadsheet, but it only took about 15 minutes to generate:  In column A is the list of characters. Rather than typing them all, I used the following little trick formula to create them en masse: Upper: =CHAR(CODE(\"A\")+ROW(A2)-ROW(A$2))Lower: =CHAR(CODE(\"a\")+ROW(A28)-ROW(A$28))Numbers: =CHAR(CODE(\"0\")+ROW(A54)-(ROW(A$54)))Special: Ok, so I typed these from the keyboard, because I never remember which one is the first in the set of ASCII characters that is generated by the CHAR() formula.Column B randomly generates these as follows: Upper: =INDIRECT(ADDRESS(INT(RAND()*26+2),1))Lower: =INDIRECT(ADDRESS(INT(RAND()*26+2+26),1))Numbers: =INDIRECT(ADDRESS(INT(RAND()*10+2+26+26),1))Special: =INDIRECT(ADDRESS(INT(RAND()*COUNTA(A64:A86)+2+26+26+10),1))Any: =INDIRECT(ADDRESS(INT(RAND()*85+2),1))Columns L-S simply use RAND(), and then these get ordered from U-AB with the RANK() formula. The ordering happens in AD-AK with the following: =INDIRECT(ADDRESS(ROW(),COLUMN($B2)+U2)) Finally, the password gets assembled in COLUMN AM with: =AD2&AE2&AF2&AG2&AH2&AI2&AJ2&AK2 ",
            "date": "Answered January 11, 2020",
            "views": "35",
            "upvotes": " View 4 Upvoters ",
            "upvoters": [
                {
                    "user_id": "Joseph Mwema",
                    "user_href": "/profile/Joseph-Mwema-3"
                },
                {
                    "user_id": "Tiffany Giannone",
                    "user_href": "/profile/Tiffany-Giannone"
                },
                {
                    "user_id": "Vamsi Krishna Reddy",
                    "user_href": "/profile/Vamsi-Krishna-Reddy-89"
                },
                {
                    "user_id": "Jonathan Busby",
                    "user_href": "/profile/Jonathan-Busby"
                }
            ]
        },
        {
            "author_info": {
                "name": "Jonathan Busby",
                "href": "/profile/Jonathan-Busby"
            },
            "answer_text": "Personally, I\u2019d use the Linux / GNU apg command[1] : apg -a 1 -m 8 -x 16 -M NCLS\u00a0Running the above on my system produces : $ apg -a 1 -m 8 -x 16 -M NCLS\u00a05*Z=~\\XfU0M<\u00a0]UR/1(y<ZJ/-AR}\u00a0_D[6(~tFS@!\u00a02]r,QDLt\u00a08!4ER.&[z3,h\u00a0UdVerAQ{H\"5H\u00a0If you want \u201cpronounceable\u201d passwords then use : apg -a 0 -m 8 -x 16 -M NCLS\u00a0On my system, the above produces : $ apg -a 0 -m 8 -x 16 -M NCLS\u00a0yuch9OgnonkIv`\u00a0Oj%frykphyan2\u00a0JirrAsFel[orj2\u00a0Nu9sotDobShid;\u00a09DrajkokIk^\u00a0Trycs6Oftyeg:\u00a0It also might be a good idea to seed apg\u2019s random number generator with /dev/urandom eg. : apg -c /dev/urandom -a 0 -m 8 -x 16 -M NCLS\u00a0Hope this helps\u2026 Footnotes[1] apg(1): generates several random passwords",
            "date": "Answered January 9, 2020",
            "views": "503",
            "upvotes": "0"
        }
    ]
}