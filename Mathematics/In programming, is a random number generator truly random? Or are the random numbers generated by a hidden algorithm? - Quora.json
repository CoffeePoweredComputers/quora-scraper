{
    "title": "In programming, is a random number generator truly random? Or are the random numbers generated by a hidden algorithm? - Quora",
    "tags": [
        "Information Theory",
        "Random Number Generators (RNG)",
        "Cryptography",
        "Probability (statistics)"
    ],
    "response": [
        {
            "author_info": {
                "name": "Eric Pepke",
                "href": "/profile/Eric-Pepke"
            },
            "answer_text": "I worked for a time with George Marsaglia, who is one of the worlds' leading experts in random numbers. There are several possible definitions of \"random.\"  What I think people mean by \"true random numbers\" is one definition, a la Knuth.  Semi-formally, a sequence is random in this sense if there exists no possible deterministic algorithm to predict the next number in the sequence that is not as least as large as the entire sequence.  By this definition, no finite algorithm can produce truly random numbers. It is only possible to get truly random numbers with a hardware device to provide a source of entropy.  Thermal noise (usually by reversed PN junctions) and beta decay generators are popular methods.  They tend to be slow, however.  Thermal noise devices tend to operate in audio sampling ranges, and you probably don't want to be anywhere near a radioactive source that generates a lot of bits. Cheaper but poorer ways of getting entropy include looking at files updated by other processes, such as the system log.  You can also use interaction times to shake it up, but these also are slow.  So typically you use a pseudo-random algorithm and just reseed it every once in a while.  This is often good enough. Note that \"true\" randomness is not always desirable.  Deterministic, pseudo-random generators can be desirable for debugging, because you can restart the program and get the same sequence.  It's also interesting for games.  If you have, say, a sudoko based on a 32-bit pseudo-random number generator, you get up to a bit more than 4 billion numbered games that people can challenge each other on.  \"Hey, folks!  Have you beaten number 1,236,984 yet?\"  (There are probably some duplicates.) Another definition of random has to do with the distribution.  Usually, you want the results to be uniform over the range (0, 1].  You can convert this to any distribution you like.  Pseudo-random generators are pretty good at this, though some bits are more random than others, and for simple ones, there are patterns that are sensitive to scale.  That is, you might see a pattern every fifth number, or every 13th, or something. You can get pretty good results by combining the results of multiple generators, say a congruential and a shift-register algorithm.  True random number generators, such as thermal noise, tend to be poor at this.  Also, they tend to work as antennas, so when the air conditioning goes on you might get a different result.  So, ideally, they should be combined with the results of a deterministic pseudo-random generator to get a good distribution. ",
            "date": "Answered October 12, 2012",
            "views": "44",
            "upvotes": " View 30 Upvoters",
            "upvoters": [
                {
                    "user_id": "David Cunningham",
                    "user_href": "/profile/David-Cunningham-69"
                },
                {
                    "user_id": "Tony Warnock",
                    "user_href": "/profile/Tony-Warnock"
                },
                {
                    "user_id": "Manav Bajaj",
                    "user_href": "/profile/Manav-Bajaj-21"
                },
                {
                    "user_id": "Roy Latham",
                    "user_href": "/profile/Roy-Latham-1"
                },
                {
                    "user_id": "Alan Horenstein",
                    "user_href": "/profile/Alan-Horenstein"
                },
                {
                    "user_id": "David Gray",
                    "user_href": "/profile/David-Gray-78"
                },
                {
                    "user_id": "Comet",
                    "user_href": "/profile/Comet-7"
                },
                {
                    "user_id": "Jakub Koch\u00e1\u0148",
                    "user_href": "/profile/Jakub-Koch\u00e1\u0148"
                },
                {
                    "user_id": "Daniele Spyryto Zecchin",
                    "user_href": "/profile/Daniele-Spyryto-Zecchin"
                },
                {
                    "user_id": "Rams\u00e9s Mendoza",
                    "user_href": "/profile/Rams\u00e9s-Mendoza-1"
                },
                {
                    "user_id": "Chris Phillips",
                    "user_href": "/profile/Chris-Phillips-32"
                },
                {
                    "user_id": "Doug Palmer",
                    "user_href": "/profile/Doug-Palmer-2"
                },
                {
                    "user_id": "Shyam Bhalodia",
                    "user_href": "/profile/Shyam-Bhalodia"
                },
                {
                    "user_id": "Bob Cowan",
                    "user_href": "/profile/Bob-Cowan-3"
                },
                {
                    "user_id": "Robert Lugg",
                    "user_href": "/profile/Robert-Lugg"
                },
                {
                    "user_id": "Tom Ray",
                    "user_href": "/profile/Tom-Ray-4"
                },
                {
                    "user_id": "Elijah Brian",
                    "user_href": "/profile/Elijah-Brian-1"
                },
                {
                    "user_id": "Bob Byers",
                    "user_href": "/profile/Bob-Byers-3"
                },
                {
                    "user_id": "Aakanksha Choudhary",
                    "user_href": "/profile/Aakanksha-Choudhary-2"
                },
                {
                    "user_id": "S D Roemerman",
                    "user_href": "/profile/S-D-Roemerman"
                },
                {
                    "user_id": "Andrew Wrigley",
                    "user_href": "/profile/Andrew-Wrigley-8"
                },
                {
                    "user_id": "Abhay",
                    "user_href": "/profile/Abhay-154"
                },
                {
                    "user_id": "Matt Mahoney",
                    "user_href": "/profile/Matt-Mahoney-2"
                },
                {
                    "user_id": "Adrian Pichler",
                    "user_href": "/profile/Adrian-Pichler-1"
                },
                {
                    "user_id": "Nitish Upreti",
                    "user_href": "/profile/Nitish-Upreti"
                },
                {
                    "user_id": "Mike Laursen",
                    "user_href": "/profile/Mike-Laursen"
                },
                {
                    "user_id": "Avram Cheaney",
                    "user_href": "/profile/Avram-Cheaney"
                },
                {
                    "user_id": "Rob Johnson",
                    "user_href": "/profile/Rob-Johnson-15"
                },
                {
                    "user_id": "Santosh Pandey",
                    "user_href": "/profile/Santosh-Pandey-2"
                },
                {
                    "user_id": "Miguel Paraz",
                    "user_href": "/profile/Miguel-Paraz"
                }
            ]
        },
        {
            "author_info": {
                "name": "Noam Samuel",
                "href": "/profile/Noam-Samuel"
            },
            "answer_text": "Short answer: No Long answer: Randomness is a very complicated thing. No number generated by algorithm is truly random. Many pseudo-random number generators use external input to enhance their randomness. This, however, can be expensive depending on the amount of randomness necessary. Thus, the amount of randomness necessary often depends on the reason randomness is necessary. The random input into a pseudo random number generator is also known as a \"seed\", and usually a relatively small seed is needed to generated a large, unpredictable bit stream. In general, there are two classes of (pseudo-)random number generation.  The first, casual PRNGs, as used in games and monte carlo simulations, simply need to exhibit properties consistent with randomness. These are often seeded with the system time to create unpredictablility. They do not have any security requirement. An example of such an algorithm would be [math]R_{n+1}=(A\\cdot R_{n} + B) \\, mod\\, P[/math], where [math]R_n[/math] is the nth random number, A and B are numbers, and P is a large prime. [math]R_0[/math] is set to the seed for the stream. This exhibits decent properties for very casual applications. Computer simulations usually go a bit farther and apply a Linear feedback shift register. The second type of randomness is for cryptographic and security applications. In these case, all the properties of random number generators, but especially unpredictability, become crucial. For example, if you managed to somehow find out half of a secret key generated using a pseudo-random number generator, you should have little to no information about the other half. These generators will use hardware inputs like keystroke timing and disk latency to seed the stream. The algorithm itself will something more heavyweight. An example of a very cryptographically secure random number generation algorithm is the Blum Blum Shub algorithm, which IIRC is too costly and therefore not used in practice. ",
            "date": "Answered January 26, 2013",
            "views": "17",
            "upvotes": " View 14 Upvoters",
            "upvoters": [
                {
                    "user_id": "David Cunningham",
                    "user_href": "/profile/David-Cunningham-69"
                },
                {
                    "user_id": "Bismark Ansah",
                    "user_href": "/profile/Bismark-Ansah-11"
                },
                {
                    "user_id": "Mina Farag",
                    "user_href": "/profile/Mina-Farag-6"
                },
                {
                    "user_id": "Ali Moharam",
                    "user_href": "/profile/Ali-Moharam"
                },
                {
                    "user_id": "Julius Blue",
                    "user_href": "/profile/Julius-Blue-2"
                },
                {
                    "user_id": "Andrew Wrigley",
                    "user_href": "/profile/Andrew-Wrigley-8"
                },
                {
                    "user_id": "Adrian Pichler",
                    "user_href": "/profile/Adrian-Pichler-1"
                },
                {
                    "user_id": "Ahmet G\u00fcne\u015f",
                    "user_href": "/profile/Ahmet-G\u00fcne\u015f"
                },
                {
                    "user_id": "Angus Burton",
                    "user_href": "/profile/Angus-Burton"
                },
                {
                    "user_id": "Martin Cochran",
                    "user_href": "/profile/Martin-Cochran"
                },
                {
                    "user_id": "Atoosa Madadkar",
                    "user_href": "/profile/Atoosa-Madadkar"
                },
                {
                    "user_id": "Heiddy Wong",
                    "user_href": "/profile/Heiddy-Wong"
                },
                {
                    "user_id": "Murtaza Aliakbar",
                    "user_href": "/profile/Murtaza-Aliakbar"
                },
                {
                    "user_id": "Richard Shin",
                    "user_href": "/profile/Richard-Shin"
                }
            ]
        },
        {
            "author_info": {
                "name": "Ian Wong",
                "href": "/profile/Ian-Wong"
            },
            "answer_text": "In popular programming languages, the default random number generators are probably, as Mark Nelson mentioned, pseudo-random number generators. But it seems to me that the questioner is curious about two things over-and-above the answer given:1/ What are examples of the \"hidden\" algorithms? 2/ How do you measure randomness? To answer these questions, I will borrow material from Art Owen's upcoming book on Monte Carlo Methods. 1/ What are examples of \"hidden\" algorithms?It may be helpful to first understand why we use heuristics as opposed to \"true\" random numbers.a) True random numbers cannot be compressed.b) True random numbers do not lend itself to reproducible results.c) Sometimes, \"true random numbers\" generated by physical processes fail test of randomness. With this in mind, I'll mention three popular ways of generating random numbers.  These are all based on simple recursions using modular arithmetic.  By the way, this blew my mind when I first saw this.a) Linear congruential generator:[math]x_i = a_0 + a_1 x_{i-1} \\, \\mathrm{mod} \\, M [/math]with carefully chosen [math]a_0, a_1[/math] and M.b) Multiplicative congruential generator: (This is actually faster than LCG and does not perform worse in practice)Take [math]a_0 = 0[/math] in abovec) Multiple recursive generator:[math]x_i = a_1 x_{i-1} + a_2 x_{i-2} + \\cdots + a_k x_{i-k} \\, \\mathrm{mod}\\, M [/math] Other popular methods include multiple recursive generator, lagged Fibonacci generators, inversive congruential generator, generalized feedback shift registers, and twisted GFSR. 2/ How do you measure randomness?a) Uniformity measuresTo answer this question, first think of what a \"good\" random number would look like. Suppose [math]X_i \\sim U(0,1)[/math] for [math]i = 1, 2, \\ldots[/math]. That is, each [math]X_i[/math] is distributed as a uniform random number from 0 to 1.  Then a \"good\" sequence of  [math]X_i[/math] should have a roughly even histogram. So you'd imagine a good measure of randomness would be uniformity of histogram. But, of course, this is flawed because I could generate a very flat histogram by cycling through [math]X_i = X_{i-1} + \\varepsilon \\, \\mathrm{mod} 1[/math], where [math]\\varepsilon[/math] is some small quantity.  Hence, people develop these notions of looking at uniformity of k-tuples [math](X_i, \\ldots, X_{i+k-1})[/math] for different k and subintervals of the form [math][a/2^l, (a+1)/2^l)[/math] for [math] 0 \\leq a < 2^l[/math]. This give rise to the expression \"k-distributed to l-bit accuracy\" or \"(k, l)-equidistributed\" which I refer you to Googling / follow-up question if you are interested. b) Statistical testsNote that there are also statistical tests for randomness. This is particularly useful when we draw a small subset of the random numbers from a random number generator, and are afraid of small sample properties that may be neglected by such a macro-view taken by the uniformity measures mentioned above. There are many different types of such tests.  Some of them are based on comparing with known results from random quantities, such as Marsaglia's birthday test (remember the birthday problem?).  A permutation test is given in Knuth's TAOCP Volume 2 (1998). Other tests include Kolmogorov-Smirnov and Anderson-Darling. As mentioned, L'Ecuyer is a renowned expert on the topic. Another reference may be Gentle, Random number generation and Monte Carlo methods (2003). ",
            "date": "Answered October 19, 2010",
            "views": "51",
            "upvotes": " View 60 Upvoters",
            "upvoters": [
                {
                    "user_id": "James McDonald",
                    "user_href": "/profile/James-McDonald-87"
                },
                {
                    "user_id": "David Gray",
                    "user_href": "/profile/David-Gray-78"
                },
                {
                    "user_id": "Mina Farag",
                    "user_href": "/profile/Mina-Farag-6"
                },
                {
                    "user_id": "Ben Harsant",
                    "user_href": "/profile/Ben-Harsant"
                },
                {
                    "user_id": "Peter Carr",
                    "user_href": "/profile/Peter-Carr-23"
                },
                {
                    "user_id": "Stefan Mulligan",
                    "user_href": "/profile/Stefan-Mulligan"
                },
                {
                    "user_id": "Aryendra Singh",
                    "user_href": "/profile/Aryendra-Singh"
                },
                {
                    "user_id": "Brujua Bro",
                    "user_href": "/profile/Brujua-Bro"
                },
                {
                    "user_id": "Azarudeen Ajees",
                    "user_href": "/profile/Azarudeen-Ajees"
                },
                {
                    "user_id": "Fred Smith",
                    "user_href": "/profile/Fred-Smith-136"
                },
                {
                    "user_id": "Tao Ruangyam",
                    "user_href": "/profile/Tao-Ruangyam"
                },
                {
                    "user_id": "Manish Acharya",
                    "user_href": "/profile/Manish-Acharya-3"
                },
                {
                    "user_id": "Gautam Kumar",
                    "user_href": "/profile/Gautam-Kumar-2"
                },
                {
                    "user_id": "Ujjwal Karn",
                    "user_href": "/profile/Ujjwal-Karn"
                },
                {
                    "user_id": "Glenn Yu",
                    "user_href": "/profile/Glenn-Yu-2"
                },
                {
                    "user_id": "Jp Emery",
                    "user_href": "/profile/Jp-Emery"
                },
                {
                    "user_id": "Bharadwaj Srigiriraju",
                    "user_href": "/profile/Bharadwaj-Srigiriraju"
                },
                {
                    "user_id": "Brendan Teich",
                    "user_href": "/profile/Brendan-Teich"
                },
                {
                    "user_id": "Vijayakumar Ramdoss",
                    "user_href": "/profile/Vijayakumar-Ramdoss"
                },
                {
                    "user_id": "Yaaseen Jooma",
                    "user_href": "/profile/Yaaseen-Jooma"
                },
                {
                    "user_id": "Narek Tovmasyan",
                    "user_href": "/profile/Narek-Tovmasyan"
                },
                {
                    "user_id": "Sameer Gupta",
                    "user_href": "/profile/Sameer-Gupta"
                },
                {
                    "user_id": "Vinay Bharadwaj",
                    "user_href": "/profile/Vinay-Bharadwaj"
                },
                {
                    "user_id": "Ahmet G\u00fcne\u015f",
                    "user_href": "/profile/Ahmet-G\u00fcne\u015f"
                },
                {
                    "user_id": "Heda Wang",
                    "user_href": "/profile/Heda-Wang"
                },
                {
                    "user_id": "Ivo Senese",
                    "user_href": "/profile/Ivo-Senese"
                },
                {
                    "user_id": "Rajarshi Bhattacharjee",
                    "user_href": "/profile/Rajarshi-Bhattacharjee"
                },
                {
                    "user_id": "Akash Kava",
                    "user_href": "/profile/Akash-Kava"
                },
                {
                    "user_id": "Rahul Ram",
                    "user_href": "/profile/Rahul-Ram-24"
                },
                {
                    "user_id": "Vinay Viswanathan",
                    "user_href": "/profile/Vinay-Viswanathan-1"
                },
                {
                    "user_id": "Rohit Kumar Gupta",
                    "user_href": "/profile/Rohit-Kumar-Gupta-2"
                },
                {
                    "user_id": "Riyad Parvez",
                    "user_href": "/profile/Riyad-Parvez"
                },
                {
                    "user_id": "Rushabh Kamdar",
                    "user_href": "/profile/Rushabh-Kamdar-1"
                },
                {
                    "user_id": "Vivek Ravishanker",
                    "user_href": "/profile/Vivek-Ravishanker"
                },
                {
                    "user_id": "Joel Fernandes",
                    "user_href": "/profile/Joel-Fernandes-1"
                },
                {
                    "user_id": "Russell Cohen",
                    "user_href": "/profile/Russell-Cohen-1"
                },
                {
                    "user_id": "Abhishek Kar",
                    "user_href": "/profile/Abhishek-Kar-1"
                },
                {
                    "user_id": "Emma Saboureau",
                    "user_href": "/profile/Emma-Saboureau"
                },
                {
                    "user_id": "Navin Kabra",
                    "user_href": "/profile/Navin-Kabra"
                },
                {
                    "user_id": "Arjun Krishnan",
                    "user_href": "/profile/Arjun-Krishnan"
                },
                {
                    "user_id": "Kunal Patel",
                    "user_href": "/profile/Kunal-Patel-7"
                },
                {
                    "user_id": "Henry Chen",
                    "user_href": "/profile/Henry-Chen-26"
                },
                {
                    "user_id": "Andy Manoske",
                    "user_href": "/profile/Andy-Manoske"
                },
                {
                    "user_id": "Spencer Chan",
                    "user_href": "/profile/Spencer-Chan"
                },
                {
                    "user_id": "Adel Shehadeh",
                    "user_href": "/profile/Adel-Shehadeh"
                },
                {
                    "user_id": "Peter Swaine",
                    "user_href": "/profile/Peter-Swaine"
                },
                {
                    "user_id": "Shrey Banga",
                    "user_href": "/profile/Shrey-Banga"
                },
                {
                    "user_id": "Issac Trotts",
                    "user_href": "/profile/Issac-Trotts"
                },
                {
                    "user_id": "Murtaza Aliakbar",
                    "user_href": "/profile/Murtaza-Aliakbar"
                },
                {
                    "user_id": "Sainath Mallidi",
                    "user_href": "/profile/Sainath-Mallidi"
                },
                {
                    "user_id": "Elena Popa",
                    "user_href": "/profile/Elena-Popa"
                },
                {
                    "user_id": "Wei Hu",
                    "user_href": "/profile/Wei-Hu"
                },
                {
                    "user_id": "Ani Ravi",
                    "user_href": "/profile/Ani-Ravi"
                },
                {
                    "user_id": "Andrew Brown",
                    "user_href": "/profile/Andrew-Brown-2"
                },
                {
                    "user_id": "Joseph Quattrocchi",
                    "user_href": "/profile/Joseph-Quattrocchi"
                },
                {
                    "user_id": "Yuriko Tamura",
                    "user_href": "/profile/Yuriko-Tamura"
                },
                {
                    "user_id": "Nelson Ray",
                    "user_href": "/profile/Nelson-Ray"
                },
                {
                    "user_id": "Dimitry Lukashov",
                    "user_href": "/profile/Dimitry-Lukashov"
                },
                {
                    "user_id": "Allen Cheung",
                    "user_href": "/profile/Allen-Cheung"
                },
                {
                    "user_id": "Tracy Chou",
                    "user_href": "/profile/Tracy-Chou"
                }
            ]
        },
        {
            "author_info": {
                "name": "Jeff Kesselman",
                "href": "/profile/Jeff-Kesselman"
            },
            "answer_text": "\"Truly random\" needs better defining.  Good random number generators are sufficiently statistically random, but yes they are still generated by an algorithm, just not an easily predictable one.  These algorithms generally start with a \"seed\" number.  Given the same seed they will produce the same sequence.  Seeds themselves are randomized in cases where you don't want this repeatability by a number that is as random as possible.  Most commonly this seed is based on the number of milliseconds the computer has been running for.  This is very hard to repeat exactly.  Even two identical startups of a machine are likely to vary from physical factors some number of  milliseconds.  (One example of such a physical factor would be the exact position of the harddrive heads at start up.) ",
            "date": "Answered August 1, 2013",
            "views": "1",
            "upvotes": " View 12 Upvoters",
            "upvoters": [
                {
                    "user_id": "Misterman James",
                    "user_href": "/profile/Misterman-James"
                },
                {
                    "user_id": "Anish Sheela",
                    "user_href": "/profile/Anish-Sheela"
                },
                {
                    "user_id": "Athira Nair",
                    "user_href": "/profile/Athira-Nair-1"
                },
                {
                    "user_id": "Shailesh Jain",
                    "user_href": "/profile/Shailesh-Jain-6"
                },
                {
                    "user_id": "Raju Roopani",
                    "user_href": "/profile/Raju-Roopani"
                },
                {
                    "user_id": "Athavan Ravichandran",
                    "user_href": "/profile/Athavan-Ravichandran"
                },
                {
                    "user_id": "Rahul Sharma",
                    "user_href": "/profile/Rahul-Sharma-40"
                },
                {
                    "user_id": "Ajay Kumar",
                    "user_href": "/profile/Ajay-Kumar-3"
                },
                {
                    "user_id": "Pratik Mundada",
                    "user_href": "/profile/Pratik-Mundada-4"
                },
                {
                    "user_id": "Kevin H. Lin",
                    "user_href": "/profile/Kevin-H-Lin"
                },
                {
                    "user_id": "Sudhendu Pandey",
                    "user_href": "/profile/Sudhendu-Pandey"
                },
                {
                    "user_id": "Ashay Panshikar",
                    "user_href": "/profile/Ashay-Panshikar"
                }
            ]
        },
        {
            "author_info": {
                "name": "James McDonald",
                "href": "/profile/James-McDonald-87"
            },
            "answer_text": "Some are. Some are not. To get a truly random number you need special circuitry that can capture the noise from things like cosmic rays, thermal energy, vibrations, etc. Many chips have that, but it takes some time to get a new random value (the noise has to accumulate) so they might cause a bottleneck in an application needing many random values. In that sense, true randomness is a resource, just like cpu cycles, memory, or bandwidth. Another strategy is to use a pseudo-random number generator (PRNG) that iterates somewhat erratically through all possible values of some set of numbers before returning to the initial value. For example, one such strategy is to multiply a prior value by a prime and then add another prime, all modulo some base, to get the next value. Done right you can easily iterate through something like 2^128 values before repeating. (I.e., never in the age of the universe.) A sequence generated that way will often be \u201cgood enough\u201d as a source of random numbers, but will have some notable differences from true randomness. In particular, every time you restart a PRNG with the same seed you will get exactly the same sequence. That\u2019s useful for testing and debugging, but not so good if some adversary can figure out your initial seed and use that to break your encryption or whatever. A true random number generator will produce a different sequence every time. That makes it harder to test and debug, but also harder for an enemy to replicate. In practice, a reasonable strategy is to use a PRNG initialized with a a truly random seed obtained by a special circuit, or perhaps with a reasonably random value derived from timing data, a process number, etc. No adversary can guess that initial seed, and if you save it you can replay processes exactly for testing and debugging. ",
            "date": "Answered July 31, 2020",
            "views": "158",
            "upvotes": " View 3 Upvoters",
            "upvoters": [
                {
                    "user_id": "Michael Wattam",
                    "user_href": "/profile/Michael-Wattam"
                },
                {
                    "user_id": "Jim Rahn",
                    "user_href": "/profile/Jim-Rahn"
                },
                {
                    "user_id": "Nathan Jacob",
                    "user_href": "/profile/Nathan-Jacob-3"
                }
            ]
        },
        {
            "author_info": {
                "name": "Jay Adkisson",
                "href": "/profile/Jay-Adkisson"
            },
            "answer_text": "The first thing to note is that in order for a sequence to be truly \"random\", it must be infinite.  In computer science, we can only imagine infinite sequences as the output of some algorithm - and then by definition it won't be random. From a more mathematical perspective, there are three \"popular\" definitions of randomness that turn out to be equivalent (http://en.wikipedia.org/wiki/Algorithmically_random_sequence).  I'm actually only familiar with the first two listed there :) One is Kolmogorov randomness (http://en.wikipedia.org/wiki/Kolmogorov_randomness), which in short measures the \"complexity\" of a finite bit string by asking the question \"how long is the shortest program that would output this string?\".  For an infinite sequence to be Kolmogorov-random, all its finite initial segments must be above a certain complexity relative to their length.  The other is Martin-L\u00f6f randomness.  This isn't quite as intuitive, but you can think of it as \"my infinite sequence has to satisfy all probabilistic formulas\".  For example, we'd expect that in a random sequence, 0 and 1 occur equally often; that is, for a sequence [math]a_0, a_1, \\ldots[/math], you'd expect that [math]\\lim_{n\\to\\infty} \\frac{|\\lbrace m < n : a_m = 0\\rbrace|}{n} = \\frac{1}{2}[/math] It turns out that there are infinitely many such formulas, called \"effective sequential tests\", or \"Martin-L\u00f6f tests\", and that they have a pretty neat definition, which is a little in-depth, but is given a great treatment in http://math.uni-heidelberg.de/logic/postscripts/tr47.ps. Either way, it turns out that any computably enumerable sequence (http://en.wikipedia.org/wiki/Recursively_enumerable_set) is not random.  One consequence of this is that since the digits of [math]e[/math] and [math]\\pi[/math] are computably enumerable, they are in fact not random. If you're into math, randomness is one of those fields that still has lots of open questions which are really interesting to think about.  I'd get a good grounding in computability theory, first, but after that it's pretty awesome. Peace,--Jay ... ",
            "date": "Answered November 2, 2010",
            "views": "16",
            "upvotes": " View 23 Upvoters",
            "upvoters": [
                {
                    "user_id": "Bernard Leak",
                    "user_href": "/profile/Bernard-Leak"
                },
                {
                    "user_id": "Andrew Wrigley",
                    "user_href": "/profile/Andrew-Wrigley-8"
                },
                {
                    "user_id": "Adrian Pichler",
                    "user_href": "/profile/Adrian-Pichler-1"
                },
                {
                    "user_id": "Ralph Henderson",
                    "user_href": "/profile/Ralph-Henderson-3"
                },
                {
                    "user_id": "Harshit Aneja",
                    "user_href": "/profile/Harshit-Aneja"
                },
                {
                    "user_id": "Christopher Hockenbrocht",
                    "user_href": "/profile/Christopher-Hockenbrocht"
                },
                {
                    "user_id": "Sameer Gupta",
                    "user_href": "/profile/Sameer-Gupta"
                },
                {
                    "user_id": "Vikas Sakaray",
                    "user_href": "/profile/Vikas-Sakaray"
                },
                {
                    "user_id": "Ahmet G\u00fcne\u015f",
                    "user_href": "/profile/Ahmet-G\u00fcne\u015f"
                },
                {
                    "user_id": "Riyad Parvez",
                    "user_href": "/profile/Riyad-Parvez"
                },
                {
                    "user_id": "Vijayaraghavan Apparsundaram",
                    "user_href": "/profile/Vijayaraghavan-Apparsundaram"
                },
                {
                    "user_id": "Vivek Ravishanker",
                    "user_href": "/profile/Vivek-Ravishanker"
                },
                {
                    "user_id": "Aditya Kulkarni",
                    "user_href": "/profile/Aditya-Kulkarni-2"
                },
                {
                    "user_id": "Navin Kabra",
                    "user_href": "/profile/Navin-Kabra"
                },
                {
                    "user_id": "Joe Geronimo Martinez",
                    "user_href": "/profile/Joe-Geronimo-Martinez"
                },
                {
                    "user_id": "Shrey Banga",
                    "user_href": "/profile/Shrey-Banga"
                },
                {
                    "user_id": "Marsh Ray",
                    "user_href": "/profile/Marsh-Ray"
                },
                {
                    "user_id": "Gautam Ganguli",
                    "user_href": "/profile/Gautam-Ganguli"
                },
                {
                    "user_id": "Neal Harris",
                    "user_href": "/profile/Neal-Harris"
                },
                {
                    "user_id": "Shrivats Iyer",
                    "user_href": "/profile/Shrivats-Iyer"
                },
                {
                    "user_id": "Charles Chen",
                    "user_href": "/profile/Charles-Chen-1"
                },
                {
                    "user_id": "Sam Tetruashvili",
                    "user_href": "/profile/Sam-Tetruashvili"
                },
                {
                    "user_id": "Ari Shahdadi",
                    "user_href": "/profile/Ari-Shahdadi"
                }
            ]
        },
        {
            "author_info": {
                "name": "Mark Nelson",
                "href": "/profile/Mark-Nelson-2"
            },
            "answer_text": "In general, software creates random numbers with a PRNG. PRNG stands for Pseudo-Random Number Generator, which gives away the secret: no, the numbers are not truly random. In some cases the random number generators are seeded with values that might be considered random, such as the low order bits of a system clock, or time between mouse movements. In practice these have been shown to be not-too-random. More importantly, even if one starts with a random seed, the random number generator then creates a sequence of numbers that are well-defined. As long as you know the algorithm to generate subsequent numbers, you can predict exactly which number will be next in the sequence. So no, they are not random. To get real random numbers you need to use some sort of physical process, as described here: http://www.sciencedaily.com/releases/2010/09/100920074017.htm For good thoughts about randomness, RFC 1750 is not a bad place to start.http://www.ietf.org/rfc/rfc1750.txt ",
            "date": "Answered September 30, 2010",
            "views": "934",
            "upvotes": " View 14 Upvoters",
            "upvoters": [
                {
                    "user_id": "Mina Farag",
                    "user_href": "/profile/Mina-Farag-6"
                },
                {
                    "user_id": "Mark Sinsheimer",
                    "user_href": "/profile/Mark-Sinsheimer-2"
                },
                {
                    "user_id": "Neha Sharma",
                    "user_href": "/profile/Neha-Sharma-20"
                },
                {
                    "user_id": "Riyad Parvez",
                    "user_href": "/profile/Riyad-Parvez"
                },
                {
                    "user_id": "Nikolaus Piccolotto",
                    "user_href": "/profile/Nikolaus-Piccolotto"
                },
                {
                    "user_id": "David Urquhart",
                    "user_href": "/profile/David-Urquhart"
                },
                {
                    "user_id": "Vivek Nagarajan",
                    "user_href": "/profile/Vivek-Nagarajan-1"
                },
                {
                    "user_id": "Andy Manoske",
                    "user_href": "/profile/Andy-Manoske"
                },
                {
                    "user_id": "Rupert Baines",
                    "user_href": "/profile/Rupert-Baines"
                },
                {
                    "user_id": "Hamza Alsbaihi",
                    "user_href": "/profile/Hamza-Alsbaihi"
                },
                {
                    "user_id": "Will Pringle",
                    "user_href": "/profile/Will-Pringle"
                },
                {
                    "user_id": "Mark Wang",
                    "user_href": "/profile/Mark-Wang"
                },
                {
                    "user_id": "Kendra L. Kramlich",
                    "user_href": "/profile/Kendra-L-Kramlich"
                },
                {
                    "user_id": "Shashikant Kore",
                    "user_href": "/profile/Shashikant-Kore"
                }
            ]
        },
        {
            "author_info": {
                "name": "Ravi S",
                "href": "/profile/Ravi-S-27"
            },
            "answer_text": "It depends on the degree of randomness you want. My knowledge of math is limited here, but I know that there are degrees of randomness that you can have when generating random numbers.  You can never have true randomness. You can create a pseudorandom sequence using purely software, but existing pseudorandom number generators can create a deterministic sequence of numbers for you (based off an initial state or a seed) that can loosely fit a uniform distribution. I say deterministic because you can get the exact same sequence of numbers each time (if you utilize the same initial state). You can get 'better' randomness using hardware random number generators. These devices take physically occurring phenomena and take as input the noise they generate. The samples you get from these fit the uniform distribution better. TLDR: There is no true randomness, but there are degrees of randomness, and what tool you use to generate random numbers determines how well your sequence fits the uniform distribution (or how random your numbers are). ",
            "date": "Answered September 18, 2012",
            "views": "521",
            "upvotes": " View 2 Upvoters",
            "upvoters": [
                {
                    "user_id": "Charan Kb",
                    "user_href": "/profile/Charan-Kb-3"
                },
                {
                    "user_id": "Andrew Wrigley",
                    "user_href": "/profile/Andrew-Wrigley-8"
                }
            ]
        },
        {
            "author_info": {
                "name": "David Braginsky",
                "href": "/profile/David-Braginsky"
            },
            "answer_text": "Not to be snarky, but this depends on how you define \"computer\", \"generate\", and and \"random\". If you assume that: \"random\" means something that we don't currently know how to predict (like radioactive decay, complex physical processes, etc...) \"computer\" means some idealized machine that is not affected by external occurrences (such as radiation flipping memory bits) \"generate\" means produce some output using a deterministic algorithm with known inputs then the answer is no. Since we have an algorithm to predict the output, it violates the assumption of randomness. In general, \"randomness\" is only meaningful if you lack the ability to predict something. Whether true randomness exists depends on your views about the universe, and whether it is governed by a set of laws that can (at least in theory) be enumerated. More practically, there are a lot of systems that we don't understand well enough to predict. There are also systems that we do understand, but lack the computational resources to make accurate predictions. Computers can use them to generate numbers that are, for all practical purposes, random. ",
            "date": "Answered October 5, 2010",
            "views": "628",
            "upvotes": " View 2 Upvoters",
            "upvoters": [
                {
                    "user_id": "Rakesh Verma",
                    "user_href": "/profile/Rakesh-Verma-1038"
                },
                {
                    "user_id": "Mark Sinsheimer",
                    "user_href": "/profile/Mark-Sinsheimer-2"
                }
            ]
        },
        {
            "author_info": {
                "name": "Andrew Silverman",
                "href": "/profile/Andrew-Silverman-10"
            },
            "answer_text": "This is all a question of how the randomness is created. In order to get true randomness where you extract a series of binary bits that have a completely equal probability of being one or zero (distributed statistically equally over a large enough set of trials) but no predictability you have to take advantage of some physical phenomenon. A variety of solutions for this now exist such as thermal noise in an electronic circuit, emission of particles from an element undergoing radioactive decay, and so forth. All recent x86-class CPUs now include instructions that produce this kind of true randomness and recent compilers will take advantage of that, but it wasn't always the case. A key characteristic of any computer is that any sequence of instructions that doesn't rely on external input should always produce exactly the same result, which of course is the exact opposite of randomness. Thus, for older computers it became necessary to develop algorithms that would produce a series of apparently random and equally distributed numbers, but the truth is that from a given starting seed value the series of numbers would always be the same for any such algorithm. It was common to use the time of day, for example, as the seed value to keep the sequence from always being the same if a program was started at different times. However, because of this possibility of repeatability, if you knew the starting conditions (or could work them out) you could reproduce the random number sequence, which would be very bad if you were relying on that randomness for cryptography or security purposes. This is why there has now been a migration to physically-based random number generators where security or financial considerations are intertwined with their use. ",
            "date": "Answered July 31, 2020",
            "views": "128",
            "upvotes": " View 2 Upvoters",
            "upvoters": [
                {
                    "user_id": "Michael Wattam",
                    "user_href": "/profile/Michael-Wattam"
                },
                {
                    "user_id": "Raunak Singh Jolly",
                    "user_href": "/profile/Raunak-Singh-Jolly"
                }
            ]
        },
        {
            "author_info": {
                "name": "Gergely M\u00e9sz\u00e1ros",
                "href": "/profile/Gergely-M\u00e9sz\u00e1ros-1"
            },
            "answer_text": "They may or may not. As others stated, \u201ctruly random\u201d may have some strict definitions, which may not be fulfilled without very special hardware, but concerning the \u201chidden algorithm\u201d statement the answer is clear: simple PRNGs(pseudo random generators) are just hidden algorithm (complex functions). They are often initialized with some quasi random source (timer, other \u201crandom\u201d source).Operating system level (often blocking) random sources are \u201ctrue\u201d random generators. These are constantly collecting randomness from several different sources like disk activity, driver timing, keystrokes, processor load, mouse movement, etc. Given a multi user system under load (eg. /dev/random on some linux server) these can be considered true random generator. At least, they are definitely not just hidden algorithms.",
            "date": "Answered August 6, 2017",
            "views": "220",
            "upvotes": " View 1 Upvoter",
            "upvoters": [
                {
                    "user_id": "Abhishek Anand",
                    "user_href": "/profile/Abhishek-Anand-570"
                }
            ]
        },
        {
            "author_info": {
                "name": "Anirban Das",
                "href": "/profile/Anirban-Das-8"
            },
            "answer_text": "Let me try to define what a random number generator(RNG) means: A number generator is random if for any k , when asked to generate a k tuple the generator generates all possible tuples with equal probability.   Say k=2, then a RNG over the natural numbers(this means the RNG outputs natural numbers) is equally likely to output (7,2), (500,500).(1, 1million) etc. Since there are infinite such tuples, and a computer has only finite memory, it cannot possibly recognize all possible tuples and hence will output among a finite number of tuples.  Okay what about RNG over finite sets. Say a RNG only outputs only 0/1. There are 2 possible 1-tuples , 4 possible 2-tuples {(0,0),(0,1),(1,0),(1,1)},   8 possible 3-tuples... 2^k possible k-tuples. There will thus exist a k such that 2^k will exceed the computer's total memory space, and the problem form the above paragraph resurfaces. So apart from the trivial case when the generator generates out of a set of size 1, RNG'S cannot exist. ",
            "date": "Answered July 12, 2013",
            "views": "171",
            "upvotes": " View 3 Upvoters",
            "upvoters": [
                {
                    "user_id": "Peter Odemwingi",
                    "user_href": "/profile/Peter-Odemwingi"
                },
                {
                    "user_id": "Arijit Dasgupta",
                    "user_href": "/profile/Arijit-Dasgupta"
                },
                {
                    "user_id": "Parth Mehta",
                    "user_href": "/profile/Parth-Mehta-355"
                }
            ]
        },
        {
            "author_info": {
                "name": "Shawn Masters",
                "href": "/profile/Shawn-Masters"
            },
            "answer_text": "Software alone can never generate random numbers.  John von Neumann once quipped, \"Anyone who considers arithmetical methods of producing random digits is, of course, in a state of sin.\"  Thus we call of them Pseudo Random Number Generators.   Now the reference paper is Park and Miller (1988) http://www.firstpr.com.au/dsp/rand31/p1192-park.pdf where they talk about how bad many of the generators are. Since then most have been improved, but only within a limited scope.  The question is really are they random enough for your application. ",
            "date": "Answered March 6, 2011",
            "views": "228",
            "upvotes": " View 3 Upvoters",
            "upvoters": [
                {
                    "user_id": "Gokul Raju",
                    "user_href": "/profile/Gokul-Raju"
                },
                {
                    "user_id": "Aditya Kulkarni",
                    "user_href": "/profile/Aditya-Kulkarni-2"
                },
                {
                    "user_id": "Timmy Longfield",
                    "user_href": "/profile/Timmy-Longfield"
                }
            ]
        },
        {
            "author_info": {
                "name": "Ken Quon",
                "href": "/profile/Ken-Quon"
            },
            "answer_text": "Even generating a random number on a computer can be quite difficult.   For the most part, \"random\" numbers generated by a computer are pseudorandom.  The computer uses an algorithm for generating a sequence of numbers that has the properties of a random sequence.  Typically such algorithms are seeded with something like time of day, however, the sequence is totally deterministic.  In other words, if you can replicate the initial conditions of the seed, you can replicate the entire pseudorandom sequence.  This could have implications for security applications, in particular cryptography. Some operating systems, like Linux, have a special file (/dev/random) that serves as a more secure random number generator.  It tries to collect environmental noise from external devices and estimates the number bits of noise / entropy.  Although better, this approach may still have security concerns. True random number generation is usually based on a physical method such as radioactive decay. http://en.wikipedia.org/wiki/Random_number_generationhttp://en.wikipedia.org/wiki/Pseudo-random_number_generatorhttp://en.wikipedia.org/wiki//dev/randomhttp://www.pinkas.net/PAPERS/gpr06.pdf ",
            "date": "Answered October 5, 2010",
            "views": "416",
            "upvotes": " View 1 Upvoter",
            "upvoters": [
                {
                    "user_id": "Comet",
                    "user_href": "/profile/Comet-7"
                }
            ]
        },
        {
            "author_info": {
                "name": "Comet",
                "href": "/profile/Comet-7"
            },
            "answer_text": "For secure programs, one uses random numbers generated from a source which acquires entropy from physical source that current scientific hypotheses affirm as essentially random; the RdRand instruction uses thermal noise; a program can validate it has sufficient entropy by checking the carry bit. John von Neumann cautioned about the misinterpretation of a PRNG[1] as a truly random generator, and joked that \"Anyone who considers arithmetical methods of producing random digits is, of course, in a state of sin.\" Footnotes[1] Pseudorandom number generator - Wikipedia",
            "date": "Answered October 20, 2019",
            "views": "117",
            "upvotes": " View 1 Upvoter ",
            "upvoters": [
                {
                    "user_id": "Arun Tiwari",
                    "user_href": "/profile/Arun-Tiwari-15"
                }
            ]
        },
        {
            "author_info": {
                "name": "Eeshan Malhotra",
                "href": "/profile/Eeshan-Malhotra"
            },
            "answer_text": "There are no known truly random number generating algorithms, but this comic makes a good point:  ",
            "date": "Answered October 12, 2012",
            "views": "162",
            "upvotes": " View 561 Upvoters",
            "upvoters": [
                {
                    "user_id": "Mohit Mahawar",
                    "user_href": "/profile/Mohit-Mahawar-1"
                },
                {
                    "user_id": "Belavadi Prahalad",
                    "user_href": "/profile/Belavadi-Prahalad"
                },
                {
                    "user_id": "Prabhjot Singh Kohli",
                    "user_href": "/profile/Prabhjot-Singh-Kohli"
                },
                {
                    "user_id": "Ruchika Sarpotdar",
                    "user_href": "/profile/Ruchika-Sarpotdar"
                },
                {
                    "user_id": "Yash Bahuguna",
                    "user_href": "/profile/Yash-Bahuguna-6"
                },
                {
                    "user_id": "Supreeth Narasimhaswamy",
                    "user_href": "/profile/Supreeth-Narasimhaswamy"
                },
                {
                    "user_id": "Priya Venkataraman",
                    "user_href": "/profile/Priya-Venkataraman-1"
                },
                {
                    "user_id": "Amogh Deshmukh",
                    "user_href": "/profile/Amogh-Deshmukh-2"
                },
                {
                    "user_id": "Srivatsan Raghunath",
                    "user_href": "/profile/Srivatsan-Raghunath"
                },
                {
                    "user_id": "Robin Todd",
                    "user_href": "/profile/Robin-Todd-1"
                },
                {
                    "user_id": "Shreya Bhandare",
                    "user_href": "/profile/Shreya-Bhandare"
                },
                {
                    "user_id": "Sneha Mohanty",
                    "user_href": "/profile/Sneha-Mohanty-2"
                },
                {
                    "user_id": "Rohit Hill (\u0930\u094b\u0939\u093f\u0924 \u0939\u093f\u0932)",
                    "user_href": "/profile/Rohit-Hill-\u0930\u094b\u0939\u093f\u0924-\u0939\u093f\u0932"
                },
                {
                    "user_id": "Krupa Sagar",
                    "user_href": "/profile/Krupa-Sagar"
                },
                {
                    "user_id": "Kartik Gupta",
                    "user_href": "/profile/Kartik-Gupta-10"
                },
                {
                    "user_id": "Darpan Kalra",
                    "user_href": "/profile/Darpan-Kalra"
                },
                {
                    "user_id": "Srishti Singh",
                    "user_href": "/profile/Srishti-Singh-35"
                },
                {
                    "user_id": "Amaan Cheval",
                    "user_href": "/profile/Amaan-Cheval-1"
                },
                {
                    "user_id": "Neelabh Kumar",
                    "user_href": "/profile/Neelabh-Kumar"
                },
                {
                    "user_id": "Charvi Rastogi",
                    "user_href": "/profile/Charvi-Rastogi"
                },
                {
                    "user_id": "Vatsal Gandhi",
                    "user_href": "/profile/Vatsal-Gandhi-3"
                },
                {
                    "user_id": "Saurabh Kumar Agrawal",
                    "user_href": "/profile/Saurabh-Kumar-Agrawal"
                },
                {
                    "user_id": "Pratik Agrawal",
                    "user_href": "/profile/Pratik-Agrawal-13"
                },
                {
                    "user_id": "Prasenjit Dey",
                    "user_href": "/profile/Prasenjit-Dey-9"
                },
                {
                    "user_id": "Karthikeya Bolla",
                    "user_href": "/profile/Karthikeya-Bolla"
                },
                {
                    "user_id": "Shankar N",
                    "user_href": "/profile/Shankar-N-2"
                },
                {
                    "user_id": "Lavanya Malladi",
                    "user_href": "/profile/Lavanya-Malladi"
                },
                {
                    "user_id": "Rohit Kumar Singh",
                    "user_href": "/profile/Rohit-Kumar-Singh-3"
                },
                {
                    "user_id": "Siddharth Dash",
                    "user_href": "/profile/Siddharth-Dash"
                },
                {
                    "user_id": "Ash Win",
                    "user_href": "/profile/Ash-Win-28"
                },
                {
                    "user_id": "Nishant Nikhil",
                    "user_href": "/profile/Nishant-Nikhil"
                },
                {
                    "user_id": "Anish Sheela",
                    "user_href": "/profile/Anish-Sheela"
                },
                {
                    "user_id": "Preeti Sharma",
                    "user_href": "/profile/Preeti-Sharma-23"
                },
                {
                    "user_id": "Peeyush Kumar",
                    "user_href": "/profile/Peeyush-Kumar-6"
                },
                {
                    "user_id": "Geetha Krishna",
                    "user_href": "/profile/Geetha-Krishna-5"
                },
                {
                    "user_id": "Abhinav Jain",
                    "user_href": "/profile/Abhinav-Jain-44"
                },
                {
                    "user_id": "Kabir Nazir",
                    "user_href": "/profile/Kabir-Nazir"
                },
                {
                    "user_id": "Hari Haran",
                    "user_href": "/profile/Hari-Haran-28"
                },
                {
                    "user_id": "Sanjay Kirushnan",
                    "user_href": "/profile/Sanjay-Kirushnan"
                },
                {
                    "user_id": "Abhinav Vuddagiri",
                    "user_href": "/profile/Abhinav-Vuddagiri"
                },
                {
                    "user_id": "Shivankur Gupta",
                    "user_href": "/profile/Shivankur-Gupta"
                },
                {
                    "user_id": "Harita Rao",
                    "user_href": "/profile/Harita-Rao"
                },
                {
                    "user_id": "SP Harish Subramanian",
                    "user_href": "/profile/SP-Harish-Subramanian"
                },
                {
                    "user_id": "Nitish Vimal Dhawan",
                    "user_href": "/profile/Nitish-Vimal-Dhawan"
                },
                {
                    "user_id": "Vikas Dubey",
                    "user_href": "/profile/\u0bb5\u0bbf\u0b95\u0bbe\u0bb8\u0bcd-\u0ba4\u0bc1\u0baa\u0bc7\u0baf\u0bcd-Vikas-Dubey"
                },
                {
                    "user_id": "Armin Hanik",
                    "user_href": "/profile/Armin-Hanik"
                },
                {
                    "user_id": "Puneeth PS",
                    "user_href": "/profile/Puneeth-PS"
                },
                {
                    "user_id": "Vinayak Nagri",
                    "user_href": "/profile/Vinayak-Nagri"
                },
                {
                    "user_id": "Amit Sharma",
                    "user_href": "/profile/Amit-Sharma-23"
                },
                {
                    "user_id": "Amit Patil",
                    "user_href": "/profile/Amit-Patil-4"
                },
                {
                    "user_id": "Manikandan Selvaraj",
                    "user_href": "/profile/Manikandan-Selvaraj-3"
                },
                {
                    "user_id": "Puneet Gupta",
                    "user_href": "/profile/Puneet-Gupta-97"
                },
                {
                    "user_id": "Aman Goel",
                    "user_href": "/profile/Aman-Goel-9"
                },
                {
                    "user_id": "Abhilash Mhaisne",
                    "user_href": "/profile/Abhilash-Mhaisne"
                },
                {
                    "user_id": "Siddharth Parmar",
                    "user_href": "/profile/Siddharth-Parmar-3"
                },
                {
                    "user_id": "Subrata Pal",
                    "user_href": "/profile/Subrata-Pal"
                },
                {
                    "user_id": "Ryan D'souza",
                    "user_href": "/profile/Ryan-Dsouza-19"
                },
                {
                    "user_id": "Vishweshawar Bandle",
                    "user_href": "/profile/Vishweshawar-Bandle"
                },
                {
                    "user_id": "Tejas Jadhav",
                    "user_href": "/profile/Tejas-Jadhav-6"
                },
                {
                    "user_id": "Prateek Sharma",
                    "user_href": "/profile/Prateek-Sharma-69"
                },
                {
                    "user_id": "Tanmay Nagori",
                    "user_href": "/profile/Tanmay-Nagori"
                },
                {
                    "user_id": "Abhishek Verma",
                    "user_href": "/profile/Abhishek-Verma-332"
                },
                {
                    "user_id": "Samruddhi Deshmukh",
                    "user_href": "/profile/Samruddhi-Deshmukh"
                },
                {
                    "user_id": "Mimansa Jaiswal",
                    "user_href": "/profile/Mimansa-Jaiswal"
                },
                {
                    "user_id": "Vinayak Nayak",
                    "user_href": "/profile/Vinayak-Nayak-6"
                },
                {
                    "user_id": "Vivek Nagarajan",
                    "user_href": "/profile/Vivek-Nagarajan-1"
                },
                {
                    "user_id": "Vikram Banerjee",
                    "user_href": "/profile/Vikram-Banerjee"
                },
                {
                    "user_id": "Darshan Shah",
                    "user_href": "/profile/Darshan-Shah-14"
                },
                {
                    "user_id": "Abhinav Ramana",
                    "user_href": "/profile/Abhinav-Ramana-1"
                },
                {
                    "user_id": "Bikramjit Karmakar",
                    "user_href": "/profile/Bikramjit-Karmakar"
                },
                {
                    "user_id": "Ishan Khedkar",
                    "user_href": "/profile/Ishan-Khedkar"
                },
                {
                    "user_id": "Meet Dave",
                    "user_href": "/profile/Meet-Dave-4"
                },
                {
                    "user_id": "Shikhar Awasthi",
                    "user_href": "/profile/Shikhar-Awasthi"
                },
                {
                    "user_id": "Aakash Garg",
                    "user_href": "/profile/Aakash-Garg-5"
                },
                {
                    "user_id": "Agnishom Chattopadhyay",
                    "user_href": "/profile/Agnishom-Chattopadhyay"
                },
                {
                    "user_id": "Mayank Jain",
                    "user_href": "/profile/Mayank-Jain-99"
                },
                {
                    "user_id": "Rohit Kewalramani",
                    "user_href": "/profile/Rohit-Kewalramani"
                },
                {
                    "user_id": "Shivam Anand",
                    "user_href": "/profile/Shivam-Anand"
                },
                {
                    "user_id": "Nikita Patil",
                    "user_href": "/profile/Nikita-Patil-14"
                },
                {
                    "user_id": "Rishab Chirania",
                    "user_href": "/profile/Rishab-Chirania"
                },
                {
                    "user_id": "Satyakam Dash",
                    "user_href": "/profile/Satyakam-Dash"
                },
                {
                    "user_id": "Jaisal Chauhan",
                    "user_href": "/profile/Jaisal-Chauhan"
                },
                {
                    "user_id": "Himanshu Jain",
                    "user_href": "/profile/Himanshu-Jain-64"
                },
                {
                    "user_id": "Shuby Deshpande",
                    "user_href": "/profile/Shuby-Deshpande"
                },
                {
                    "user_id": "Deepankar Arya",
                    "user_href": "/profile/Deepankar-Arya"
                },
                {
                    "user_id": "Afsaar Ahmad",
                    "user_href": "/profile/Afsaar-Ahmad"
                },
                {
                    "user_id": "Ronak Vyas",
                    "user_href": "/profile/Ronak-Vyas-1"
                },
                {
                    "user_id": "Bhavya Sri Dasari",
                    "user_href": "/profile/Bhavya-Sri-Dasari"
                },
                {
                    "user_id": "Harshit Aneja",
                    "user_href": "/profile/Harshit-Aneja"
                },
                {
                    "user_id": "Athira Nair",
                    "user_href": "/profile/Athira-Nair-1"
                },
                {
                    "user_id": "Namit Sinha",
                    "user_href": "/profile/Namit-Sinha"
                },
                {
                    "user_id": "Utkarsh Gupta",
                    "user_href": "/profile/Utkarsh-Gupta-45"
                },
                {
                    "user_id": "Pratik Joshi",
                    "user_href": "/profile/Pratik-Joshi-13"
                },
                {
                    "user_id": "Shobhit Monga(\u0936\u094b\u092d\u093f\u0924 \u092e\u094b\u0902\u0917\u093e)",
                    "user_href": "/profile/Shobhit-Monga-\u0936\u094b\u092d\u093f\u0924-\u092e\u094b\u0902\u0917\u093e"
                },
                {
                    "user_id": "Ketan Bhardwaj",
                    "user_href": "/profile/Ketan-Bhardwaj"
                },
                {
                    "user_id": "Pankaj Barnwal",
                    "user_href": "/profile/Pankaj-Barnwal"
                },
                {
                    "user_id": "Ravi Shekhar",
                    "user_href": "/profile/Ravi-Shekhar-4"
                },
                {
                    "user_id": "Nipun Arora",
                    "user_href": "/profile/Nipun-Arora-1"
                },
                {
                    "user_id": "Deepak Malik",
                    "user_href": "/profile/Deepak-Malik-5"
                },
                {
                    "user_id": "Akhilesh Kumar",
                    "user_href": "/profile/Akhilesh-Kumar-101"
                },
                {
                    "user_id": "Suraj Immanuel",
                    "user_href": "/profile/Suraj-Immanuel"
                },
                {
                    "user_id": "Jenenliu Liu",
                    "user_href": "/profile/Jenenliu-Liu"
                },
                {
                    "user_id": "Aneek Roy",
                    "user_href": "/profile/Aneek-Roy"
                },
                {
                    "user_id": "Sajal Aggarwal",
                    "user_href": "/profile/Sajal-Aggarwal"
                },
                {
                    "user_id": "Amrishan N Vairavan",
                    "user_href": "/profile/Amrishan-N-Vairavan"
                },
                {
                    "user_id": "Purva Diwanji",
                    "user_href": "/profile/Purva-Diwanji"
                },
                {
                    "user_id": "Vaibhav Tripathi",
                    "user_href": "/profile/Vaibhav-Tripathi"
                },
                {
                    "user_id": "Shyam Menon",
                    "user_href": "/profile/Shyam-Menon-5"
                },
                {
                    "user_id": "Santhosh Sriram",
                    "user_href": "/profile/Santhosh-Sriram"
                },
                {
                    "user_id": "Sweety Bhartia",
                    "user_href": "/profile/Sweety-Bhartia"
                },
                {
                    "user_id": "Abhishek Arora",
                    "user_href": "/profile/Abhishek-Arora-31"
                },
                {
                    "user_id": "Amarinder Singh",
                    "user_href": "/profile/Amarinder-Singh-4"
                },
                {
                    "user_id": "Abhijeet Patil",
                    "user_href": "/profile/Abhijeet-Patil-5"
                },
                {
                    "user_id": "Alankrit Kharbanda",
                    "user_href": "/profile/Alankrit-Kharbanda"
                },
                {
                    "user_id": "Earl Chua",
                    "user_href": "/profile/Earl-Chua"
                },
                {
                    "user_id": "Gurbaksh Singh Dhillon",
                    "user_href": "/profile/Gurbaksh-Singh-Dhillon"
                },
                {
                    "user_id": "Yashaswi Chawla",
                    "user_href": "/profile/Yashaswi-Chawla"
                },
                {
                    "user_id": "Haripriya Baskar",
                    "user_href": "/profile/Haripriya-Baskar-1"
                },
                {
                    "user_id": "Praveen Prabhu",
                    "user_href": "/profile/Praveen-Prabhu-3"
                },
                {
                    "user_id": "Ankit Rana",
                    "user_href": "/profile/Ankit-Rana"
                },
                {
                    "user_id": "Gaurav",
                    "user_href": "/profile/Gaurav-124"
                },
                {
                    "user_id": "Rohin Arora",
                    "user_href": "/profile/Rohin-Arora"
                },
                {
                    "user_id": "Devang Shah",
                    "user_href": "/profile/Devang-Shah-10"
                },
                {
                    "user_id": "Michael Christensen",
                    "user_href": "/profile/Michael-Christensen-9"
                },
                {
                    "user_id": "Devershetty Samarth",
                    "user_href": "/profile/Devershetty-Samarth"
                },
                {
                    "user_id": "Anuj Gupta",
                    "user_href": "/profile/Anuj-Gupta-151"
                },
                {
                    "user_id": "Abhyudaya Ranglani",
                    "user_href": "/profile/Abhyudaya-Ranglani"
                },
                {
                    "user_id": "Peter Ciang",
                    "user_href": "/profile/Peter-Ciang"
                },
                {
                    "user_id": "Simranjeet Singh",
                    "user_href": "/profile/Simranjeet-Singh-46"
                },
                {
                    "user_id": "Srijan Bhatt",
                    "user_href": "/profile/Srijan-Bhatt-2"
                },
                {
                    "user_id": "Swaroop Lingaraj",
                    "user_href": "/profile/Swaroop-Lingaraj"
                },
                {
                    "user_id": "Ankit Singh",
                    "user_href": "/profile/Ankit-Singh-51"
                },
                {
                    "user_id": "Ivan Wangsa",
                    "user_href": "/profile/Ivan-Wangsa"
                },
                {
                    "user_id": "Account Deleted",
                    "user_href": "/profile/Account-Deleted-54"
                },
                {
                    "user_id": "Sarthak Gaur",
                    "user_href": "/profile/Sarthak-Gaur"
                },
                {
                    "user_id": "Saurabh Rajani",
                    "user_href": "/profile/Saurabh-Rajani"
                },
                {
                    "user_id": "Shreyas Sangai",
                    "user_href": "/profile/Shreyas-Sangai"
                },
                {
                    "user_id": "Abhishek Sharma",
                    "user_href": "/profile/Abhishek-Sharma-156"
                },
                {
                    "user_id": "Anil Panghal",
                    "user_href": "/profile/Anil-Panghal"
                },
                {
                    "user_id": "Vivek Anand",
                    "user_href": "/profile/Vivek-Anand-154"
                },
                {
                    "user_id": "Sarat Sista",
                    "user_href": "/profile/Sarat-Sista"
                },
                {
                    "user_id": "Rushikesh Pawar",
                    "user_href": "/profile/Rushikesh-Pawar-5"
                },
                {
                    "user_id": "Rangoli Goyal",
                    "user_href": "/profile/Rangoli-Goyal"
                },
                {
                    "user_id": "Himani Garg",
                    "user_href": "/profile/Himani-Garg"
                },
                {
                    "user_id": "Aditya Veer Singh",
                    "user_href": "/profile/Aditya-Veer-Singh"
                },
                {
                    "user_id": "Akash Garg",
                    "user_href": "/profile/Akash-Garg-32"
                },
                {
                    "user_id": "Pratik Haware",
                    "user_href": "/profile/Pratik-Haware"
                },
                {
                    "user_id": "Tushar Rajput",
                    "user_href": "/profile/Tushar-Rajput-1"
                },
                {
                    "user_id": "Asmita",
                    "user_href": "/profile/Asmita-84"
                },
                {
                    "user_id": "Gaurav Jha",
                    "user_href": "/profile/Gaurav-Jha-9"
                },
                {
                    "user_id": "Aravind Loganathan",
                    "user_href": "/profile/Aravind-Loganathan"
                },
                {
                    "user_id": "Vidhya Shankar",
                    "user_href": "/profile/Vidhya-Shankar"
                },
                {
                    "user_id": "Sunil Singh",
                    "user_href": "/profile/Sunil-Singh-34"
                },
                {
                    "user_id": "Prithvi Lakshminarayanan",
                    "user_href": "/profile/Prithvi-Lakshminarayanan"
                },
                {
                    "user_id": "Kamala Narayan B.S.",
                    "user_href": "/profile/Kamala-Narayan-B-S"
                },
                {
                    "user_id": "Pramod Bhadana",
                    "user_href": "/profile/Pramod-Bhadana"
                },
                {
                    "user_id": "Rohith Mars",
                    "user_href": "/profile/Rohith-Mars"
                },
                {
                    "user_id": "Vamshi Reddy",
                    "user_href": "/profile/Vamshi-Reddy-4"
                },
                {
                    "user_id": "Manjusha Gopinath",
                    "user_href": "/profile/Manjusha-Gopinath"
                },
                {
                    "user_id": "Harshini Sankar",
                    "user_href": "/profile/Harshini-Sankar-1"
                }
            ]
        },
        {
            "author_info": {
                "name": "Mark Harrison",
                "href": "/profile/Mark-Harrison-2"
            },
            "answer_text": " http://xkcd.com/221/ ",
            "date": "Answered December 30, 2011",
            "views": "31",
            "upvotes": " View 60 Upvoters",
            "upvoters": [
                {
                    "user_id": "Samruddhi Deshmukh",
                    "user_href": "/profile/Samruddhi-Deshmukh"
                },
                {
                    "user_id": "Vivek Nagarajan",
                    "user_href": "/profile/Vivek-Nagarajan-1"
                },
                {
                    "user_id": "Abhijat Biswas",
                    "user_href": "/profile/Abhijat-Biswas"
                },
                {
                    "user_id": "Account Deleted",
                    "user_href": "/profile/Account-Deleted-54"
                },
                {
                    "user_id": "Prasad Vasudevan",
                    "user_href": "/profile/Prasad-Vasudevan"
                },
                {
                    "user_id": "Bhargav Ram",
                    "user_href": "/profile/Bhargav-Ram-12"
                },
                {
                    "user_id": "Pratheek Naidu",
                    "user_href": "/profile/Pratheek-Naidu"
                },
                {
                    "user_id": "Ahmed Qamar",
                    "user_href": "/profile/Ahmed-Qamar"
                },
                {
                    "user_id": "Arjun S Bharadwaj",
                    "user_href": "/profile/Arjun-S-Bharadwaj-1"
                },
                {
                    "user_id": "Rakesh Kavodkar",
                    "user_href": "/profile/Rakesh-Kavodkar"
                },
                {
                    "user_id": "Utku \u00d6zdemir",
                    "user_href": "/profile/Utku-\u00d6zdemir"
                },
                {
                    "user_id": "Lucas Azzola",
                    "user_href": "/profile/Lucas-Azzola"
                },
                {
                    "user_id": "Vikas Yadav",
                    "user_href": "/profile/Vikas-Yadav"
                },
                {
                    "user_id": "Egor Egorov",
                    "user_href": "/profile/Egor-Egorov"
                },
                {
                    "user_id": "Michael Mattheakis",
                    "user_href": "/profile/Michael-Mattheakis"
                },
                {
                    "user_id": "Abhimanyu Batra",
                    "user_href": "/profile/Abhimanyu-Batra"
                },
                {
                    "user_id": "Keshav Shrikant",
                    "user_href": "/profile/Keshav-Shrikant"
                },
                {
                    "user_id": "Rohit Kumar Gupta",
                    "user_href": "/profile/Rohit-Kumar-Gupta-2"
                },
                {
                    "user_id": "Carlos Mart\u00edn",
                    "user_href": "/profile/Carlos-Mart\u00edn"
                },
                {
                    "user_id": "Riyad Parvez",
                    "user_href": "/profile/Riyad-Parvez"
                },
                {
                    "user_id": "Gautam Bajaj",
                    "user_href": "/profile/Gautam-Bajaj"
                },
                {
                    "user_id": "Suraj Menon",
                    "user_href": "/profile/Suraj-Menon-3"
                },
                {
                    "user_id": "Jim Muller",
                    "user_href": "/profile/Jim-Muller"
                },
                {
                    "user_id": "Vivek Ravishanker",
                    "user_href": "/profile/Vivek-Ravishanker"
                },
                {
                    "user_id": "Gautam Sewani",
                    "user_href": "/profile/Gautam-Sewani"
                },
                {
                    "user_id": "Ravikiran Sastry PV",
                    "user_href": "/profile/Ravikiran-Sastry-PV"
                },
                {
                    "user_id": "Maruti Sridhar",
                    "user_href": "/profile/Maruti-Sridhar"
                },
                {
                    "user_id": "Betsy Megas",
                    "user_href": "/profile/Betsy-Megas"
                },
                {
                    "user_id": "Aditya Kulkarni",
                    "user_href": "/profile/Aditya-Kulkarni-2"
                },
                {
                    "user_id": "Siddharth Bhandari",
                    "user_href": "/profile/Siddharth-Bhandari"
                },
                {
                    "user_id": "Mattias Petter Johansson",
                    "user_href": "/profile/Mattias-Petter-Johansson"
                },
                {
                    "user_id": "Rahee Borade",
                    "user_href": "/profile/Rahee-Borade"
                },
                {
                    "user_id": "Garvit Juniwal",
                    "user_href": "/profile/Garvit-Juniwal"
                },
                {
                    "user_id": "Balaji Krishnan",
                    "user_href": "/profile/Balaji-Krishnan-4"
                },
                {
                    "user_id": "Tejas Baldev",
                    "user_href": "/profile/Tejas-Baldev"
                },
                {
                    "user_id": "Weihua Zhu",
                    "user_href": "/profile/Weihua-Zhu"
                },
                {
                    "user_id": "Nitesh Singhal",
                    "user_href": "/profile/Nitesh-Singhal"
                },
                {
                    "user_id": "Abhay Prakash",
                    "user_href": "/profile/Abhay-Prakash"
                },
                {
                    "user_id": "Anubhav Agarwal",
                    "user_href": "/profile/Anubhav-Agarwal-1"
                },
                {
                    "user_id": "Deshank Baranwal",
                    "user_href": "/profile/Deshank-Baranwal"
                },
                {
                    "user_id": "Pradeep George Mathias",
                    "user_href": "/profile/Pradeep-George-Mathias"
                },
                {
                    "user_id": "Jing Yang",
                    "user_href": "/profile/Jing-Yang"
                },
                {
                    "user_id": "Suresh Iyer",
                    "user_href": "/profile/Suresh-Iyer-2"
                },
                {
                    "user_id": "Sumanth Kolar",
                    "user_href": "/profile/Sumanth-Kolar"
                },
                {
                    "user_id": "Jan Kalis",
                    "user_href": "/profile/Jan-Kalis"
                },
                {
                    "user_id": "Aditya Anirudh Tulasi",
                    "user_href": "/profile/Aditya-Anirudh-Tulasi"
                },
                {
                    "user_id": "Burak Y\u00fccesoy",
                    "user_href": "/profile/Burak-Y\u00fccesoy"
                },
                {
                    "user_id": "Debprotim Roy",
                    "user_href": "/profile/Debprotim-Roy"
                },
                {
                    "user_id": "Qasim Zeeshan",
                    "user_href": "/profile/Qasim-Zeeshan"
                },
                {
                    "user_id": "Kevin Aditya",
                    "user_href": "/profile/Kevin-Aditya"
                },
                {
                    "user_id": "Doug DesCombaz",
                    "user_href": "/profile/Doug-DesCombaz"
                },
                {
                    "user_id": "Ashar Fuadi",
                    "user_href": "/profile/Ashar-Fuadi"
                },
                {
                    "user_id": "Yoshihiro Sawa",
                    "user_href": "/profile/Yoshihiro-Sawa"
                },
                {
                    "user_id": "Shreyan Chowdhury",
                    "user_href": "/profile/Shreyan-Chowdhury"
                },
                {
                    "user_id": "Eran Brodet",
                    "user_href": "/profile/Eran-Brodet"
                },
                {
                    "user_id": "Hongliang Liu",
                    "user_href": "/profile/Hongliang-Liu"
                },
                {
                    "user_id": "Nitica Sakharwade",
                    "user_href": "/profile/Nitica-Sakharwade"
                },
                {
                    "user_id": "Emil Bay",
                    "user_href": "/profile/Emil-Bay"
                },
                {
                    "user_id": "Vinith Subramaniam",
                    "user_href": "/profile/Vinith-Subramaniam"
                },
                {
                    "user_id": "Sergio Salom\u00f3n Garc\u00eda",
                    "user_href": "/profile/Sergio-Salom\u00f3n-Garc\u00eda"
                }
            ]
        },
        {
            "author_info": {
                "name": "Koncz Imre",
                "href": "/profile/Koncz-Imre"
            },
            "answer_text": "So we can ask if the random generator is \"random enough\" for a particular application. A very important application is Cryptographically secure pseudorandom number generator, which is secure enough for typical cryptographic applications,  (it is allowed to use some randomness, e.g  a very short bit series, which is really random, e.g. come from termal noise or radioactive source hardware.) It is a theoretical question, if a Cryptographically secure pseudorandom number generator exist at all. Interestingly, existence such a generator  is equivalent with [math]P \\neq NP [/math], which tought to be true by the most, but one of the most well known open question.See:Pseudorandom generator ",
            "date": "Answered December 19, 2014",
            "views": "416",
            "upvotes": " View 1 Upvoter",
            "upvoters": [
                {
                    "user_id": "Peter Nelson",
                    "user_href": "/profile/Peter-Nelson-23"
                }
            ]
        },
        {
            "author_info": {
                "name": "Hilmi Do\u011fu",
                "href": "/profile/Hilmi-Do\u011fu"
            },
            "answer_text": "In philosophical way, definition of random variable is, there is some output(this can be object, number etc.) and we don\u2019t want to know why the output is that.But when we start researching reasons under this output, the randomness will fade away.For example, thrown die shows 6 and we don\u2019t know why 6 is shown.But when we calculate force,momentum etc. we can expect which number will be shown and the number is no more random variable for us. When I write a number in 1\u201310 and ask my friend which number I\u2019ve written, it is a uniformly distributed random variable to my friend and every number has equal probability to my friend.But for me I already know the number and this is not random variable for me.So, a random variable is relative thing. Measuring something with very much precise could help us on creating random variables.Because this number can be affected by many things, even our measurement. In computer algorithms, they maps a random variable to another random variable but its source must be from real-life to make random variable less \u2018predictable\u2019, as Gokul Praveen says. ",
            "date": "Answered June 3, 2016",
            "views": "202",
            "upvotes": "0"
        },
        {
            "author_info": {
                "name": "Ertan Dogrultan",
                "href": "/profile/Ertan-Dogrultan"
            },
            "answer_text": "As mentioned by User random.org uses atmospheric noise to generate numbers.  Also if you read http://www.random.org/randomness/ further, they mention some other interesting methods which rely on radioactive decay. http://www.fourmilab.ch/hotbits/ These type of methods which use physical phenomena are referred as True Random Number Generators.  In real world applications, Pseudo-Random Number Generators are used due to efficiency advantage. Also, if you're doing simulations etc, you want to be able to generate the same pattern by giving the same seed, so you should  actually prefer a deterministic algorithm. The most simple one is probably linear congruential generator. ",
            "date": "Answered September 18, 2012",
            "views": "352",
            "upvotes": " View 1 Upvoter",
            "upvoters": [
                {
                    "user_id": "Andrew Wrigley",
                    "user_href": "/profile/Andrew-Wrigley-8"
                }
            ]
        },
        {
            "author_info": {
                "name": "Oyvind Grinde",
                "href": "/profile/Oyvind-Grinde"
            },
            "answer_text": "Many computers are equipped with a Trusted Platform Module (TPM) that provides certified true random number generators. It is like a smart card chip with a physical process for generating random noise. Windows 7 is certified under Common Criteria, and the Security Target says: \u201cFCS_RBG_EXT.1.1   The TSF shall perform all random bit generation (RBG) services in accordance with [NIST Special Publication 800-90] implemented in a FIPS-validated cryptomodule operating in FIPS mode seeded by an entropy source that accumulates entropy from [a combination of hardware-based and software-based noise sources]. Application Note: When a Trusted Platform Module (TPM) chip is available in the underlying hardware, the TOE will utilize its hardware-based noise source features to improve random number generation.\u201d ",
            "date": "Answered August 7, 2013",
            "views": "534",
            "upvotes": " View 3 Upvoters",
            "upvoters": [
                {
                    "user_id": "Comet",
                    "user_href": "/profile/Comet-7"
                },
                {
                    "user_id": "Mark Sinsheimer",
                    "user_href": "/profile/Mark-Sinsheimer-2"
                },
                {
                    "user_id": "Avram Cheaney",
                    "user_href": "/profile/Avram-Cheaney"
                }
            ]
        },
        {
            "author_info": {
                "name": "Rahul Golwalkar",
                "href": "/profile/Rahul-Golwalkar"
            },
            "answer_text": "One of the properties of random numbers is that should be such that no person can predict the number, with the condition that that person has access to all the data existing in the universe and unlimited computing power.But all the algorithms that we use are deterministic and based on existing data or the current time. So, we cannot actually get a random number. So, until we can exploit the Heisenberg's Uncertainty Principle or Schrodingers Cat Exp. I suppose you might as well use the following function. :-P   ",
            "date": "Answered February 9, 2013",
            "views": "293",
            "upvotes": " View 2 Upvoters",
            "upvoters": [
                {
                    "user_id": "Rakesh Verma",
                    "user_href": "/profile/Rakesh-Verma-1038"
                },
                {
                    "user_id": "Deeksha Jain",
                    "user_href": "/profile/Deeksha-Jain"
                }
            ]
        },
        {
            "author_info": {
                "name": "Account Deleted",
                "href": "/profile/Account-Deleted-54"
            },
            "answer_text": "True random numbers can only be generated from a natural source. Any program which uses only an 'algorithm'(math) is not truly random. But it is random enough for any purpose you may require it for! I once wrote a program, which generates true random numbers from laptop's microphone noise. But then, why go through such complexities when pseudo is good enough. ",
            "date": "Answered December 19, 2014",
            "views": "363",
            "upvotes": " View 2 Upvoters",
            "upvoters": [
                {
                    "user_id": "Michael Hamburg",
                    "user_href": "/profile/Michael-Hamburg"
                },
                {
                    "user_id": "Will Pringle",
                    "user_href": "/profile/Will-Pringle"
                }
            ]
        },
        {
            "author_info": {
                "name": "Daniel Hazelton",
                "href": "/profile/Daniel-Hazelton"
            },
            "answer_text": "If you are referring to a programmatic random number generator then... No.  On the other hand... For several years Intel produced a set of processors that contained an intentional electrical flaw. There was an interface provided to actually sample this electrical flaw and process it through an analog-to-digital converter (or similar) to generate a truly random number based off an unpredictable random process. ",
            "date": "Answered December 14, 2015",
            "views": "153",
            "upvotes": " View 1 Upvoter",
            "upvoters": [
                {
                    "user_id": "Hilmi Do\u011fu",
                    "user_href": "/profile/Hilmi-Do\u011fu"
                },
                {
                    "user_id": "Prithvi Lakshminarayanan",
                    "user_href": "/profile/Prithvi-Lakshminarayanan"
                }
            ]
        },
        {
            "author_info": {
                "name": "Luke Johnston",
                "href": "/profile/Luke-Johnston"
            },
            "answer_text": "No. I made a \"random\" number generator by getting the get the time in seconds and mil seconds. The only way to have a truly \"random\" number is to have a keylogger look through all the numbers the user has typed in a day, week, month. Because the numbers we type are random ",
            "date": "Answered October 12, 2012",
            "views": "206",
            "upvotes": " View 1 Upvoter",
            "upvoters": [
                {
                    "user_id": "Hans-Christian Heinz",
                    "user_href": "/profile/Hans-Christian-Heinz"
                }
            ]
        },
        {
            "author_info": {
                "name": "Shreyans Doshi",
                "href": "/profile/Shreyans-Doshi"
            },
            "answer_text": "Every library has their own implementation for random numbers, but it never generates pure random numbers :   But still some function can do that upto very high certainty. Those functions are mainly designed for cryptographic applications. ",
            "date": "Answered January 17, 2015",
            "views": "246",
            "upvotes": "0"
        },
        {
            "author_info": {
                "name": "Tieming Ji",
                "href": "/profile/Tieming-Ji"
            },
            "answer_text": "The short answer is \"No, there is no truly random number generation function so far.\" ",
            "date": "Answered October 30, 2010",
            "views": "102",
            "upvotes": " View 3 Upvoters",
            "upvoters": [
                {
                    "user_id": "Rakesh Verma",
                    "user_href": "/profile/Rakesh-Verma-1038"
                }
            ]
        },
        {
            "author_info": {
                "name": "David Johnston",
                "href": "/profile/David-Johnston-271"
            },
            "answer_text": "As always, it depends. An algorithm is an arrangement of more primitive operations. In a computer those primitive operations are the machine code instructions and accessing accessible hardware. If the instructions and hardware is all deterministic then the algorithm can only be deterministic. If the underlying instructions or accessible hardware has non deterministic functions then nondeterministic algorithms can be built. Modern computers contain either non deterministic instructions (e.g. RdRand, RdSeed). Other computers have entropy sources accessible through memory mapped registers. So in general programs today on modern computers have no problem including non deterministic behaviour because the instructions and underlying hardware support it. This is not true for some small microcontrollers, but it becoming rarer as chip designers become aware of the critical need for RNGs to support cryptography and security in products. ",
            "date": "Answered July 5, 2019",
            "views": "80",
            "upvotes": " View 1 Upvoter",
            "upvoters": [
                {
                    "user_id": "Comet",
                    "user_href": "/profile/Comet-7"
                }
            ]
        },
        {
            "author_info": {
                "name": "Seb Paquet",
                "href": "/profile/Seb-Paquet"
            },
            "answer_text": "Prof. Pierre L'\u00c9cuyer (Universit\u00e9 de Montr\u00e9al) has spent the better part of his career working on this question. Here are some articles by him: http://scholar.google.com/scholar?hl=en&q=p+l'%C3%A9cuyer+random&btnG=Search&as_sdt=2000&as_ylo=&as_vis=0 ",
            "date": "Answered September 30, 2010",
            "views": "28",
            "upvotes": " View 2 Upvoters",
            "upvoters": [
                {
                    "user_id": "Ravi Ranjan",
                    "user_href": "/profile/Ravi-Ranjan-4"
                },
                {
                    "user_id": "Dennis Mwangi",
                    "user_href": "/profile/Dennis-Mwangi"
                },
                {
                    "user_id": "Omar Abdo",
                    "user_href": "/profile/Omar-Abdo-1"
                }
            ]
        },
        {
            "author_info": {
                "name": "Raj Kumar T",
                "href": "/profile/Raj-Kumar-T"
            },
            "answer_text": "No they are not. U need some physical process for that.If you need such truly random numbers, check out this website https://qrng.anu.edu.au/API/api-demo.php ",
            "date": "Answered October 12, 2012",
            "views": "168",
            "upvotes": "0"
        },
        {
            "author_info": {
                "name": "Romain Fortunato",
                "href": "/profile/Romain-Fortunato"
            },
            "answer_text": "Computation theory: Theorem: \u201cthe TRNG is not computable.\u201d DOT ",
            "date": "Answered July 17, 2019",
            "views": "7",
            "upvotes": "0"
        }
    ]
}