{
    "title": "What are the implications of G\u00f6del's incompleteness theorem upon computer science? - Quora",
    "tags": [
        "G\u00f6del\u2019s Incompleteness Theorem",
        "Logic (philosophy)"
    ],
    "response": [
        {
            "author_info": {
                "name": "Buddha Buck",
                "href": "/profile/Buddha-Buck"
            },
            "answer_text": "Two of the great achievements of 1930\u2019s mathematics were Turing\u2019s proof of the insolvability of the Halting Problem and Goedel\u2019s Incompleteness Theorem. The two proofs are both solutions to the same problem set by Hilbert in the late 19th-early 20th century. In fact, the two proofs are based on a similar idea. Turing said that given a program which could solve the Halting Problem, he could construct a second program which the Halting Program could not properly classify, thus proving that the Halting Program couldn\u2019t exist. Goedel said that if a formal axiomatic system was powerful enough, you could express the idea of a mathematical statement was provable. In which he could build a mathematical statement that asserted its own improvability. In which case, not every mathematical statement can be proved or disproved (hence, the system is \u201cincomplete\u201d). In both cases, they use the system to assert a paradox if you make a reasonable assumption about the system. The halting problem can be seen as a natural consequence of Godel\u2019s theorem, and vice versa. In fact, Turing invented the concept of the \u201cTuring Machine\u201d for the purpose of introducing and solving the Halting Problem. The paper which describes the Machine also solves the Halting Problem. Godel also developed a mathematical theory of primitive, general, and partial recursive functions to fully develop the ideas needed to do the express the idea of a mathematical statement was provable bit I mentioned above. His work developing partial recursive functions forms one of the three equivalent original formulations of \u201ccomputability\u201d that form the foundations of computer science. Since Godel\u2019s incompleteness theorem is equivalent to the Halting Problem, then everything which flows from the Halting Problem is, essentially, an implication of Godel\u2019s theorem. ",
            "date": "Answered September 18, 2017",
            "views": "13",
            "upvotes": " View 6 Upvoters",
            "upvoters": [
                {
                    "user_id": "Austin Hu",
                    "user_href": "/profile/Austin-Hu-5"
                },
                {
                    "user_id": "Simon Penny",
                    "user_href": "/profile/Simon-Penny-2"
                },
                {
                    "user_id": "Doug Freyburger",
                    "user_href": "/profile/Doug-Freyburger"
                },
                {
                    "user_id": "Pete Smoot",
                    "user_href": "/profile/Pete-Smoot"
                },
                {
                    "user_id": "Keith Russell",
                    "user_href": "/profile/Keith-Russell-17"
                },
                {
                    "user_id": "Mohan Kumaar",
                    "user_href": "/profile/Mohan-Kumaar"
                }
            ]
        },
        {
            "author_info": {
                "name": "Luis Argerich",
                "href": "/profile/Luis-Argerich"
            },
            "answer_text": "The most important implication is that computers have limitations and will always have limitations. The incompleteness theorem is equivalent to the halting problem which is a way to prove that some problems are undecidable for a computer. This means that there\u2019s no algorithm or technology that can help, in the same way that some theorems can\u2019t be proved some problems just can\u2019t be solved by a computer. In my opinion this has several implications in the world of Artificial Intelligence because there\u2019s a lot of hype sustained by \u201cendless possibilities\u201d and there\u2019s no such a thing. As long as computers are Turing machines they will have limitations and maybe this is the big stopper, there\u2019s no \u201csingularity\u201d or miracle waiting to happen. ",
            "date": "Answered September 18, 2017",
            "views": "14",
            "upvotes": " View 24 Upvoters ",
            "upvoters": [
                {
                    "user_id": "Sanjay Richharia",
                    "user_href": "/profile/Sanjay-Richharia"
                },
                {
                    "user_id": "Emanuel Falkenauer",
                    "user_href": "/profile/Emanuel-Falkenauer"
                },
                {
                    "user_id": "Simon Penny",
                    "user_href": "/profile/Simon-Penny-2"
                },
                {
                    "user_id": "Paul Nations",
                    "user_href": "/profile/Paul-Nations-1"
                },
                {
                    "user_id": "Stan Hanks",
                    "user_href": "/profile/Stan-Hanks"
                },
                {
                    "user_id": "Roman Karpichev",
                    "user_href": "/profile/Roman-Karpichev"
                },
                {
                    "user_id": "Vladislav Zorov",
                    "user_href": "/profile/Vladislav-Zorov"
                },
                {
                    "user_id": "Benjamin Meier",
                    "user_href": "/profile/Benjamin-Meier-5"
                },
                {
                    "user_id": "Giovanni Papini",
                    "user_href": "/profile/Giovanni-Papini-2"
                },
                {
                    "user_id": "D. Ezra Sidran, PhD",
                    "user_href": "/profile/D-Ezra-Sidran-PhD"
                }
            ]
        }
    ]
}